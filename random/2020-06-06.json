[
    {
        "user": "U014W8KJGNL",
        "type": "message",
        "ts": "1591440026.212700",
        "client_msg_id": "2343fb5d-3177-4e3b-9bd5-c62b7cb78462",
        "text": "When placing a starting price bet I place my order by specifying the liability, this as done as such:\n``` string = '{\"jsonrpc\": \"2.0\", \"method\": \"SportsAPING\/v1.0\/placeOrders\", \"params\": {\"marketId\":\"' + marketId + '\",\"instructions\":[{\"selectionId\":\"' + j + '\",\"handicap\":\"0\",\"side\":\"'+ z + '\",\"orderType\":\"MARKET_ON_CLOSE\",\"marketOnCloseOrder\":{\"liability\":\"' + i + '\",\"persistenceType\":\"LAPSE\"}}],\"customerRef\":\"' + ref + '\"},\"id\": 1}'\n\n               ```\nUsing pandas in python j, z and ref are stored separately and are passed to the above code. Is it possible to specify the size instead of the liability? I checked the documentation and it only shows examples where liability is specified. I would just place an order myself but I have removed all my funds from my account as testing some stuff therefore if any of you could help without me having to potentially throw money away that would be great. Cheers.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g5c086dffc44",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5c086dffc44c2caa08388b9f2fcd2ef1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "",
            "real_name": "Sandy Caskie",
            "display_name": "Sandy Caskie",
            "team": "T4G9NBD2M",
            "name": "sandycaskie",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "68v",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "When placing a starting price bet I place my order by specifying the liability, this as done as such:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": " string = '{\"jsonrpc\": \"2.0\", \"method\": \"SportsAPING\/v1.0\/placeOrders\", \"params\": {\"marketId\":\"' + marketId + '\",\"instructions\":[{\"selectionId\":\"' + j + '\",\"handicap\":\"0\",\"side\":\"'+ z + '\",\"orderType\":\"MARKET_ON_CLOSE\",\"marketOnCloseOrder\":{\"liability\":\"' + i + '\",\"persistenceType\":\"LAPSE\"}}],\"customerRef\":\"' + ref + '\"},\"id\": 1}'\n\n               "
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Using pandas in python j, z and ref are stored separately and are passed to the above code. Is it possible to specify the size instead of the liability? I checked the documentation and it only shows examples where liability is specified. I would just place an order myself but I have removed all my funds from my account as testing some stuff therefore if any of you could help without me having to potentially throw money away that would be great. Cheers."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1591440630.215500",
        "edited": {
            "user": "U4H19D1D2",
            "ts": "1591440683.000000"
        },
        "client_msg_id": "AABA5116-A96E-4755-904A-F8BF8E5324D4",
        "text": "For back bets the liability is technically the size but for lays you can only select the liability. This is to prevent you setting a size of x and the BSP being calculated at 1000 or similar (due to error \/ slow start from the suspend guy) you would therefore have a massive exposure (something betfair couldn’t calculate before BSP is reconciled)",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fmhP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For back bets the liability is technically the size but for lays you can only select the liability. This is to prevent you setting a size of x and the BSP being calculated at 1000 or similar (due to error \/ slow start from the suspend guy) you would therefore have a massive exposure (something betfair couldn’t calculate before BSP is reconciled)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1591440646.216000",
        "client_msg_id": "E40F311B-A875-41A0-8882-5F1B3265194D",
        "text": "How come you are not using bflw anyway :pensive:",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DVki",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "How come you are not using bflw anyway "
                            },
                            {
                                "type": "emoji",
                                "name": "pensive",
                                "unicode": "1f614"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1591440683.216400",
        "client_msg_id": "b385407e-08ea-4264-93cc-7adb59cb81cb",
        "text": "Yeah what's with the gross string concatenation?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Gw1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah what's with the gross string concatenation?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1591440707.216900",
        "client_msg_id": "28C533A3-19B4-45D8-978B-9301AB359903",
        "text": ":grin:this problem was solved in 2016 ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mXHu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "emoji",
                                "name": "grin",
                                "unicode": "1f601"
                            },
                            {
                                "type": "text",
                                "text": "this problem was solved in 2016 "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U014W8KJGNL",
        "type": "message",
        "ts": "1591440980.219300",
        "client_msg_id": "4e9c4ed0-442c-4b3b-a84c-33f5f737eeaa",
        "text": "Ok, that makes sense. Legacy issue; I started with this and continually built on it. To be honest, doing it this way has forced me to learn so much I think it has been somewhat beneficial though painful.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g5c086dffc44",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5c086dffc44c2caa08388b9f2fcd2ef1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "",
            "real_name": "Sandy Caskie",
            "display_name": "Sandy Caskie",
            "team": "T4G9NBD2M",
            "name": "sandycaskie",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FAA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ok, that makes sense. Legacy issue; I started with this and continually built on it. To be honest, doing it this way has forced me to learn so much I think it has been somewhat beneficial though painful."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U014W8KJGNL",
        "type": "message",
        "ts": "1591441985.221100",
        "client_msg_id": "7147d6e1-92b1-4642-a01d-bb672f8c5d43",
        "text": "Gross string concatenation? The API transfers data on JSON format therefore need to interact with it in that format :slightly_smiling_face:",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g5c086dffc44",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5c086dffc44c2caa08388b9f2fcd2ef1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "",
            "real_name": "Sandy Caskie",
            "display_name": "Sandy Caskie",
            "team": "T4G9NBD2M",
            "name": "sandycaskie",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PCH\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Gross string concatenation? The API transfers data on JSON format therefore need to interact with it in that format "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1591442969.227300",
        "edited": {
            "user": "UBS7QANF3",
            "ts": "1591443045.000000"
        },
        "client_msg_id": "8308da66-0bde-4b1c-9912-3893afe198ef",
        "text": "It's jarring to see that code here because anyone who uses bflw wouldn't do that:\n\n1. Why hard code some of these things? What if you want to place a LIMIT_ORDER? What if you don't want to use a customerRef?\n2. It's unecessarily verbose, how many places in your code base do you have \"jsonrpc\": \"2.0\"?\n3. JSON has a well defined key:value format so why are you generating the string yourself from data? Just use json.dumps on a dict\nObviously bflw solves all of that for you.\n\nI'm just explaining why I think it's gross. I think legacy constraints are an understandable reason for you to do it that way and I totally understand that it would have been a valuable learning experience. I'm someone who has written multiple trading platforms and Betfair wrappers over his career so I too came to bflw with my own codebase and I'd wholeheartedly recommend you make the switch. Don't waste your time developing\/maintaining your own Betfair API implementation. Reserve that time for developing actual strategies.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zyi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's jarring to see that code here because anyone who uses bflw wouldn't do that:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Why hard code some of these things? What if you want to place a LIMIT_ORDER? What if you don't want to use a customerRef?"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "It's unecessarily verbose, how many places in your code base do you have \"jsonrpc\": \"2.0\"?"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "JSON has a well defined key:value format so why are you generating the string yourself from data? Just use json.dumps on a dict"
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nObviously bflw solves all of that for you.\n\nI'm just explaining why I think it's gross. I think legacy constraints are an understandable reason for you to do it that way and I totally understand that it would have been a valuable learning experience. I'm someone who has written multiple trading platforms and Betfair wrappers over his career so I too came to bflw with my own codebase and I'd wholeheartedly recommend you make the switch. Don't waste your time developing\/maintaining your own Betfair API implementation. Reserve that time for developing actual strategies."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1591442989.227800",
        "client_msg_id": "f3ed9e1a-c533-4e07-8b52-bf08e7789c0e",
        "text": "BTW it's also gross simply because of using the + operator with strings. I prefer f-strings",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ig7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "BTW it's also gross simply because of using the + operator with strings. I prefer f-strings"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U014W8KJGNL",
        "type": "message",
        "ts": "1591445248.237500",
        "client_msg_id": "1e09420b-9d3a-495d-b002-7fc65f471c07",
        "text": "Ye fair points.\n\n1. This is hardcoded as I want to implement the strategy in a rigid way. Also do you not always need a unique customer ref if you place a certain number of orders over a specific period? I remember something along those lines when developing this.\n2. JSON is specified once as it is passed directly to make an order.\n3. Ye that is the format though when I was developing it I specified this way and don't see why I should change it as I am implementing my code in with these inputs every time the code is executed with variability around z and i.\nThis all said the next project I will be using bflw.\n\nWhy is f-strings better, I've always used + operator never really thought why should change that though I am more than happy to if it is much better. Though how much benefit can you gain from concatenate strings differently in the whole scheme of things.\n\nI also thought to place this question in random as it not directly related to bflw.\n\nThanks for your comments and assistance :slightly_smiling_face:",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g5c086dffc44",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5c086dffc44c2caa08388b9f2fcd2ef1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "",
            "real_name": "Sandy Caskie",
            "display_name": "Sandy Caskie",
            "team": "T4G9NBD2M",
            "name": "sandycaskie",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "t0bP1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ye fair points.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "This is hardcoded as I want to implement the strategy in a rigid way. Also do you not always need a unique customer ref if you place a certain number of orders over a specific period? I remember something along those lines when developing this."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "JSON is specified once as it is passed directly to make an order."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Ye that is the format though when I was developing it I specified this way and don't see why I should change it as I am implementing my code in with these inputs every time the code is executed with variability around z and i."
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThis all said the next project I will be using bflw.\n\nWhy is f-strings better, I've always used + operator never really thought why should change that though I am more than happy to if it is much better. Though how much benefit can you gain from concatenate strings differently in the whole scheme of things.\n\nI also thought to place this question in random as it not directly related to bflw.\n\nThanks for your comments and assistance "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U014W8KJGNL",
        "type": "message",
        "ts": "1591445387.238200",
        "client_msg_id": "85839261-fad2-41dd-880b-a55a65a24b92",
        "text": "Also, can you get near price and far on bflw?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g5c086dffc44",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5c086dffc44c2caa08388b9f2fcd2ef1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "",
            "real_name": "Sandy Caskie",
            "display_name": "Sandy Caskie",
            "team": "T4G9NBD2M",
            "name": "sandycaskie",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Bhgp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also, can you get near price and far on bflw?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1591445460.238300",
        "text": "Yes",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "fallback": "[June 6th, 2020 1:09 PM] sandycaskie: Also, can you get near price and far on bflw?",
                "ts": "1591445387.238200",
                "author_id": "U014W8KJGNL",
                "author_subname": "Sandy Caskie",
                "channel_id": "C4H05KKMY",
                "is_msg_unfurl": true,
                "text": "Also, can you get near price and far on bflw?",
                "author_name": "Sandy Caskie",
                "author_link": "https:\/\/betfairlightweight.slack.com\/team\/U014W8KJGNL",
                "author_icon": "https:\/\/secure.gravatar.com\/avatar\/5c086dffc44c2caa08388b9f2fcd2ef1.jpg?s=48&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-48.png",
                "mrkdwn_in": [
                    "text"
                ],
                "color": "D0D0D0",
                "from_url": "https:\/\/betfairlightweight.slack.com\/archives\/C4H05KKMY\/p1591445387238200",
                "is_share": true,
                "footer": "Slack conversation"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FG5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1591445710.239700",
        "edited": {
            "user": "UBS7QANF3",
            "ts": "1591445719.000000"
        },
        "client_msg_id": "5A448C07-9F32-443C-87DA-EBB8D24EA354",
        "text": "If you had just said it’s for legacy reasons and you’ll use bflw in your next project I’d have said fair enough and left it and that :joy:",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sXQI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If you had just said it’s for legacy reasons and you’ll use bflw in your next project I’d have said fair enough and left it and that "
                            },
                            {
                                "type": "emoji",
                                "name": "joy",
                                "unicode": "1f602"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1591445769.241000",
        "client_msg_id": "8B410F8B-E4BB-4588-AF1A-3282BC00F909",
        "text": "I just find f-strings much more readable and easy to work with ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Z5BoP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I just find f-strings much more readable and easy to work with "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U014W8KJGNL",
        "type": "message",
        "ts": "1591445776.241300",
        "client_msg_id": "33ab7087-0269-4d6f-9448-6ad1cb62d55d",
        "text": ":joy: nothing like a complete answer tho",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g5c086dffc44",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5c086dffc44c2caa08388b9f2fcd2ef1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "",
            "real_name": "Sandy Caskie",
            "display_name": "Sandy Caskie",
            "team": "T4G9NBD2M",
            "name": "sandycaskie",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9i8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "emoji",
                                "name": "joy",
                                "unicode": "1f602"
                            },
                            {
                                "type": "text",
                                "text": " nothing like a complete answer tho"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U014W8KJGNL",
        "type": "message",
        "ts": "1591445809.242300",
        "client_msg_id": "09f18b67-b86c-4734-bb7c-e5207f8af7b8",
        "text": "horses for courses",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g5c086dffc44",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5c086dffc44c2caa08388b9f2fcd2ef1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "",
            "real_name": "Sandy Caskie",
            "display_name": "Sandy Caskie",
            "team": "T4G9NBD2M",
            "name": "sandycaskie",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iKtZ0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "horses for courses"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1591445825.242400",
        "client_msg_id": "30403E08-C21E-4569-B144-479FE2F2B6D8",
        "text": "They are apparently significantly faster though so it might make a difference in some situations like in an inner loop",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wHE98",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "They are apparently significantly faster though so it might make a difference in some situations like in an inner loop"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U014W8KJGNL",
        "type": "message",
        "ts": "1591445843.242700",
        "client_msg_id": "21cb162f-7099-49eb-bbd6-4969b4f36f2d",
        "text": "ok I'll keep it in mind next time",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g5c086dffc44",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5c086dffc44c2caa08388b9f2fcd2ef1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "",
            "real_name": "Sandy Caskie",
            "display_name": "Sandy Caskie",
            "team": "T4G9NBD2M",
            "name": "sandycaskie",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uDe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "ok I'll keep it in mind next time"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U92CASP1B",
        "type": "message",
        "ts": "1591451353.244600",
        "client_msg_id": "a2689bd5-8191-4fa6-9c92-5bc2f64cc55e",
        "text": "Ill add to this slow saturday discussion, I do not think point 3 is the real benefit, the real benefit comes from readability and that it makes it easier to type check arguments as well doing validation.\n\nSomething that bflw actually missing a.t.m. : )",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g374352c822f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a374352c822fa856c4cfdd782bbb8669.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0007-72.png",
            "first_name": "Jonatan",
            "real_name": "Jonatan",
            "display_name": "Jonatan (skyw)",
            "team": "T4G9NBD2M",
            "name": "almen.jonatan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yPG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ill add to this slow saturday discussion, I do not think point 3 is the real benefit, the real benefit comes from readability and that it makes it easier to type check arguments as well doing validation.\n\nSomething that bflw actually missing a.t.m. : )"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1591455128.245100",
        "client_msg_id": "C7697675-85FD-4D16-B81D-BD6AB70B78A3",
        "text": "PRs open last time I checked :wink:",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "q6DAv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "PRs open last time I checked "
                            },
                            {
                                "type": "emoji",
                                "name": "wink",
                                "unicode": "1f609"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U92CASP1B",
        "type": "message",
        "ts": "1591456282.247700",
        "client_msg_id": "f55de554-3444-432d-884f-24cee7b41721",
        "text": "yeah : ) this is what I was thinking about, <https:\/\/www.python.org\/dev\/peps\/pep-0561\/>.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g374352c822f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a374352c822fa856c4cfdd782bbb8669.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0007-72.png",
            "first_name": "Jonatan",
            "real_name": "Jonatan",
            "display_name": "Jonatan (skyw)",
            "team": "T4G9NBD2M",
            "name": "almen.jonatan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "service_name": "Python.org",
                "title": "PEP 561 -- Distributing and Packaging Type Information",
                "title_link": "https:\/\/www.python.org\/dev\/peps\/pep-0561\/",
                "text": "The official home of the Python Programming Language",
                "fallback": "Python.org: PEP 561 -- Distributing and Packaging Type Information",
                "from_url": "https:\/\/www.python.org\/dev\/peps\/pep-0561\/",
                "thumb_url": "https:\/\/www.python.org\/static\/opengraph-icon-200x200.png",
                "thumb_width": 200,
                "thumb_height": 200,
                "service_icon": "https:\/\/www.python.org\/static\/apple-touch-icon-precomposed.png",
                "id": 1,
                "original_url": "https:\/\/www.python.org\/dev\/peps\/pep-0561\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pzsa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "yeah : ) this is what I was thinking about, "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.python.org\/dev\/peps\/pep-0561\/"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1591456594.248600",
        "client_msg_id": "7E841AA9-B6EB-4822-BC5D-565E3DA2C3F5",
        "text": "Bflw already has type hints using annotations, do you mean for the responses? ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IK1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Bflw already has type hints using annotations, do you mean for the responses? "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U92CASP1B",
        "type": "message",
        "ts": "1591456631.249100",
        "client_msg_id": "a5dd190b-34ae-454e-84ee-3eb4bafbd634",
        "text": "Yeah, I know, this enables third party libraries such as mypy to use those",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g374352c822f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a374352c822fa856c4cfdd782bbb8669.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0007-72.png",
            "first_name": "Jonatan",
            "real_name": "Jonatan",
            "display_name": "Jonatan (skyw)",
            "team": "T4G9NBD2M",
            "name": "almen.jonatan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Lf3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, I know, this enables third party libraries such as mypy to use those"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U92CASP1B",
        "type": "message",
        "ts": "1591456689.249900",
        "client_msg_id": "ce540756-2cd1-46f1-b932-ba8b389d0ae2",
        "text": "If I install bflw, and then run mypy on my code which depends on bflw I will get an error that missing stubs or something like that.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g374352c822f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a374352c822fa856c4cfdd782bbb8669.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0007-72.png",
            "first_name": "Jonatan",
            "real_name": "Jonatan",
            "display_name": "Jonatan (skyw)",
            "team": "T4G9NBD2M",
            "name": "almen.jonatan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CJzS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If I install bflw, and then run mypy on my code which depends on bflw I will get an error that missing stubs or something like that."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "channel_join",
        "user": "U014Z5VG5GS",
        "text": "<@U014Z5VG5GS> has joined the channel",
        "type": "message",
        "ts": "1591513002.250200"
    }
]