[
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1654672894.693329",
        "client_msg_id": "e2c8fab3-c7fe-4455-b37e-539e1275b41a",
        "text": "does this happen straight away or on the second attempt? This would be more suited to a worker rather than a stream btw",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1654574560.648559",
        "parent_user_id": "UG03WDCHH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Y2dN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "does this happen straight away or on the second attempt? This would be more suited to a worker rather than a stream btw"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UG03WDCHH",
        "type": "message",
        "ts": "1654672930.314889",
        "client_msg_id": "e980d4e4-90f9-416b-a27d-78983c7daf77",
        "text": "I just tried it straight away.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g03ce37265ba",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/803ce37265ba7d4f1be4d779100eaa60.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "Rudeger",
            "real_name": "Rudeger Jamison",
            "display_name": "Rudeger Jamison",
            "team": "T4G9NBD2M",
            "name": "ben.k.muller",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1654574560.648559",
        "parent_user_id": "UG03WDCHH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zOC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I just tried it straight away."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1654672951.234709",
        "client_msg_id": "91a36a67-ffd6-4f51-8b9b-d5e041ec0c7e",
        "text": "might be that the client hasn't actually logged in yet",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1654574560.648559",
        "parent_user_id": "UG03WDCHH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2CP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "might be that the client hasn't actually logged in yet"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1654672967.260779",
        "client_msg_id": "3f767fdb-11b1-4545-92d1-cd57b6c09ff0",
        "text": "if you use a worker you can set a start delay to wait for the client",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1654574560.648559",
        "parent_user_id": "UG03WDCHH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KIM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "if you use a worker you can set a start delay to wait for the client"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UG03WDCHH",
        "type": "message",
        "ts": "1654673014.464759",
        "client_msg_id": "13fe8fa5-004a-4996-ba53-d461ba7a1486",
        "text": "Ah ok, I haven't used a worker before. Can it poll on a defined time like I do on a stream?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g03ce37265ba",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/803ce37265ba7d4f1be4d779100eaa60.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "Rudeger",
            "real_name": "Rudeger Jamison",
            "display_name": "Rudeger Jamison",
            "team": "T4G9NBD2M",
            "name": "ben.k.muller",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1654574560.648559",
        "parent_user_id": "UG03WDCHH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Cff",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah ok, I haven't used a worker before. Can it poll on a defined time like I do on a stream?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1654673022.713229",
        "client_msg_id": "1bc7a845-6387-4f93-9ebd-c443b05a3dcb",
        "text": "yep",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1654574560.648559",
        "parent_user_id": "UG03WDCHH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "90jaG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "yep"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UG03WDCHH",
        "type": "message",
        "ts": "1654673034.579899",
        "client_msg_id": "cb87f3a3-5092-4cb6-b187-e9ea0e99d9f4",
        "text": "Great, will give it a crack. Cheers",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g03ce37265ba",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/803ce37265ba7d4f1be4d779100eaa60.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "Rudeger",
            "real_name": "Rudeger Jamison",
            "display_name": "Rudeger Jamison",
            "team": "T4G9NBD2M",
            "name": "ben.k.muller",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1654574560.648559",
        "parent_user_id": "UG03WDCHH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uRDXV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Great, will give it a crack. Cheers"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1654673046.073439",
        "client_msg_id": "76419a6d-e281-4b08-97f5-856fda840fa0",
        "text": "<https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/flumine\/worker.py>",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1654574560.648559",
        "parent_user_id": "UG03WDCHH",
        "attachments": [
            {
                "id": 1,
                "footer_icon": "https:\/\/slack.github.com\/static\/img\/favicon-neutral.png",
                "color": "24292f",
                "bot_id": "B021ZJYSBMW",
                "app_unfurl_url": "https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/flumine\/worker.py",
                "is_app_unfurl": true,
                "app_id": "A01BP7R4KNY",
                "fallback": "<https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/flumine\/worker.py | worker.py>",
                "text": "```\nimport time\nimport threading\nimport logging\nfrom typing import Callable, Optional\nfrom betfairlightweight import BetfairError, filters, exceptions\n\nfrom . import config\nfrom .events import events\nfrom .utils import chunks\nfrom .clients import ExchangeType\n\nlogger = logging.getLogger(__name__)\n\n\nclass BackgroundWorker(threading.Thread):\n    def __init__(\n        self,\n        flumine,\n        function: Callable,\n        interval: Optional[int],\n        func_args: tuple = None,\n        func_kwargs: dict = None,\n        start_delay: int = 0,\n        context: dict = None,\n        name: str = None,\n        **kwargs\n    ):\n        name = name or function.__name__\n        threading.Thread.__init__(self, daemon=True, name=name, **kwargs)\n        self.flumine = flumine\n        self.function = function\n        self.interval = interval\n        self.func_args = func_args if func_args is not None else []\n        self.func_kwargs = func_kwargs if func_kwargs is not None else {}\n        self.start_delay = start_delay\n        self.context = context or {}\n        self._running = False\n\n    def run(self) -&gt; None:\n        <http:\/\/logger.info|logger.info>(\n            \"BackgroundWorker {0} starting\".format(self.name),\n            extra={\n                \"worker_name\": self.name,\n                \"function\": self.function,\n                \"context\": self.context,\n                \"start_delay\": self.start_delay,\n                \"interval\": self.interval,\n                \"func_args\": self.func_args,\n                \"func_kwargs\": self.func_kwargs,\n            },\n        )\n        time.sleep(self.start_delay)\n        self._running = True\n        while self._running:\n            logger.debug(\n                \"BackgroundWorker {0} executing\".format(self.name),\n                extra={\n                    \"worker_name\": self.name,\n                    \"function\": self.function,\n                    \"context\": self.context,\n                },\n            )\n            try:\n                self.function(\n                    self.context, self.flumine, *self.func_args, **self.func_kwargs\n                )\n            except Exception as e:\n                logger.error(\n                    \"Error in BackgroundWorker {0}: {1}\".format(self.name, e),\n                    extra={\n                        \"worker_name\": self.name,\n                        \"function\": self.function,\n                        \"context\": self.context,\n                    },\n                    exc_info=True,\n                )\n            if self.interval is None:\n                break\n            time.sleep(self.interval)\n\n    def shutdown(self, timeout: int = 4) -&gt; None:\n        <http:\/\/logger.info|logger.info>(\n            \"BackgroundWorker {0} shutting down\".format(self.name),\n            extra={\n                \"worker_name\": self.name,\n                \"function\": self.function,\n            },\n        )\n        self._running = False\n        self.join(timeout)\n\n\ndef keep_alive(context: dict, flumine) -&gt; None:\n    \"\"\"Attempt keep alive if required or\n    login if keep alive failed\n    \"\"\"\n    for client in flumine.clients:\n        if client.EXCHANGE == ExchangeType.BETFAIR:\n            if client.betting_client.session_token:\n                resp = client.keep_alive()\n                if resp is None or resp.status == \"SUCCESS\":\n                    continue\n        elif client.EXCHANGE == ExchangeType.BETCONNECT:\n            resp = client.keep_alive()\n            if resp:\n                continue\n        # keep-alive failed lets try a login\n        client.login()\n\n\ndef poll_market_catalogue(context: dict, flumine) -&gt; None:\n    # get betfair client\n    client = flumine.clients.get_betfair_default()\n    markets = [\n        m.market_id\n        for m in list(flumine.markets.markets.values())\n        if m.update_market_catalogue and not m.closed\n    ]\n    for market_ids in chunks(markets, 25):\n        try:\n            market_catalogues = client.betting_client.betting.list_market_catalogue(\n                filter=filters.market_filter(market_ids=market_ids),\n                max_results=25,\n                market_projection=[\n                    \"COMPETITION\",\n                    \"EVENT\",\n                    \"EVENT_TYPE\",\n                    \"RUNNER_DESCRIPTION\",\n                    \"RUNNER_METADATA\",\n                    \"MARKET_START_TIME\",\n                    \"MARKET_DESCRIPTION\",\n                ],\n            )\n        except exceptions.StatusCodeError as e:\n            # log as warning to prevent duplicate logs on betfair meltdown\n            logger.warning(\n                \"poll_market_catalogue StatusCodeError\",\n                extra={\"trading_function\": \"list_market_catalogue\", \"response\": e},\n                exc_info=True,\n            )\n            continue\n        except BetfairError as e:\n            logger.error(\n                \"poll_market_catalogue error\",\n                exc_info=True,\n                extra={\"trading_function\": \"list_market_catalogue\", \"response\": e},\n            )\n            continue\n\n        if market_catalogues:\n            flumine.handler_queue.put(events.MarketCatalogueEvent(market_catalogues))\n\n\ndef poll_account_balance(context: dict, flumine) -&gt; None:\n    for client in flumine.clients:\n        client.update_account_details()\n        <http:\/\/logger.info|logger.info>(\"Client update account details\", extra=<http:\/\/client.info|client.info>)\n        if client.account_funds:\n            flumine.log_control(events.BalanceEvent(client))\n\n\ndef poll_market_closure(context: dict, flumine) -&gt; None:\n    markets = [\n        market for market in list(flumine.markets.markets.values()) if market.closed\n    ]\n    for client in flumine.clients:\n        if (\n            client.EXCHANGE != ExchangeType.BETFAIR\n            or client.paper_trade\n            or client.market_recording_mode\n        ):\n            continue\n        for market in markets:\n            if client.username not in market.orders_cleared:\n                if _get_cleared_orders(\n                    flumine, client.betting_client, market.market_id\n                ):\n                    market.orders_cleared.append(client.username)\n            if client.username not in market.market_cleared:\n                if _get_cleared_market(\n                    flumine, client.betting_client, market.market_id\n                ):\n                    market.market_cleared.append(client.username)\n\n\ndef _get_cleared_orders(flumine, betting_client, market_id: str) -&gt; bool:\n    from_record = 0\n    while True:\n        try:\n            cleared_orders = betting_client.betting.list_cleared_orders(\n                bet_status=\"SETTLED\",\n                from_record=from_record,\n                market_ids=[market_id],\n                customer_strategy_refs=[config.customer_strategy_ref],\n            )\n        except exceptions.StatusCodeError as e:\n            # log as warning to prevent duplicate logs on betfair meltdown\n            logger.warning(\n                \"_get_cleared_orders StatusCodeError\",\n                extra={\"trading_function\": \"list_cleared_orders\", \"response\": e},\n                exc_info=True,\n            )\n            return False\n        except BetfairError as e:\n            logger.error(\n                \"_get_cleared_orders error\",\n                extra={\"trading_function\": \"list_cleared_orders\", \"response\": e},\n                exc_info=True,\n            )\n            return False\n\n        <http:\/\/logger.info|logger.info>(\n            \"{0}: {1} cleared orders found, more available: {2}\".format(\n                market_id, len(cleared_orders.orders), cleared_orders.more_available\n            )\n        )\n        cleared_orders.market_id = market_id\n        flumine.handler_queue.put(events.ClearedOrdersEvent(cleared_orders))\n        flumine.log_control(events.ClearedOrdersEvent(cleared_orders))\n\n        from_record += len(cleared_orders.orders)\n        if not cleared_orders.more_available:\n            break\n    re…",
                "title": "<https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/flumine\/worker.py | worker.py>",
                "footer": "<https:\/\/github.com\/betcode-org\/flumine|betcode-org\/flumine>",
                "mrkdwn_in": [
                    "text"
                ]
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "e0g0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/flumine\/worker.py"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "pray",
                "users": [
                    "UG03WDCHH"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U01C12ZEADQ",
        "type": "message",
        "ts": "1654673530.870669",
        "client_msg_id": "e4722539-cd85-4a49-91e0-ff0f63a1075e",
        "text": "mobile app only",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "e3b7687b0ef8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-10-06\/1432945617648_e3b7687b0ef86e4f28b8_72.png",
            "first_name": "Alessio",
            "real_name": "Alessio",
            "display_name": "Alessio",
            "team": "T4G9NBD2M",
            "name": "alessio",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kFv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "mobile app only"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01C12ZEADQ",
        "type": "message",
        "ts": "1654673535.104299",
        "client_msg_id": "301ff7cd-c134-47ec-a1ac-2246311b604e",
        "text": "wow",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "e3b7687b0ef8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-10-06\/1432945617648_e3b7687b0ef86e4f28b8_72.png",
            "first_name": "Alessio",
            "real_name": "Alessio",
            "display_name": "Alessio",
            "team": "T4G9NBD2M",
            "name": "alessio",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6GeO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "wow"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "Couldn't resist seeing how it works, but its a userPreference change on the account (same as BPE) but then the limitOrder request is slightly different with a new field `priceAtPlacement`",
        "files": [
            {
                "id": "F03JJHAPPM4",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U4H19D1D2",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Npu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Couldn't resist seeing how it works, but its a userPreference change on the account (same as BPE) but then the limitOrder request is slightly different with a new field "
                            },
                            {
                                "type": "text",
                                "text": "priceAtPlacement",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1654674054.892609",
        "client_msg_id": "1b8f0238-d95b-473d-b1a9-ab1ff177eb78"
    },
    {
        "user": "U01B8031PM1",
        "type": "message",
        "ts": "1654674086.497829",
        "client_msg_id": "066B63A2-2B78-454E-96D1-2A4C078C8BFD",
        "text": "Do api users need to change anything?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g6e482a0e41b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6e482a0e41b232f48d801454006dfa56.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "river_shah",
            "real_name": "river_shah",
            "display_name": "river_shah",
            "team": "T4G9NBD2M",
            "name": "ansar.sa",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "t3yf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Do "
                            },
                            {
                                "type": "text",
                                "text": "ap"
                            },
                            {
                                "type": "text",
                                "text": "i users need to change anything?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1654674116.529569",
        "client_msg_id": "ebf8ac2f-e45d-4976-8af4-dd3daf8d733f",
        "text": "my understanding is that it will only work through the mobile app\/site",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PjFBp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "my understanding is that it will only work through the mobile app\/site"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U01B8031PM1"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U010GM77S4W",
        "type": "message",
        "ts": "1654675422.582249",
        "client_msg_id": "aaff3df2-83a9-4ac0-aa14-fcdd9335b531",
        "text": "What does it do? Match you at worse odds with betfair on the other side?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "66cae8f5399c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-03-20\/1004508356769_66cae8f5399cf91a07ae_72.jpg",
            "first_name": "",
            "real_name": "mandelbot",
            "display_name": "mandelbot",
            "team": "T4G9NBD2M",
            "name": "demhadbale",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EZv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What does it do? Match you at worse odds with betfair on the other side?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1654675692.281089",
        "client_msg_id": "97f55fb3-199b-4b4b-ab57-29590d7bd1f9",
        "text": "```We've implemented smart logic in the backend to protect your bet from large price movements. This means that, in rare cases, MatchMe bets will be placed as a normal unmatched bet at the original price you requested.```\nThe smart logic seems to be just a price x ticks lower than the best price but my understanding is that if it isn't matched it becomes an unmatched bet at the price you asked for",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NNslF",
                "elements": [
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "We've implemented smart logic in the backend to protect your bet from large price movements. This means that, in rare cases, MatchMe bets will be placed as a normal unmatched bet at the original price you requested."
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The smart logic seems to be just a price x ticks lower than the best price but my understanding is that if it isn't matched it becomes an unmatched bet at the price you asked for"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03FS7KM2NL",
        "type": "message",
        "ts": "1654690270.077429",
        "client_msg_id": "c6dc90e0-2369-443b-a193-936483c87e9f",
        "text": "Ah that's the difference, I thought it was just entering the bet a few ticks lower",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g160a197a059",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/160a197a059d9b97aabdd95ca66dc341.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0026-72.png",
            "first_name": "Ralegh",
            "real_name": "Ralegh",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "ralegh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "d6J",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah that's the difference, I thought it was just entering the bet a few ticks lower"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013ZS16QJZ",
        "type": "message",
        "ts": "1654700217.028769",
        "client_msg_id": "174033cb-c09b-4b0a-bde5-0c1d808bca00",
        "text": "Thanks Peter, the support here in Brazil is confusing and time consuming, we try to avoid it.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g16b34a6e706",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/16b34a6e706dbe59fcc7dd82d1ae4930.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "VT",
            "real_name": "VT",
            "display_name": "VT",
            "team": "T4G9NBD2M",
            "name": "joaobaldoni",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1654615330.714209",
        "parent_user_id": "U013ZS16QJZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "breo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks Peter, the support here in Brazil is confusing and time consuming, we try to avoid it."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]