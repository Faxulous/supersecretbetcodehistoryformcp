[
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1646991778.247519",
        "client_msg_id": "c4e659ba-e76d-41b6-943c-dcacbedbde45",
        "text": "AB testing, did we get anywhere with how we are supposed to be doing this :sweat_smile:\n\nI currently use this function to get even\/odd (A\/B), I like it because I can easily replicate\/analyse after without recording anything but now looking to do A\/B\/C\/D... testing per market\n\n```@staticmethod\n@functools.lru_cache(maxsize=None)\ndef _is_even(market_id: str) -&gt; bool:\n    id_ = int(market_id[2:])\n    return id_ % 2 == 0```",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "G7fyC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "AB testing, did we get anywhere with how we are supposed to be doing this "
                            },
                            {
                                "type": "emoji",
                                "name": "sweat_smile",
                                "unicode": "1f605"
                            },
                            {
                                "type": "text",
                                "text": "\n\nI currently use this function to get even\/odd (A\/B), I like it because I can easily replicate\/analyse after without recording anything but now looking to do A\/B\/C\/D... testing per market\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "@staticmethod\n@functools.lru_cache(maxsize=None)\ndef _is_even(market_id: str) -> bool:\n    id_ = int(market_id[2:])\n    return id_ % 2 == 0"
                            }
                        ],
                        "border": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "UUCD6P13J",
        "type": "message",
        "ts": "1646991868.519599",
        "client_msg_id": "96972437-c8fe-43e6-9e55-27f92279ed83",
        "text": "I've used something like this previously, not sure how statistically random it is\n`hashlib.sha1(market_book.market_id.encode()).digest()[0] % 2`",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g6898272ab81",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6898272ab810e419c2c9ca9af1e53da8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0012-72.png",
            "first_name": "Lee",
            "real_name": "Lee U",
            "display_name": "Lee",
            "team": "T4G9NBD2M",
            "name": "lunswor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XKkor",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've used something like this previously, not sure how statistically random it is\n"
                            },
                            {
                                "type": "text",
                                "text": "hashlib.sha1(market_book.market_id.encode()).digest()[0] % 2",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1646991938.058159",
        "client_msg_id": "9b266ca7-01e8-42ff-8ec9-1786b08b2e48",
        "text": "<https:\/\/github.com\/mberk\/betfairutil\/blob\/7d6f3be4a2e88aa3f7d2bd2be5f445a39a7bd049\/betfairutil\/__init__.py#L1005-L1015>",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1646991938.058159",
        "reply_count": 3,
        "reply_users_count": 2,
        "latest_reply": "1647082594.356229",
        "reply_users": [
            "UPMUFSGCR",
            "UBS7QANF3"
        ],
        "replies": [
            {
                "user": "UPMUFSGCR",
                "ts": "1647079953.141189"
            },
            {
                "user": "UPMUFSGCR",
                "ts": "1647080122.461959"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1647082594.356229"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "id": 1,
                "footer_icon": "https:\/\/slack.github.com\/static\/img\/favicon-neutral.png",
                "color": "24292f",
                "bot_id": "B021ZJYSBMW",
                "app_unfurl_url": "https:\/\/github.com\/mberk\/betfairutil\/blob\/7d6f3be4a2e88aa3f7d2bd2be5f445a39a7bd049\/betfairutil\/__init__.py#L1005-L1015",
                "is_app_unfurl": true,
                "app_id": "A01BP7R4KNY",
                "fallback": "<https:\/\/github.com\/mberk\/betfairutil\/blob\/7d6f3be4a2e88aa3f7d2bd2be5f445a39a7bd049\/betfairutil\/__init__.py | __init__.py>",
                "text": "```\ndef random_from_market_id(market_id: Union[int, str]):\n    \"\"\"\n    Maps a market ID to a real number in [0, 1)\n\n    :param market_id: A market ID, either in the standard string form provided by Betfair that starts \"1.\" or an integer where the \"1.\" prefix has been discarded\n    :return: A quasi-random number generated from the market ID. See random_from_positive_int for details\n    \"\"\"\n    if type(market_id) is str:\n        market_id = int(market_id[2:])\n\n    return random_from_positive_int(market_id)\n```",
                "title": "<https:\/\/github.com\/mberk\/betfairutil\/blob\/7d6f3be4a2e88aa3f7d2bd2be5f445a39a7bd049\/betfairutil\/__init__.py | __init__.py>",
                "footer": "<https:\/\/github.com\/mberk\/betfairutil|mberk\/betfairutil>",
                "mrkdwn_in": [
                    "text"
                ]
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FjgRR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/mberk\/betfairutil\/blob\/7d6f3be4a2e88aa3f7d2bd2be5f445a39a7bd049\/betfairutil\/__init__.py#L1005-L1015"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1646992239.814599",
        "client_msg_id": "c665ae94-bed3-444e-8437-fac94d0e59b5",
        "text": "what about getting a 3 and a 4 as well?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SL5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "what about getting a 3 and a 4 as well?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1646992310.951069",
        "client_msg_id": "d2732298-2f73-4039-b4a1-30ec2035a625",
        "text": "Above gives you 0 - 1, so split based on 0 - 0.25, 0.25 - 0.5, 0.5 - 0.75 and 0.75 - 1? Is that what you're asking?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Xmoa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Above gives you 0 - 1, so split based on 0 - 0.25, 0.25 - 0.5, 0.5 - 0.75 and 0.75 - 1? Is that what you're asking?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1646992325.126899",
        "client_msg_id": "c8ab5ab3-50e8-44d6-85e6-239b29590630",
        "text": "yeah",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7bUK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "yeah"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1646992530.336429",
        "edited": {
            "user": "UBS7QANF3",
            "ts": "1646993022.000000"
        },
        "client_msg_id": "10be12f3-7f00-491c-a241-c19ad7e9d701",
        "text": "Just to reiterate the advantages of the above:\n\n1. Excellent statistical properties. i.e. effectively random compared to e.g. odd or even market IDs which would for a given race would always assign the WIN market to one group and the PLACE market to the other group\n2. Repeatable - if I run it on the same market ID as you run it on we get the same answer. Ditto when repeating backtests. There's no dependency on the state of a RNG\n3. Computationally cheap - should be a lot cheaper than <@UUCD6P13J>’s method for example",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Xlpgp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Just to reiterate the advantages of the above:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Excellent statistical properties. i.e. effectively random compared to e.g. odd or even market IDs which would for a given race would always assign the WIN market to one group and the PLACE market to the other group"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Repeatable - if I run it on the same market ID as you run it on we get the same answer. Ditto when repeating backtests. There's no dependency on the state of a RNG"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Computationally cheap - should be a lot cheaper than "
                                    },
                                    {
                                        "type": "user",
                                        "user_id": "UUCD6P13J"
                                    },
                                    {
                                        "type": "text",
                                        "text": "’s method for example"
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0,
                        "border": 0
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "rocket",
                "users": [
                    "UPMUFSGCR",
                    "U025C059DA9"
                ],
                "count": 2
            },
            {
                "name": "100",
                "users": [
                    "UPMUFSGCR"
                ],
                "count": 1
            },
            {
                "name": "money_mouth_face",
                "users": [
                    "UPMUFSGCR"
                ],
                "count": 1
            },
            {
                "name": "eggplant",
                "users": [
                    "UPMUFSGCR",
                    "U014QCX7H96"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1646992633.408099",
        "client_msg_id": "9b527a55-5513-4993-b344-0fc8f2a9fb09",
        "text": "yeah the market id ordering was my fear",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2ZOr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "yeah the market id ordering was my fear"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "channel_join",
        "user": "U0371P57MQ9",
        "text": "<@U0371P57MQ9> has joined the channel",
        "type": "message",
        "ts": "1647008824.881799"
    },
    {
        "user": "UUE6E1LA1",
        "type": "message",
        "ts": "1647010236.148779",
        "client_msg_id": "5dbd1588-48e6-4065-8681-f981af2ece72",
        "text": "Do any of the TPD users have a list of track ID for the US venues for downloading the racing line data? I really don't want to write a scraper with every integer code unless I have to.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf53cae45edd",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f53cae45edd7f7b67bbe98819597612e.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "D C",
            "display_name": "D C",
            "team": "T4G9NBD2M",
            "name": "oddsvantage",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fRM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Do any of the TPD users have a list of track ID for the US venues for downloading the racing line data? I really don't want to write a scraper with every integer code unless I have to."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1647016719.401499",
        "client_msg_id": "ae937fad-da41-41ee-860b-5c9498634574",
        "text": "Anyone see any issues with this? Takes a list of dictionaries and returns a random one based on the marketId, ie a list of `strategy.context`\n\n```def _get_rand_context(market_id: str, context: list[dict]) -&gt; dict:\n    id_ = int(market_id[2:])\n    r = (0.5 + _INVERSE_GOLDEN_RATIO * id_) % 1\n    count = len(context)\n    x = [(i * (1 \/ count)) for i in range(1, count + 1)]\n    for i, y in enumerate(x):\n        if r &lt; y:\n            return context[i].copy()\n    return context[-1].copy()\n\ncontext = _get_rand_context(\"1.23\", [{\"a\": 1}, {\"a\": 2}, {\"a\": 3}])```",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1647016719.401499",
        "reply_count": 3,
        "reply_users_count": 2,
        "latest_reply": "1647249225.540369",
        "reply_users": [
            "UBS7QANF3",
            "U4H19D1D2"
        ],
        "replies": [
            {
                "user": "UBS7QANF3",
                "ts": "1647081000.987919"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1647248663.624289"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1647249225.540369"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1647249225.540369",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "t4iS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Anyone see any issues with this? Takes a list of dictionaries and returns a random one based on the marketId, ie a list of "
                            },
                            {
                                "type": "text",
                                "text": "strategy.context",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "def _get_rand_context(market_id: str, context: list[dict]) -> dict:\n    id_ = int(market_id[2:])\n    r = (0.5 + _INVERSE_GOLDEN_RATIO * id_) % 1\n    count = len(context)\n    x = [(i * (1 \/ count)) for i in range(1, count + 1)]\n    for i, y in enumerate(x):\n        if r < y:\n            return context[i].copy()\n    return context[-1].copy()\n\ncontext = _get_rand_context(\"1.23\", [{\"a\": 1}, {\"a\": 2}, {\"a\": 3}])"
                            }
                        ],
                        "border": 0
                    }
                ]
            }
        ]
    },
    {
        "subtype": "channel_join",
        "user": "U0373M679G9",
        "text": "<@U0373M679G9> has joined the channel",
        "type": "message",
        "ts": "1647028083.842009"
    }
]