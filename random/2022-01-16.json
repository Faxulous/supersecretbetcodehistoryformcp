[
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1642329572.036700",
        "client_msg_id": "f3c43566-3f2a-4469-9f38-772021d20cdd",
        "text": "The question of how to randomly assign market IDs to 2 groups but in a repeatable way is super interesting. I'd like to put a function for this in betfairutil. My first thought was a quasi-RNG like Halton sequence but it's not fast to calculate the n-th element of the sequence (I would use the market ID as n). I found this blog post on low discrepancy sequences: <http:\/\/extremelearning.com.au\/unreasonable-effectiveness-of-quasirandom-sequences\/> which proposes a new method:\n\n```g = 1.6180339887498948482\na1 = 1.0\/g\nx[n] = (0.5+a1*n) %1```",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "from_url": "http:\/\/extremelearning.com.au\/unreasonable-effectiveness-of-quasirandom-sequences\/",
                "service_icon": "http:\/\/extremelearning.com.au\/favicon.ico",
                "id": 1,
                "original_url": "http:\/\/extremelearning.com.au\/unreasonable-effectiveness-of-quasirandom-sequences\/",
                "fallback": "The Unreasonable Effectiveness of Quasirandom Sequences | Extreme Learning",
                "text": "How to construct a new class of low discrepancy quasirandom sequences that improve on existing methods, such as the Halton, Sobol and Neiderreiter.",
                "title": "The Unreasonable Effectiveness of Quasirandom Sequences | Extreme Learning",
                "title_link": "http:\/\/extremelearning.com.au\/unreasonable-effectiveness-of-quasirandom-sequences\/",
                "service_name": "extremelearning.com.au"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fkmCi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The question of how to randomly assign market IDs to 2 groups but in a repeatable way is super interesting. I'd like to put a function for this in betfairutil. My first thought was a quasi-RNG like Halton sequence but it's not fast to calculate the n-th element of the sequence (I would use the market ID as n). I found this blog post on low discrepancy sequences: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/extremelearning.com.au\/unreasonable-effectiveness-of-quasirandom-sequences\/"
                            },
                            {
                                "type": "text",
                                "text": " which proposes a new method:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "g = 1.6180339887498948482\na1 = 1.0\/g\nx[n] = (0.5+a1*n) %1"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "rocket",
                "users": [
                    "UPMUFSGCR"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "ULDAVFDRP",
        "type": "message",
        "ts": "1642329686.037100",
        "edited": {
            "user": "ULDAVFDRP",
            "ts": "1642329798.000000"
        },
        "client_msg_id": "e6cfb35c-a98b-4026-90a9-f3437a4edd4e",
        "text": "dont know if this can be leveraged (maybe off topic to the specific use case here) <https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.model_selection.train_test_split.html>",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g46fe1c1bf03",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b46fe1c1bf03e18d951e7032fb494283.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "",
            "real_name": "Oliver Varney",
            "display_name": "Oliver Varney",
            "team": "T4G9NBD2M",
            "name": "oliverashleyvarney",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "from_url": "https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.model_selection.train_test_split.html",
                "service_icon": "https:\/\/scikit-learn.org\/stable\/_static\/favicon.ico",
                "id": 1,
                "original_url": "https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.model_selection.train_test_split.html",
                "fallback": "scikit-learn: sklearn.model_selection.train_test_split",
                "text": "Examples using sklearn.model_selection.train_test_split: Release Highlights for scikit-learn 0.23 Release Highlights for scikit-learn 0.23, Release Highlights for scikit-learn 0.24 Release Highligh...",
                "title": "sklearn.model_selection.train_test_split",
                "title_link": "https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.model_selection.train_test_split.html",
                "service_name": "scikit-learn"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bxJVX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "dont know if this can be leveraged (maybe off topic to the specific use case here) "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.model_selection.train_test_split.html"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "ULDAVFDRP",
        "type": "message",
        "ts": "1642329723.037900",
        "client_msg_id": "b23c1371-834c-41b6-a4cb-82262213b2db",
        "text": "random_state will reproduce the same split if repeatability is required",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g46fe1c1bf03",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b46fe1c1bf03e18d951e7032fb494283.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "",
            "real_name": "Oliver Varney",
            "display_name": "Oliver Varney",
            "team": "T4G9NBD2M",
            "name": "oliverashleyvarney",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "witv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "random_state will reproduce the same split if repeatability is required"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1642330738.038500",
        "client_msg_id": "921dbe4c-d771-4128-b98a-82ce969ff7e8",
        "text": "Sounds very similar to <@UPMUFSGCR>â€™s approach above which seems to have performance issues",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TboDD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sounds very similar to "
                            },
                            {
                                "type": "user",
                                "user_id": "UPMUFSGCR"
                            },
                            {
                                "type": "text",
                                "text": "â€™s approach above which seems to have performance issues"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01DCR5PXDY",
        "type": "message",
        "ts": "1642338090.039600",
        "client_msg_id": "40aad3b8-a405-43dc-9b56-8c072e77b9a3",
        "text": "Is it not sufficient to just use a hash function (like sha256) and check the last bit?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "903bc20cd9db",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-10-26\/1448127317798_903bc20cd9dba9a758e0_72.png",
            "first_name": "thambie1",
            "real_name": "thambie1",
            "display_name": "thambie1",
            "team": "T4G9NBD2M",
            "name": "thambie1",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1642338090.039600",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1642339462.041300",
        "reply_users": [
            "UBS7QANF3"
        ],
        "replies": [
            {
                "user": "UBS7QANF3",
                "ts": "1642339462.041300"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zfwb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is it not sufficient to just use a hash function (like sha256) and check the last bit?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1642339462.041300",
        "client_msg_id": "9FC161D3-F337-4028-8EE3-67A0E4B4512A",
        "text": "No doubt it would get the job done but not quite as cheap as one multiplication and one modulo operation",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1642338090.039600",
        "parent_user_id": "U01DCR5PXDY",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HWCw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "No doubt it would get the job done but not quite as cheap as one multiplication and one modulo operation"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01DVUAE2G1",
        "type": "message",
        "ts": "1642341127.043000",
        "client_msg_id": "eea0cef7-970e-4811-bc4a-f07c7670a67f",
        "text": "this discussion goes a little over my head i feel. What would be the problem with something like adding digits and taking it modulo 2 ?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gd87aca58eae",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/d87aca58eaeabd0a953b4bc4204bbbaf.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Aaron Smith",
            "display_name": "Aaron Smith",
            "team": "T4G9NBD2M",
            "name": "smiffyaaron",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LWB2O",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "this discussion goes a little over my head i feel. What would be the problem with something like adding digits and taking it modulo 2 ?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1642341960.045900",
        "client_msg_id": "733513FB-B326-4190-BCF4-6EF0E0E28B58",
        "text": "Depending on your requirements, nothing. The questions are:\n\n1. What is the computational cost?\n2. Does it actually assign a market ID to each group with probability 50%?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jpk+0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Depending on your requirements, nothing. The questions are:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "What is the computational cost?"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Does it actually assign a market ID to each group with probability 50%?"
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0,
                        "offset": 0,
                        "border": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1642342699.048500",
        "client_msg_id": "E8B1E771-FF5D-4D92-B04F-64CF3F5466BB",
        "text": "Remember that there are relationships between market IDs. For example the place market often being the win market plus one. Your method would always assign the win and place markets to different groups. That's not remotely random",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zLO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Remember that there are relationships between market IDs. For example the place market often being the win market plus one. Your method would always assign the win and place markets to different groups. That's not remotely random"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01DVUAE2G1",
        "type": "message",
        "ts": "1642343863.051200",
        "client_msg_id": "20012429-88a6-454b-a340-353a68d97abe",
        "text": "1. computational costs seem low enough, also if i was to make 2 different market filters for A and B created by the market_ids, i would only have to calculate it once. \n2. here i was thinking that maybe i was missing something where this maybe wouldnt be 50% chance, but didnt see what it is. I see you are right about win\/place, i only had a scenario with 1 market_type in mind.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gd87aca58eae",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/d87aca58eaeabd0a953b4bc4204bbbaf.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Aaron Smith",
            "display_name": "Aaron Smith",
            "team": "T4G9NBD2M",
            "name": "smiffyaaron",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qcG",
                "elements": [
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "computational costs seem low enough, also if i was to make 2 different market filters for A and B created by the market_ids, i would only have to calculate it once. "
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "here i was thinking that maybe i was missing something where this maybe wouldnt be 50% chance, but didnt see what it is. I see you are right about win\/place, i only had a scenario with 1 market_type in mind."
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0,
                        "border": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "U010GM77S4W",
        "type": "message",
        "ts": "1642344120.052800",
        "client_msg_id": "8d9ec9b8-0d51-464e-bdb5-b4c6da16aec6",
        "text": "Would generating + saving a list of tuples with (marketid, random number) and using random number as seed make sense?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "66cae8f5399c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-03-20\/1004508356769_66cae8f5399cf91a07ae_72.jpg",
            "first_name": "",
            "real_name": "mandelbot",
            "display_name": "mandelbot",
            "team": "T4G9NBD2M",
            "name": "demhadbale",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ReEM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Would generating + saving a list of tuples with (marketid, random number) and using random number as seed make sense?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U016TGY3676",
        "type": "message",
        "ts": "1642367325.057800",
        "client_msg_id": "6ae1bc19-b2c3-4144-bc38-90d38a71dba0",
        "text": "Maybe I'm misunderstanding the A\/B problem here, but why not loop through the market IDs and do something simple like this?\n`if random`.`choice(True, False):\n    groupA.append(market_id)\nelse:\n    groupB.append(market_id)`\n",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g6a681220e11",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6a681220e11c1a2ed3685375d658dadb.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "",
            "real_name": "birchy",
            "display_name": "birchy",
            "team": "T4G9NBD2M",
            "name": "birchy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HYF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Maybe I'm misunderstanding the A\/B problem here, but why not loop through the market IDs and do something simple like this?\n"
                            },
                            {
                                "type": "text",
                                "text": "if random",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": "choice(True, False):\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "    groupA.append(market_id)\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "else:\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "    groupB.append(market_id)\n",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01DVUAE2G1",
        "type": "message",
        "ts": "1642369718.058300",
        "client_msg_id": "721020c6-e277-4463-82fc-a36202d185a3",
        "text": "<@U016TGY3676> 1 requirement was for it to be repeatable",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gd87aca58eae",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/d87aca58eaeabd0a953b4bc4204bbbaf.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Aaron Smith",
            "display_name": "Aaron Smith",
            "team": "T4G9NBD2M",
            "name": "smiffyaaron",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9iuu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U016TGY3676"
                            },
                            {
                                "type": "text",
                                "text": " 1 requirement was for it to be repeatable"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "man-facepalming",
                "users": [
                    "U016TGY3676"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U016TGY3676",
        "type": "message",
        "ts": "1642372915.065100",
        "client_msg_id": "454bf013-686a-458e-a821-7422edd43966",
        "text": "Mmmm...if it's repeatable, then surely it's no longer random? What about dropping the '1.' and then doing isodd() or is even(). Or a bit count and if 1's &gt; 0's. Could funk it up with a sqrt or whatever?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g6a681220e11",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6a681220e11c1a2ed3685375d658dadb.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "",
            "real_name": "birchy",
            "display_name": "birchy",
            "team": "T4G9NBD2M",
            "name": "birchy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7qh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Mmmm...if it's repeatable, then surely it's no longer random? What about dropping the '1.' and then doing isodd() or is even(). Or a bit count and if 1's > 0's. Could funk it up with a sqrt or whatever?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01DVUAE2G1",
        "type": "message",
        "ts": "1642376747.074500",
        "client_msg_id": "7b332ff5-fba9-4ad3-8fa5-7523c6433724",
        "text": "<@U016TGY3676> surely it wont be truly random, but as long as its deciding factors are independent of anything related to how betfair assigns market_ids, it its effectively random in the eyes of the betfair market_id generator. For example if i take my grandmas birthday and choose to pick all market_ids that have the last 2 digits of her birth year in it, that will have nothing to do with how betfair assigns market_ids (at least so i would hope). However, this would probs not give a 50\/50 distribution. Odd\/even is not random in the eyes of the betfair market_id generator, as place_market_id = win_market_id + 1 (this may not be a problem really, but its also not perfect). 1's &gt; 0's wouldnt work as mostly market_ids are counting upwards, so you ll have long streaks where there is more 0's and long streaks where there is more 1's. You can throw in sqrt or whatever, but a complication like that doesnt necessarily result in a 50\/50. A simple system that is proven to be pseudo-random and guarantees a 50\/50 result would surely be nicer.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gd87aca58eae",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/d87aca58eaeabd0a953b4bc4204bbbaf.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Aaron Smith",
            "display_name": "Aaron Smith",
            "team": "T4G9NBD2M",
            "name": "smiffyaaron",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xI83W",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U016TGY3676"
                            },
                            {
                                "type": "text",
                                "text": " surely it wont be truly random, but as long as its deciding factors are independent of anything related to how betfair assigns market_ids, it its effectively random in the eyes of the betfair market_id generator. For example if i take my grandmas birthday and choose to pick all market_ids that have the last 2 digits of her birth year in it, that will have nothing to do with how betfair assigns market_ids (at least so i would hope). However, this would probs not give a 50\/50 distribution. Odd\/even is not random in the eyes of the betfair market_id generator, as place_market_id = win_market_id + 1 (this may not be a problem really, but its also not perfect). 1's > 0's wouldnt work as mostly market_ids are counting upwards, so you ll have long streaks where there is more 0's and long streaks where there is more 1's. You can throw in sqrt or whatever, but a complication like that doesnt necessarily result in a 50\/50. A simple system that is proven to be pseudo-random and guarantees a 50\/50 result would surely be nicer."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U016TGY3676"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1642403444.081400",
        "client_msg_id": "7bc0d309-664a-4d82-a0a5-2435c8b02c38",
        "text": "<@U016TGY3676>, it's very common to want to have a random sequence that can be reproduced. For example, this might help with debugging or ensuring some backtest results are comparable. Typically this is done by setting the random seed and if that was combined with your use of `random.choice` then that can be considered a complete solution to the problem at hand. The method I posted has a couple of advantages that I can see:\n\n1. No need to _remember_ to set the seed or what seed you should use\n2. Will produce the same results for everyone\nComing back to my point about debugging, 2. is very useful. If someone comes on here with a bug in their program that ran on a random assignment of market IDs then, provided this canonical method for that assignment existed and was used, I could run the code and generate the same bug without needing to know anything about the state of their random number generator. And coming back to 1., if they didn't use this method and they weren't aware of this nuance they might not have set the seed and no one would ever know what random number generator state produced the bug.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1642403444.081400",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1642445113.097600",
        "reply_users": [
            "U016TGY3676",
            "UPMUFSGCR"
        ],
        "replies": [
            {
                "user": "U016TGY3676",
                "ts": "1642444915.097300"
            },
            {
                "user": "UPMUFSGCR",
                "ts": "1642445113.097600"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1642445113.097600",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zc3Um",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U016TGY3676"
                            },
                            {
                                "type": "text",
                                "text": ", it's very common to want to have a random sequence that can be reproduced. For example, this might help with debugging or ensuring some backtest results are comparable. Typically this is done by setting the random seed and if that was combined with your use of "
                            },
                            {
                                "type": "text",
                                "text": "random.choice",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " then that can be considered a complete solution to the problem at hand. The method I posted has a couple of advantages that I can see:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "No need to "
                                    },
                                    {
                                        "type": "text",
                                        "text": "remember",
                                        "style": {
                                            "italic": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " to set the seed or what seed you should use"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Will produce the same results for everyone"
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nComing back to my point about debugging, 2. is very useful. If someone comes on here with a bug in their program that ran on a random assignment of market IDs then, provided this canonical method for that assignment existed and was used, I could run the code and generate the same bug without needing to know anything about the state of their random number generator. And coming back to 1., if they didn't use this method and they weren't aware of this nuance they might not have set the seed and no one would ever know what random number generator state produced the bug."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]