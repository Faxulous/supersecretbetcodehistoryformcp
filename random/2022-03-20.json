[
    {
        "user": "UUE6E1LA1",
        "type": "message",
        "ts": "1647774260.044499",
        "edited": {
            "user": "UUE6E1LA1",
            "ts": "1647774331.000000"
        },
        "client_msg_id": "c4efc87e-bda9-4160-8895-0a1b646e5d6f",
        "text": "Does python\/numpy have options for elementwise multiplication of matrices of same dimensions? Specifically I am looking for the python equivalent to matlab or octave  `A .\/ B`  if it exists?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf53cae45edd",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f53cae45edd7f7b67bbe98819597612e.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "D C",
            "display_name": "D C",
            "team": "T4G9NBD2M",
            "name": "oddsvantage",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5K+C6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Does python\/numpy have options for elementwise multiplication of matrices of same dimensions? Specifically I am looking for the python equivalent to matlab or octave  "
                            },
                            {
                                "type": "text",
                                "text": "A .\/ B",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "  if it exists?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0128E7BEHW",
        "type": "message",
        "ts": "1647775436.437229",
        "client_msg_id": "638be622-0339-435b-b250-234e5f069776",
        "text": "np.multiply, np.divide",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb57a2bdd15a",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b57a2bdd15acccdb845ce257f38940cc.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Dave",
            "real_name": "Dave R",
            "display_name": "Dave",
            "team": "T4G9NBD2M",
            "name": "d7m",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1647775436.437229",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1647801249.140539",
        "reply_users": [
            "UUE6E1LA1",
            "UTSGYD068"
        ],
        "replies": [
            {
                "user": "UUE6E1LA1",
                "ts": "1647793261.461959"
            },
            {
                "user": "UTSGYD068",
                "ts": "1647801249.140539"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tZdS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "np.multiply, np.divide"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUE6E1LA1",
        "type": "message",
        "ts": "1647793261.461959",
        "client_msg_id": "3d6ccdeb-f33d-4bb9-8513-53ef980e1dbb",
        "text": "Many thanks sir.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf53cae45edd",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f53cae45edd7f7b67bbe98819597612e.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "D C",
            "display_name": "D C",
            "team": "T4G9NBD2M",
            "name": "oddsvantage",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1647775436.437229",
        "parent_user_id": "U0128E7BEHW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Y=+A",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Many thanks sir."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UTSGYD068",
        "type": "message",
        "ts": "1647801249.140539",
        "edited": {
            "user": "UTSGYD068",
            "ts": "1647801329.000000"
        },
        "client_msg_id": "93754168-14b1-49f8-b2f9-6e0db6927a53",
        "text": "You don't need to use the named functions in most cases as `a * b`  (where `a` and `b` are numpy arrays) and other operators are element-wise. See the note at the bottom of the docs for <https:\/\/numpy.org\/doc\/stable\/reference\/generated\/numpy.multiply.html|np.multiply> and others. You can also perform all of the basic element-wise operations on arrays with different dimensions as long as the dimensions are compatible according to <https:\/\/numpy.org\/doc\/stable\/user\/basics.broadcasting.html|broadcasting rules>.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gef7a66dcbb2",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ef7a66dcbb260f54c3d06b0490b844bf.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0006-72.png",
            "first_name": "Josh",
            "real_name": "Josh",
            "display_name": "Josh",
            "team": "T4G9NBD2M",
            "name": "joshua.adelman",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1647775436.437229",
        "parent_user_id": "U0128E7BEHW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mn61",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You don't need to use the named functions in most cases as "
                            },
                            {
                                "type": "text",
                                "text": "a * b",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "  (where "
                            },
                            {
                                "type": "text",
                                "text": "a",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "b",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " are numpy arrays) and other operators are element-wise. See the note at the bottom of the docs for "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/numpy.org\/doc\/stable\/reference\/generated\/numpy.multiply.html",
                                "text": "np.multiply",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": " and others. You can also perform all of the basic element-wise operations on arrays with different dimensions as long as the dimensions are compatible according to "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/numpy.org\/doc\/stable\/user\/basics.broadcasting.html",
                                "text": "broadcasting rules"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]