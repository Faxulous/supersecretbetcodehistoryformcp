[
    {
        "user": "U010GM77S4W",
        "type": "message",
        "ts": "1592208656.413700",
        "client_msg_id": "d88aa0cb-d47b-4966-9bfb-6d44145eaa71",
        "text": "Does anyone know of a database of horse name changes?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "66cae8f5399c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-03-20\/1004508356769_66cae8f5399cf91a07ae_72.jpg",
            "first_name": "",
            "real_name": "mandelbot",
            "display_name": "mandelbot",
            "team": "T4G9NBD2M",
            "name": "demhadbale",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jb+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Does anyone know of a database of horse name changes?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "URMM9463X",
        "type": "message",
        "ts": "1592210516.416100",
        "client_msg_id": "EDA1D484-4C52-4BCC-A366-2B414F1B21CD",
        "text": "Just for info, the AWS availability zones a,b,c are assigned randomly to each account, I.e. your zone 1a could be somebody else’s 1c. This is to stop everyone piling into the same zone. ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf57720914be",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f57720914be90dd532faed6bdadad7ca.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "Xxx",
            "real_name": "Xxx",
            "display_name": "D",
            "team": "T4G9NBD2M",
            "name": "derekclements67",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dxp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Just for info, the AWS availability zones a,b,c are assigned randomly to each account, I.e. your zone 1a could be somebody else’s 1c. This is to stop everyone piling into the same zone. "
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U010GM77S4W",
                    "UBS7QANF3",
                    "U92CASP1B"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1592210545.416300",
        "client_msg_id": "3b5c00cf-9ccf-4fb0-8dac-14cda811fbda",
        "text": "That's interesting, do you have a reference?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/vhRD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That's interesting, do you have a reference?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1592210568.416500",
        "client_msg_id": "f598f89d-0961-491b-a808-8c7ac44e143f",
        "text": "yeah I didn't know that",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "R3o",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "yeah I didn't know that"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "URMM9463X",
        "type": "message",
        "ts": "1592211051.417400",
        "client_msg_id": "D8B9F69A-0399-4AFB-A9EE-9A703462BA3A",
        "text": "<https:\/\/docs.aws.amazon.com\/AWSEC2\/latest\/UserGuide\/using-regions-availability-zones.html|https:\/\/docs.aws.amazon.com\/AWSEC2\/latest\/UserGuide\/using-regions-availability-zones.html>\nGlad I could contribute something!",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf57720914be",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f57720914be90dd532faed6bdadad7ca.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "Xxx",
            "real_name": "Xxx",
            "display_name": "D",
            "team": "T4G9NBD2M",
            "name": "derekclements67",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "title": "Regions, Availability Zones, and             Local Zones - Amazon Elastic Compute Cloud       ",
                "title_link": "https:\/\/docs.aws.amazon.com\/AWSEC2\/latest\/UserGuide\/using-regions-availability-zones.html",
                "text": "Describes the Regions, Availability Zones, and Local Zones world-wide where you can host your instances.",
                "fallback": "Regions, Availability Zones, and             Local Zones - Amazon Elastic Compute Cloud       ",
                "from_url": "https:\/\/docs.aws.amazon.com\/AWSEC2\/latest\/UserGuide\/using-regions-availability-zones.html",
                "service_icon": "https:\/\/docs.aws.amazon.com\/assets\/images\/favicon.ico",
                "service_name": "docs.aws.amazon.com",
                "id": 1,
                "original_url": "https:\/\/docs.aws.amazon.com\/AWSEC2\/latest\/UserGuide\/using-regions-availability-zones.html"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=NZaq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/docs.aws.amazon.com\/AWSEC2\/latest\/UserGuide\/using-regions-availability-zones.html",
                                "text": "https:\/\/docs.aws.amazon.com\/AWSEC2\/latest\/UserGuide\/using-regions-availability-zones.html"
                            },
                            {
                                "type": "text",
                                "text": "\nGlad I could contribute something!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U4H19D1D2"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1592211082.417800",
        "client_msg_id": "27621400-9844-4771-bb1a-76277c734d35",
        "text": "Cheers",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nA8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Cheers"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UU1URJ8L8",
        "type": "message",
        "ts": "1592221550.418300",
        "client_msg_id": "a0ff2ae5-6401-4798-8060-b9e94ac7a7e2",
        "text": ":joy: <https:\/\/mothership.sg\/2020\/06\/woman-china-scam-insurance-delayed-flights\/>",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g7a5a7d77117",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7a5a7d7711746fb16f400e11af544b2e.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0012-72.png",
            "first_name": "",
            "real_name": "Remi",
            "display_name": "Remi",
            "team": "T4G9NBD2M",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "title": "Woman in China, 45, made S$589,800 by buying insurance on flights she predicted would get delayed",
                "title_link": "https:\/\/mothership.sg\/2020\/06\/woman-china-scam-insurance-delayed-flights\/",
                "text": "To avoid getting caught, she used over 20 other identities to take out the insurance.",
                "fallback": "Woman in China, 45, made S$589,800 by buying insurance on flights she predicted would get delayed",
                "image_url": "https:\/\/static.mothership.sg\/1\/2020\/06\/woman-china-delayed-flights-insurance.jpg",
                "from_url": "https:\/\/mothership.sg\/2020\/06\/woman-china-scam-insurance-delayed-flights\/",
                "image_width": 476,
                "image_height": 250,
                "image_bytes": 349997,
                "service_icon": "https:\/\/mothership.sg\/assets\/images\/favicon-32x32.png",
                "service_name": "mothership.sg",
                "id": 1,
                "original_url": "https:\/\/mothership.sg\/2020\/06\/woman-china-scam-insurance-delayed-flights\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Tfxpl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "emoji",
                                "name": "joy",
                                "unicode": "1f602"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/mothership.sg\/2020\/06\/woman-china-scam-insurance-delayed-flights\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "joy",
                "users": [
                    "U92CASP1B",
                    "U4H19D1D2"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UFPEU7URG",
        "type": "message",
        "ts": "1592227511.423600",
        "client_msg_id": "d1a4b837-f6c2-42fc-a41b-fe4c6bf353b8",
        "text": "A naive question as I'm only really dipping in and out of using bflw when needed, and not really a developer, but I've got a setup where I'm basically only ever grabbing prices from BFEX, and storing\/comparing them with input i am providing from scraping other sites or manually, right now I generate a list of markets, and store the current available back\/lay price, I'm only ever really interested in that price, currently that runs over a series of (now fairly slow) loops for the events and markets i'm interested in, I'd like to be able to expand that list of markets\/events but this then makes some of the data at the beginning of my loops quite old by the time it's gone through the rest of the markets i'm interested and stored those (in a MySQL database), I think the right answer is to use Flumine, but I just wanted to see if anyone else does similar and how they handle it, in terms of getting the data back out for \"current price\", as I'd always been storing it in a db that was easy but i'm not sure if it's feasible with the rate that the data comes into flumine whether to then store that in a db to be able to use with my comparisons, hope that makes sense",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gad95b05e95e",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/cad95b05e95ed7575f487d75e10e36c2.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Chris Davidson",
            "display_name": "Chris",
            "team": "T4G9NBD2M",
            "name": "chris",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "o6fwQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A naive question as I'm only really dipping in and out of using bflw when needed, and not really a developer, but I've got a setup where I'm basically only ever grabbing prices from BFEX, and storing\/comparing them with input i am providing from scraping other sites or manually, right now I generate a list of markets, and store the current available back\/lay price, I'm only ever really interested in that price, currently that runs over a series of (now fairly slow) loops for the events and markets i'm interested in, I'd like to be able to expand that list of markets\/events but this then makes some of the data at the beginning of my loops quite old by the time it's gone through the rest of the markets i'm interested and stored those (in a MySQL database), I think the right answer is to use Flumine, but I just wanted to see if anyone else does similar and how they handle it, in terms of getting the data back out for \"current price\", as I'd always been storing it in a db that was easy but i'm not sure if it's feasible with the rate that the data comes into flumine whether to then store that in a db to be able to use with my comparisons, hope that makes sense"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1592227566.424300",
        "edited": {
            "user": "U4H19D1D2",
            "ts": "1592227604.000000"
        },
        "client_msg_id": "c63d804c-67da-4ff7-a316-341f7f48d959",
        "text": "Use streaming, ignore the queue and instead <https:\/\/liampauling.github.io\/betfair\/streaming\/#snap|snap> the listener when you want a price, super quick and super lightweight",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=S6vq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Use streaming, ignore the queue and instead "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/liampauling.github.io\/betfair\/streaming\/#snap",
                                "text": "snap"
                            },
                            {
                                "type": "text",
                                "text": " the listener when you want a price, super quick and super lightweight"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "channel_join",
        "user": "U015SB4K80H",
        "text": "<@U015SB4K80H> has joined the channel",
        "type": "message",
        "ts": "1592227850.424500"
    },
    {
        "user": "UFPEU7URG",
        "type": "message",
        "ts": "1592228329.426500",
        "client_msg_id": "f098fa78-afd5-4fb2-8329-0f2032669f0a",
        "text": "Thanks <@U4H19D1D2> just looking at that now, so I'd still need to store the list of markets and all the associated metadata that I'm streaming somewhere in my database, and then just grab them directly from the stream, how does that actually work in practice though, do i have it sitting as a daemon and can query that, or just run it essentially ad-hoc when i want to update the prices as I pretty much do now with bflw but in a big loop",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gad95b05e95e",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/cad95b05e95ed7575f487d75e10e36c2.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Chris Davidson",
            "display_name": "Chris",
            "team": "T4G9NBD2M",
            "name": "chris",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1ddWV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks "
                            },
                            {
                                "type": "user",
                                "user_id": "U4H19D1D2"
                            },
                            {
                                "type": "text",
                                "text": " just looking at that now, so I'd still need to store the list of markets and all the associated metadata that I'm streaming somewhere in my database, and then just grab them directly from the stream, how does that actually work in practice though, do i have it sitting as a daemon and can query that, or just run it essentially ad-hoc when i want to update the prices as I pretty much do now with bflw but in a big loop"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1592228563.427800",
        "client_msg_id": "dedfb56a-a550-4be1-a3bf-90d3b468058f",
        "text": "it would be a daemon similar to this <https:\/\/github.com\/liampauling\/betfair\/blob\/master\/examples\/examplestreamingerrhandling.py|example> but set the queue to None as you don't need it (leaving it would cause a memory leak in your use case as it would fill)",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "fallback": "[liampauling\/betfair] examples\/examplestreamingerrhandling.py",
                "text": "```\nimport logging\nimport queue\nimport threading\nfrom tenacity import retry, wait_exponential\n\nimport betfairlightweight\nfrom betfairlightweight import StreamListener\nfrom betfairlightweight import BetfairError\nfrom betfairlightweight.filters import (\n    streaming_market_filter,\n    streaming_market_data_filter,\n)\n\n\"\"\"\nStreaming example to handle timeouts or connection errors, \nwith reconnect.\n\nCode uses 'tenacity' library for retrying.\n\nStreaming class inherits threading module to simplify start\/\nstop.\n\"\"\"\n\n# setup logging\nlogging.basicConfig(level=<http:\/\/logging.INFO|logging.INFO>)  # change to DEBUG to see log all updates\nlogger = logging.getLogger(__name__)\n\n\nclass Streaming(threading.Thread):\n    def __init__(\n        self,\n        client: betfairlightweight.APIClient,\n        market_filter: dict,\n        market_data_filter: dict,\n        conflate_ms: int = None,\n        streaming_unique_id: int = 1000,\n    ):\n        threading.Thread.__init__(self, daemon=True, name=self.__class__.__name__)\n        self.client = client\n        self.market_filter = market_filter\n        self.market_data_filter = market_data_filter\n        self.conflate_ms = conflate_ms\n        self.streaming_unique_id = streaming_unique_id\n        self.stream = None\n        self.output_queue = queue.Queue()\n        self.listener = StreamListener(output_queue=self.output_queue)\n\n    @retry(wait=wait_exponential(multiplier=1, min=2, max=20))\n    def run(self) -&gt; None:\n        <http:\/\/logger.info|logger.info>(\"Starting MarketStreaming\")\n        self.client.login()\n        self.stream = self.client.streaming.create_stream(\n            unique_id=self.streaming_unique_id, listener=self.listener\n        )\n        try:\n            self.streaming_unique_id = self.stream.subscribe_to_markets(\n                market_filter=self.market_filter,\n                market_data_filter=self.market_data_filter,\n                conflate_ms=self.conflate_ms,\n                initial_clk=self.listener.initial_clk,  # supplying these two values allows a reconnect\n                clk=self.listener.clk,\n            )\n            self.stream.start()\n        except BetfairError:\n            logger.error(\"MarketStreaming run error\", exc_info=True)\n            raise\n        except Exception:\n            logger.critical(\"MarketStreaming run error\", exc_info=True)\n            raise\n        <http:\/\/logger.info|logger.info>(\"Stopped MarketStreaming {0}\".format(self.streaming_unique_id))\n\n    def stop(self) -&gt; None:\n        if self.stream:\n            self.stream.stop()\n\n\n# create trading instance (app key must be activated for streaming)\ntrading = betfairlightweight.APIClient(\"username\", \"password\", app_key=\"appKey\")\n\n# login\ntrading.login()\n\n# create filters (GB WIN racing)\nmarket_filter = streaming_market_filter(\n    event_type_ids=[\"7\"], country_codes=[\"GB\"], market_types=[\"WIN\"]\n)\nmarket_data_filter = streaming_market_data_filter(\n    fields=[\"EX_BEST_OFFERS\", \"EX_MARKET_DEF\"], ladder_levels=3\n)\n\n# create streaming object\nstreaming = Streaming(trading, market_filter, market_data_filter)\n\n# start streaming (runs in new thread and handles any errors)\nstreaming.start()\n\n# check for updates in output queue\nwhile True:\n    market_books = streaming.output_queue.get()\n    print(market_books)\n\n    for market_book in market_books:\n        print(\n            market_book,\n            market_book.streaming_unique_id,  # unique id of stream (returned from subscribe request)\n            market_book.streaming_update,  # json update received\n            market_book.market_definition,  # streaming definition, similar to catalogue request\n            market_book.publish_time,  # betfair publish time of update\n        )\n\n```",
                "title": "examples\/examplestreamingerrhandling.py",
                "footer": "<https:\/\/github.com\/liampauling\/betfair|liampauling\/betfair>",
                "id": 1,
                "title_link": "https:\/\/github.com\/liampauling\/betfair\/blob\/master\/examples\/examplestreamingerrhandling.py",
                "footer_icon": "https:\/\/github.githubassets.com\/favicon.ico",
                "color": "24292f",
                "mrkdwn_in": [
                    "text"
                ],
                "bot_id": "B01144Z0734",
                "app_unfurl_url": "https:\/\/github.com\/liampauling\/betfair\/blob\/master\/examples\/examplestreamingerrhandling.py",
                "is_app_unfurl": true
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QK9g\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "it would be a daemon similar to this "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/liampauling\/betfair\/blob\/master\/examples\/examplestreamingerrhandling.py",
                                "text": "example"
                            },
                            {
                                "type": "text",
                                "text": " but set the queue to None as you don't need it (leaving it would cause a memory leak in your use case as it would fill)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFPEU7URG",
        "type": "message",
        "ts": "1592228880.429300",
        "edited": {
            "user": "UFPEU7URG",
            "ts": "1592228889.000000"
        },
        "client_msg_id": "78141926-fdcb-4d78-a8f5-85ec96d384cd",
        "text": "Ok, I think I understand, so the logic of running that and then connecting to it from another script is built into bflw? And I think I've seen mentioned before that there's a limit to the number of markets you can have streaming in a single stream? For instance I'd quite happily just have every football match and market for the next 7 days but I guess that isn't realistic",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gad95b05e95e",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/cad95b05e95ed7575f487d75e10e36c2.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Chris Davidson",
            "display_name": "Chris",
            "team": "T4G9NBD2M",
            "name": "chris",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "khk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ok, I think I understand, so the logic of running that and then connecting to it from another script is built into bflw? And I think I've seen mentioned before that there's a limit to the number of markets you can have streaming in a single stream? For instance I'd quite happily just have every football match and market for the next 7 days but I guess that isn't realistic"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1592229186.429800",
        "client_msg_id": "c9223015-efad-4bd6-888d-923b096fd869",
        "text": "default is 200 markets but you can get it bumped",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eSR6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "default is 200 markets but you can get it bumped"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFPEU7URG",
        "type": "message",
        "ts": "1592229290.430000",
        "client_msg_id": "84376993-1db6-4dca-9513-caa8ca6b2471",
        "text": "Thanks for your help, I'll give it a go",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gad95b05e95e",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/cad95b05e95ed7575f487d75e10e36c2.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Chris Davidson",
            "display_name": "Chris",
            "team": "T4G9NBD2M",
            "name": "chris",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Q\/Y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for your help, I'll give it a go"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U015D6MJ9DZ",
        "type": "message",
        "ts": "1592229770.431000",
        "client_msg_id": "29c5ecb6-41e9-4fbb-911b-91d47a761c17",
        "text": "Hi guys, new here, just saying hi. Great gratitude to liam and whoever has contributed to betfairlightweight, working my way through the github reading now!",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf40e9abedfb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f40e9abedfbe5a1567508cbd4cca7569.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "",
            "real_name": "Aaron",
            "display_name": "Aaron",
            "team": "T4G9NBD2M",
            "name": "d2corpdev",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ufR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi guys, new here, just saying hi. Great gratitude to liam and whoever has contributed to betfairlightweight, working my way through the github reading now!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "wave",
                "users": [
                    "U4H19D1D2"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1592230247.431200",
        "client_msg_id": "b31ac312-7a20-4d1a-b6ec-fc4493d01c59",
        "text": "Welcome",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hrjJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Welcome"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01093Z1KF0",
        "type": "message",
        "ts": "1592236461.432000",
        "client_msg_id": "a0769af8-9841-4dcd-80bf-4917a4a5200f",
        "text": "how do you guys generally deal with loading huge amounts of data into memory? I'm talking a few million lines or so",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g0e065c4f427",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/0e065c4f4274fd0a565c58690dfc4a58.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "",
            "real_name": "brightcake",
            "display_name": "brightcake",
            "team": "T4G9NBD2M",
            "name": "vlademelianov",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DCzWp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "how do you guys generally deal with loading huge amounts of data into memory? I'm talking a few million lines or so"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01093Z1KF0",
        "type": "message",
        "ts": "1592236486.432400",
        "client_msg_id": "dd731d04-4f3c-4ce0-8635-5eb176d23eca",
        "text": "i'm trying to chunk it atm but obviously that really slows down the processing",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g0e065c4f427",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/0e065c4f4274fd0a565c58690dfc4a58.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "",
            "real_name": "brightcake",
            "display_name": "brightcake",
            "team": "T4G9NBD2M",
            "name": "vlademelianov",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VBb3a",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i'm trying to chunk it atm but obviously that really slows down the processing"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1592236574.433000",
        "client_msg_id": "53a4daf5-0954-4b09-9a28-ca38ba183534",
        "text": "```with open(file, 'r') as f:\n    lines = f.readlines()```\n:sunglasses:",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "p47W",
                "elements": [
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "with open(file, 'r') as f:\n    lines = f.readlines()"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "emoji",
                                "name": "sunglasses",
                                "unicode": "1f60e"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01093Z1KF0",
        "type": "message",
        "ts": "1592236607.433300",
        "client_msg_id": "d086de50-7fc4-4654-a1cd-eadb8a3c9d8d",
        "text": "hah, i'm reading from a sql db",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g0e065c4f427",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/0e065c4f4274fd0a565c58690dfc4a58.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "",
            "real_name": "brightcake",
            "display_name": "brightcake",
            "team": "T4G9NBD2M",
            "name": "vlademelianov",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oZx9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "hah, i'm reading from a sql db"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01093Z1KF0",
        "type": "message",
        "ts": "1592236633.433500",
        "client_msg_id": "21a06f7c-7036-4f1f-8073-75a52792f453",
        "text": "probably should've mentioned that",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g0e065c4f427",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/0e065c4f4274fd0a565c58690dfc4a58.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "",
            "real_name": "brightcake",
            "display_name": "brightcake",
            "team": "T4G9NBD2M",
            "name": "vlademelianov",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7ug",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "probably should've mentioned that"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUCD6P13J",
        "type": "message",
        "ts": "1592236671.433900",
        "edited": {
            "user": "UUCD6P13J",
            "ts": "1592236845.000000"
        },
        "client_msg_id": "d7329280-c2e9-4b01-b6aa-a41c7117ac27",
        "text": "you can use cursor pagination to select from tables with a large amount of rows",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g6898272ab81",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6898272ab810e419c2c9ca9af1e53da8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0012-72.png",
            "first_name": "Lee",
            "real_name": "Lee U",
            "display_name": "Lee",
            "team": "T4G9NBD2M",
            "name": "lunswor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KKIQK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "you can use cursor pagination to select from tables with a large amount of rows"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U4H19D1D2"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1592238789.436400",
        "client_msg_id": "AA2BB323-1EC8-4E01-9ADE-76C3CBE89321",
        "text": "+1 on cursors, unless you need it all in memory?  If so why? You can do simple stuff like limit the amount of data being returned \/ use a low level wrapper (c based) ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hWn0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "+1 on cursors, unless you need it all in memory?  If so why? You can do simple stuff like limit the amount of data being returned \/ use a low level wrapper (c based) "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN1497LJC",
        "type": "message",
        "ts": "1592246482.438900",
        "client_msg_id": "d6995bd6-5bbd-4da0-91d7-cbefe4cf2a30",
        "text": "Does anyone know whether an Intel 10900k CPU would be better than the Ryzen 3900x for running Python\/Flumine with multiprocessing?\n\nRyzen 3900x has a much better passmark score:\n<https:\/\/www.cpubenchmark.net\/cpu.php?cpu=Intel+Core+i9-10900K+%40+3.70GHz&amp;id=3730>\n\n<https:\/\/www.cpubenchmark.net\/cpu.php?cpu=AMD+Ryzen+9+3900X&amp;id=3493>\n\nHowever, reading reviews of the 2 doesn't seem very conclusive, such as <https:\/\/www.tomshardware.com\/reviews\/intel-core-i9-10900k-cpu-review\/4|this>.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "ga740a9a5a57",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/1a740a9a5a57633755157e17ebe96b27.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0018-72.png",
            "first_name": "",
            "real_name": "JonJonJon",
            "display_name": "JonJonJon",
            "team": "T4G9NBD2M",
            "name": "edgetrading2",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "title": "PassMark - Intel Core i9-10900K @ 3.70GHz - Price performance comparison",
                "title_link": "https:\/\/www.cpubenchmark.net\/cpu.php?cpu=Intel+Core+i9-10900K+%40+3.70GHz&id=3730",
                "text": "Performance and price comparison graphs for Intel Core i9-10900K @ 3.70GHz",
                "fallback": "PassMark - Intel Core i9-10900K @ 3.70GHz - Price performance comparison",
                "from_url": "https:\/\/www.cpubenchmark.net\/cpu.php?cpu=Intel+Core+i9-10900K+%40+3.70GHz&id=3730",
                "service_icon": "https:\/\/www.cpubenchmark.net\/favicon.ico",
                "service_name": "cpubenchmark.net",
                "id": 1,
                "original_url": "https:\/\/www.cpubenchmark.net\/cpu.php?cpu=Intel+Core+i9-10900K+%40+3.70GHz&amp;id=3730"
            },
            {
                "title": "PassMark - AMD Ryzen 9 3900X - Price performance comparison",
                "title_link": "https:\/\/www.cpubenchmark.net\/cpu.php?cpu=AMD+Ryzen+9+3900X&id=3493",
                "text": "Performance and price comparison graphs for AMD Ryzen 9 3900X",
                "fallback": "PassMark - AMD Ryzen 9 3900X - Price performance comparison",
                "from_url": "https:\/\/www.cpubenchmark.net\/cpu.php?cpu=AMD+Ryzen+9+3900X&id=3493",
                "service_icon": "https:\/\/www.cpubenchmark.net\/favicon.ico",
                "service_name": "cpubenchmark.net",
                "id": 2,
                "original_url": "https:\/\/www.cpubenchmark.net\/cpu.php?cpu=AMD+Ryzen+9+3900X&amp;id=3493"
            },
            {
                "service_name": "Tom's Hardware",
                "title": "Intel Core i9-10900K Review: Ten Cores, 5.3 GHz, and Excessive Power Draw",
                "title_link": "https:\/\/www.tomshardware.com\/reviews\/intel-core-i9-10900k-cpu-review\/4",
                "text": "Kick the tires and light the TDP fires",
                "fallback": "Tom's Hardware: Intel Core i9-10900K Review: Ten Cores, 5.3 GHz, and Excessive Power Draw",
                "image_url": "https:\/\/cdn.mos.cms.futurecdn.net\/6FeLnuETEpBqeXfwrookcW-1200-80.jpg",
                "image_width": 515,
                "from_url": "https:\/\/www.tomshardware.com\/reviews\/intel-core-i9-10900k-cpu-review\/4",
                "image_height": 250,
                "image_bytes": 124344,
                "service_icon": "https:\/\/vanilla.futurecdn.net\/tomshardware\/185559\/apple-touch-icon.png",
                "id": 3,
                "original_url": "https:\/\/www.tomshardware.com\/reviews\/intel-core-i9-10900k-cpu-review\/4"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=SF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Does anyone know whether an Intel 10900k CPU would be better than the Ryzen 3900x for running Python\/Flumine with multiprocessing?\n\nRyzen 3900x has a much better passmark score:\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.cpubenchmark.net\/cpu.php?cpu=Intel+Core+i9-10900K+%40+3.70GHz&id=3730"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.cpubenchmark.net\/cpu.php?cpu=AMD+Ryzen+9+3900X&id=3493"
                            },
                            {
                                "type": "text",
                                "text": "\n\nHowever, reading reviews of the 2 doesn't seem very conclusive, such as "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.tomshardware.com\/reviews\/intel-core-i9-10900k-cpu-review\/4",
                                "text": "this"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUCD6P13J",
        "type": "message",
        "ts": "1592246811.439800",
        "client_msg_id": "7253501e-28b9-447e-9709-abaa64ffe868",
        "text": "I have the 3900X. I don't know how it compares to the intel chip but i can tell you it's a beast",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g6898272ab81",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6898272ab810e419c2c9ca9af1e53da8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0012-72.png",
            "first_name": "Lee",
            "real_name": "Lee U",
            "display_name": "Lee",
            "team": "T4G9NBD2M",
            "name": "lunswor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KhO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have the 3900X. I don't know how it compares to the intel chip but i can tell you it's a beast"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUCD6P13J",
        "type": "message",
        "ts": "1592246840.440200",
        "client_msg_id": "fae27210-7259-48d3-91b6-453be9ba84ec",
        "text": "but i am comparing to my 5 year old i7 macbook pro",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g6898272ab81",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6898272ab810e419c2c9ca9af1e53da8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0012-72.png",
            "first_name": "Lee",
            "real_name": "Lee U",
            "display_name": "Lee",
            "team": "T4G9NBD2M",
            "name": "lunswor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tbQz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "but i am comparing to my 5 year old i7 macbook pro"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1592246942.441200",
        "client_msg_id": "3A99C2E3-374D-4B04-991F-74A297B10337",
        "text": "Better to go for 4 extra logical threads in the 3900x",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ejc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Better to go for 4 extra logical threads in the 3900x"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1592248676.442100",
        "client_msg_id": "035E12C5-BDFD-4045-B983-F6B89F0E97D9",
        "text": "Does it make it a lot faster? I guess so? Out of interest how many orders per market do you have?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591945261.306300",
        "parent_user_id": "U4H19D1D2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "603Ke",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Does it make it a lot faster? I guess so? Out of interest how many orders per market do you have?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1592248839.443700",
        "client_msg_id": "EECCABA4-D25E-4CC0-86F2-873602449642",
        "text": "Btw he current dev branch has a way to reduce the data being processed, for example limiting to final 10mins or just inplay (much much quicker if you can use it)",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591945261.306300",
        "parent_user_id": "U4H19D1D2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Z+8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Btw he current dev branch has a way to reduce the data being processed, for example limiting to final 10mins or just inplay (much much quicker if you can use it)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN1497LJC",
        "type": "message",
        "ts": "1592249089.443900",
        "client_msg_id": "438c7c64-246b-40c2-ae0a-1e1be7060c9f",
        "text": "That's good to know. Thanks! Though I don't do IP yet.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "ga740a9a5a57",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/1a740a9a5a57633755157e17ebe96b27.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0018-72.png",
            "first_name": "",
            "real_name": "JonJonJon",
            "display_name": "JonJonJon",
            "team": "T4G9NBD2M",
            "name": "edgetrading2",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591945261.306300",
        "parent_user_id": "U4H19D1D2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XD8b",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That's good to know. Thanks! Though I don't do IP yet."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "",
        "files": [
            {
                "id": "F015FGEN0HH",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "UN1497LJC",
        "display_as_bot": false,
        "type": "message",
        "ts": "1592249166.444500",
        "thread_ts": "1591945261.306300",
        "parent_user_id": "U4H19D1D2"
    },
    {
        "user": "UN1497LJC",
        "type": "message",
        "ts": "1592249324.445700",
        "client_msg_id": "baf73972-899e-462d-a191-8de8cbe6edca",
        "text": "The backtest is run on the example I added to flumine. So it is just a modified version of your LowestLayer strategy, but runs PE, and therefore has a lot of cancelled orders in the blotter. Such a profile would be realistic for someone quoting\/changing lots of prices. Such as someone who quoted limit orders at the bollinger bands",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "ga740a9a5a57",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/1a740a9a5a57633755157e17ebe96b27.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0018-72.png",
            "first_name": "",
            "real_name": "JonJonJon",
            "display_name": "JonJonJon",
            "team": "T4G9NBD2M",
            "name": "edgetrading2",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591945261.306300",
        "parent_user_id": "U4H19D1D2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JGn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The backtest is run on the example I added to flumine. So it is just a modified version of your LowestLayer strategy, but runs PE, and therefore has a lot of cancelled orders in the blotter. Such a profile would be realistic for someone quoting\/changing lots of prices. Such as someone who quoted limit orders at the bollinger bands"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1592249361.446400",
        "client_msg_id": "D6E3C3AF-8158-47DC-8571-5C89805CD782",
        "text": "Just thinking about this, do you not think some users would want uncomplete trades? Maybe to calculate full positions or multi trade logic ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591945261.306300",
        "parent_user_id": "U4H19D1D2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MnSu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Just thinking about this, do you not think some users would want uncomplete trades? Maybe to calculate full positions or multi trade logic "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN1497LJC",
        "type": "message",
        "ts": "1592249617.446600",
        "edited": {
            "user": "UN1497LJC",
            "ts": "1592249642.000000"
        },
        "client_msg_id": "8210fcfe-4edc-480e-bacb-ab288e4574b9",
        "text": "The proposed logic should not change what the user sees.\n\nIt changes the bets getting passed to process.process_current_order.\n\nIf bets are complete, then process_current_order won't need to do anything to them.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "ga740a9a5a57",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/1a740a9a5a57633755157e17ebe96b27.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0018-72.png",
            "first_name": "",
            "real_name": "JonJonJon",
            "display_name": "JonJonJon",
            "team": "T4G9NBD2M",
            "name": "edgetrading2",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591945261.306300",
        "parent_user_id": "U4H19D1D2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oohQR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The proposed logic should not change what the user sees.\n\nIt changes the bets getting passed to process.process_current_order.\n\nIf bets are complete, then process_current_order won't need to do anything to them."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1592249741.448200",
        "client_msg_id": "7A7ECE39-0705-401D-B3F5-2F63C4DA43F9",
        "text": "But the user would then only get the completed orders but might want to see the entirety of their orders even if the trade is complete ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591945261.306300",
        "parent_user_id": "U4H19D1D2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/SS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "But the user would then only get the completed orders but might want to see the entirety of their orders even if the trade is complete "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN1497LJC",
        "type": "message",
        "ts": "1592250140.448400",
        "client_msg_id": "70b87ba8-3352-4f54-b4a9-a7232d440458",
        "text": "A user would typically receive orders when backtest.py calls strategy.process_orders here:\n\n```for strategy in self.strategies:\n    strategy_orders = blotter.strategy_orders(strategy)\n    strategy.process_orders(market, strategy_orders)```\nMy code change does not effect the contents of strategy_orders.\n\nIt just changes what gets sent to process.process_current_order:\n\n```for bet_id in potentially_incomplete_order_ids:\n    process.process_current_order(blotter[bet_id])```\nFrom my understanding of the code, the orders that it omits won't get affected by process_current_order. However, I am not 100% sure.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "ga740a9a5a57",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/1a740a9a5a57633755157e17ebe96b27.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0018-72.png",
            "first_name": "",
            "real_name": "JonJonJon",
            "display_name": "JonJonJon",
            "team": "T4G9NBD2M",
            "name": "edgetrading2",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591945261.306300",
        "parent_user_id": "U4H19D1D2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dasJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A user would typically receive orders when backtest.py calls strategy.process_orders here:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "for strategy in self.strategies:\n    strategy_orders = blotter.strategy_orders(strategy)\n    strategy.process_orders(market, strategy_orders)"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My code change does not effect the contents of strategy_orders.\n\nIt just changes what gets sent to process.process_current_order:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "for bet_id in potentially_incomplete_order_ids:\n    process.process_current_order(blotter[bet_id])"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nFrom my understanding of the code, the orders that it omits won't get affected by process_current_order. However, I am not 100% sure."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1592250605.449300",
        "client_msg_id": "FDA989AB-A840-4823-A9B9-0746F9D8CF3E",
        "text": "Ah I missed that, will stop trying to do this on my iPad and look properly tomorrow ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591945261.306300",
        "parent_user_id": "U4H19D1D2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "E=z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah I missed that, will stop trying to do this on my iPad and look properly tomorrow "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN1497LJC",
        "type": "message",
        "ts": "1592250619.449500",
        "client_msg_id": "b7fd3aef-f2f7-4cf0-8647-4773da65d00d",
        "text": "Ah, sorry for disturbing your evening!",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "ga740a9a5a57",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/1a740a9a5a57633755157e17ebe96b27.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0018-72.png",
            "first_name": "",
            "real_name": "JonJonJon",
            "display_name": "JonJonJon",
            "team": "T4G9NBD2M",
            "name": "edgetrading2",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591945261.306300",
        "parent_user_id": "U4H19D1D2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7yg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah, sorry for disturbing your evening!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1592251552.451100",
        "client_msg_id": "4F45D9AE-C95C-415C-8D15-21F4F60D1466",
        "text": "No problem, looking at it I would move the logic into the blotter itself ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1591945261.306300",
        "parent_user_id": "U4H19D1D2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nF665",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "No problem, looking at it I would move the logic into the blotter itself "
                            }
                        ]
                    }
                ]
            }
        ]
    }
]