[
    {
        "user": "U847PLYN6",
        "type": "message",
        "ts": "1576860137.007900",
        "edited": {
            "user": "U847PLYN6",
            "ts": "1576860462.000000"
        },
        "client_msg_id": "b19c7e99-2b4b-4822-a1b6-c8b5a4f0372c",
        "text": "Hi, I'm using the matchbook API wrapper that some people on here may use. I'm trying to do some optimisation I would like to be able to instead of poll data from the events endpoint by sport_id I'd prefer to pass a list of event_id's to the wrapper function that handles the request.  On matchbooks online documentation you can pass a list of evend_id's and only return data for those markets.  the below code using requests lib returns event's data for three events passed in the querystring.\nIs it possible to do the same with  the matchbook wrapper here? <https:\/\/github.com\/rozzac90\/matchbook\/blob\/master\/matchbook\/endpoints\/marketdata.py>\nWhen I try I get an error\n```matchbook.exceptions.ApiError: ['Incorrect request param: id.']```\n```    events = api.market_data.get_events(\n                                        event_id='1148393114710116,1308951387620017',\n                                        states=MarketStates.All,\n                                                        per_page=200, offset=0,\n                                                        include_event_participants=Boolean.T,\n                                                        category_ids=None, price_depth=3,\n                                                        side=Side.All, session=None)```\n\n\n\n```import requests\nurl = \"<https:\/\/api.matchbook.com\/edge\/rest\/events>\"```\n```querystring = {\"offset\":\"0\",\"per-page\":\"20\",\"ids\":\"1305049710690017,1305058606890017, 1302073817190017\",\"states\":\"open,suspended,closed,graded\",\"exchange-type\":\"back-lay\",\"odds-type\":\"DECIMAL\",\"include-prices\":\"false\",\"price-depth\":\"3\",\"price-mode\":\"expanded\",\"include-event-participants\":\"false\"}```\n```headers = {'user-agent': 'api-doc-test-client'}```\n```response = requests.request(\"GET\", url, headers=headers, params=querystring)```\n```print(response.text)```",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "ga58efe77b66",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/0a58efe77b6653b9d62b909203366db6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Tom",
            "display_name": "Tom",
            "team": "T4G9NBD2M",
            "name": "tomirl2008",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "rozzac90\/matchbook",
                "title_link": "https:\/\/github.com\/rozzac90\/matchbook\/blob\/master\/matchbook\/endpoints\/marketdata.py",
                "text": "Python wrapper for Matchbook API. Contribute to rozzac90\/matchbook development by creating an account on GitHub.",
                "fallback": "GitHub: rozzac90\/matchbook",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/25259981?s=400&v=4",
                "from_url": "https:\/\/github.com\/rozzac90\/matchbook\/blob\/master\/matchbook\/endpoints\/marketdata.py",
                "thumb_width": 420,
                "thumb_height": 420,
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/github.png",
                "id": 1,
                "original_url": "https:\/\/github.com\/rozzac90\/matchbook\/blob\/master\/matchbook\/endpoints\/marketdata.py"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4FC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi, I'm using the matchbook API wrapper that some people on here may use. I'm trying to do some optimisation I would like to be able to instead of poll data from the events endpoint by sport_id I'd prefer to pass a list of event_id's to the wrapper function that handles the request.  On matchbooks online documentation you can pass a list of evend_id's and only return data for those markets.  the below code using requests lib returns event's data for three events passed in the querystring.\nIs it possible to do the same with  the matchbook wrapper here? "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/rozzac90\/matchbook\/blob\/master\/matchbook\/endpoints\/marketdata.py"
                            },
                            {
                                "type": "text",
                                "text": "\nWhen I try I get an error\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "matchbook.exceptions.ApiError: ['Incorrect request param: id.']"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "    events = api.market_data.get_events(\n                                        event_id='1148393114710116,1308951387620017',\n                                        states=MarketStates.All,\n                                                        per_page=200, offset=0,\n                                                        include_event_participants=Boolean.T,\n                                                        category_ids=None, price_depth=3,\n                                                        side=Side.All, session=None)"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\n\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "import requests\nurl = \""
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/api.matchbook.com\/edge\/rest\/events"
                            },
                            {
                                "type": "text",
                                "text": "\""
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "querystring = {\"offset\":\"0\",\"per-page\":\"20\",\"ids\":\"1305049710690017,1305058606890017, 1302073817190017\",\"states\":\"open,suspended,closed,graded\",\"exchange-type\":\"back-lay\",\"odds-type\":\"DECIMAL\",\"include-prices\":\"false\",\"price-depth\":\"3\",\"price-mode\":\"expanded\",\"include-event-participants\":\"false\"}"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "headers = {'user-agent': 'api-doc-test-client'}"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "response = requests.request(\"GET\", url, headers=headers, params=querystring)"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "print(response.text)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFTBRB3F1",
        "type": "message",
        "ts": "1576879400.010100",
        "client_msg_id": "f5b67ea0-e8ae-4b5a-a4d4-c19e156459c7",
        "text": "Does anyone have the formula to replicate the equivalent of 'if-win' from the Betfair GUI, I've noticed my calcs don't always perfectly match, so I think I must be mis-applying the com somewhere, but not sure exactly where!",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g771e110be94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a771e110be945b86bede9d5c1bb551e3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Newbie99",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "vjmehra",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Uuf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Does anyone have the formula to replicate the equivalent of 'if-win' from the Betfair GUI, I've noticed my calcs don't always perfectly match, so I think I must be mis-applying the com somewhere, but not sure exactly where!"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]