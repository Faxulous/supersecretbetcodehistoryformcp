[
    {
        "user": "U01PJ5YMFBJ",
        "type": "message",
        "ts": "1711715479.434379",
        "client_msg_id": "8600f574-573d-484f-9a62-40453d88db63",
        "text": "optimized my pandas vector processing, should process the 16M row input in a mere 18hours :slightly_smiling_face:",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g819c7f591cc",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/819c7f591cc888486f19b3f2f49f2011.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0014-72.png",
            "first_name": "AndyL",
            "real_name": "AndyL",
            "display_name": "AndyL",
            "team": "T4G9NBD2M",
            "name": "andrew_m_leonard",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1711715479.434379",
        "reply_count": 15,
        "reply_users_count": 7,
        "latest_reply": "1711810533.866039",
        "reply_users": [
            "U065R0MLLBB",
            "U03FS7KM2NL",
            "U04H54Q392N",
            "U01PJ5YMFBJ",
            "UPMUFSGCR",
            "U4H19D1D2",
            "UEA14GBRR"
        ],
        "replies": [
            {
                "user": "U065R0MLLBB",
                "ts": "1711717316.722949"
            },
            {
                "user": "U03FS7KM2NL",
                "ts": "1711717422.876599"
            },
            {
                "user": "U04H54Q392N",
                "ts": "1711717764.876369"
            },
            {
                "user": "U01PJ5YMFBJ",
                "ts": "1711729088.395069"
            },
            {
                "user": "U01PJ5YMFBJ",
                "ts": "1711729143.264369"
            },
            {
                "user": "U04H54Q392N",
                "ts": "1711737097.215489"
            },
            {
                "user": "U01PJ5YMFBJ",
                "ts": "1711740085.197559"
            },
            {
                "user": "U04H54Q392N",
                "ts": "1711742048.473639"
            },
            {
                "user": "UPMUFSGCR",
                "ts": "1711746687.734169"
            },
            {
                "user": "U01PJ5YMFBJ",
                "ts": "1711746875.889879"
            },
            {
                "user": "U01PJ5YMFBJ",
                "ts": "1711746918.673659"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1711747131.307779"
            },
            {
                "user": "U01PJ5YMFBJ",
                "ts": "1711747527.873239"
            },
            {
                "user": "UEA14GBRR",
                "ts": "1711809763.454409"
            },
            {
                "user": "U01PJ5YMFBJ",
                "ts": "1711810533.866039"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1711810533.866039",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6bnmm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "optimized my pandas vector processing, should process the 16M row input in a mere 18hours "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "upside_down_face",
                "users": [
                    "U065R0MLLBB"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U065R0MLLBB",
        "type": "message",
        "ts": "1711717316.722949",
        "client_msg_id": "ffc56356-2dde-4a6e-8ab2-7af293ebad92",
        "text": "depending on what operations you do, might be worth checking\n<https:\/\/github.com\/thedataincubator\/data-science-blogs\/blob\/master\/sqlite-vs-pandas.md>",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g93545c4c082",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/93545c4c08225ae2783170fe84e1c33e.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "JL",
            "real_name": "JL",
            "display_name": "JL",
            "team": "T4G9NBD2M",
            "name": "nh8p2fyd",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1711715479.434379",
        "parent_user_id": "U01PJ5YMFBJ",
        "attachments": [
            {
                "image_url": "https:\/\/camo.githubusercontent.com\/0f5e14a17d93f393fa20f2f1d712b93927bc3d73c7871412e3f454af8b7645f8\/68747470733a2f2f7075626c69632e7461626c6561752e636f6d2f7374617469632f696d616765732f436f2f436f6d706172696e67706572666f726d616e63656f6673716c697465616e64707974686f6e2d70616e6461732f626172732f315f7273732e706e67",
                "image_width": 800,
                "image_height": 600,
                "image_bytes": 34180,
                "id": 1,
                "footer_icon": "https:\/\/slack.github.com\/static\/img\/favicon-neutral.png",
                "color": "24292f",
                "bot_id": "B021ZJYSBMW",
                "app_unfurl_url": "https:\/\/github.com\/thedataincubator\/data-science-blogs\/blob\/master\/sqlite-vs-pandas.md",
                "is_app_unfurl": true,
                "app_id": "A01BP7R4KNY",
                "fallback": "800x600px image",
                "text": "*Sqlite vs Pandas: Performance Benchmarks.*\n\nAs a data scientist, we all know that unglamorous data manipulation is 90% of the work. Two of the most common data manipulation tools are SQL and Pandas. In this blog, we'll compare the performance of `pandas` and `sqlite`, a simple form a SQL favored by data scientists.\n\nLet's find out the tasks at which each of these excel. Below, we compare  \nPython's `pandas` to `sqlite` for some common data analysis operations: sort,  \nselect, load, join, filter, and group by.\n\n_Note that the axis is logarithmic, so that raw differences are more pronounced._\n\n<https:\/\/github.com\/thedataincubator\/data-science-blogs\/blob\/master\/sqlite-vs-pandas.md#|Comparing performance of sqlite vs. pandas >\n\n<script type='text\/javascript'> var divElement = document.getElementById('viz1487191497220'); var vizElement = divElement.getElementsByTagName('object')[0]; vizElement.style.width='100%';vizElement.style.height=(divElement.offsetWidth*0.75)+'px'; var scriptElement = document.createElement('script'); scriptElement.src = '<https:\/\/public.tableau.com\/javascripts\/api\/viz_v1.js>'; vizElement.parentNode.insertBefore(scriptElement, vizElement); <\/script>\n*Analysis details*\n\nFor the analysis, we ran the six tasks 10 times each, for 5 different sample  \nsizes, for each of 3 programs: `pandas`, `sqlite`, and `memory-sqlite` (where  \ndatabase is in memory instead of on disk). See <https:\/\/github.com\/thedataincubator\/data-science-blogs\/blob\/master\/sqlite-vs-pandas.md#Code|below> for the definitions of  \neach task.\n\nOur sample data was randomly generated. Here's what it looks like:\n\n```\nsql_vs_pandas$ head -n 5 data\/sample.100.csv\n\nqqFjQHQc,c,1981,82405.59262172286\nvILuhVGz,a,1908,27712.27152250119\nmwCjpoOF,f,1992,58974.38538762843\nkGbriYAK,d,1927,42258.24179716961\nMeoxuJng,c,1955,96907.56416314292\n```\n\nThis consists of a random string of 8 characters, a random single character  \n(for the filtering operation), a random integer simulating a year (1900-2000), and  \na uniform random float value between 10000 and 100000.\n\n*Results*\n\n`sqlite` or `memory-sqlite` is faster for the following tasks:\n\n• `select` two columns from data (<.1 millisecond for any data size for  \n    `sqlite`. `pandas` scales with the data, up to just under 0.5 seconds for  \n    10 million records)\n• `filter` data (>10x-50x faster with `sqlite`. The difference is more  \n    pronounced as data grows in size)\n• `sort` by single column: `pandas` is always a bit slower, but this was the  \n    closest\n\n`pandas` is faster for the following tasks:\n\n• `groupby` computation of a mean and sum (significantly better for large  \n    data, only 2x faster for <10k records)\n• `load` data from disk (5x faster for >10k records, even better for smaller  \n    data)\n• `join` data (2-5x faster, but slower for smallest data set of 1000 rows)\n\nComparing `memory-sqlite` vs. `sqlite`, there was no meaningful difference,  \nespecially as data size increased.\n\nThere is no significant speedup from loading `sqlite` in its own shell vs. via  \n`pandas`.\n\nOverall, joining and loading data is the slowest whereas select and filter are  \ngenerally the fastest. Further, `pandas` seems to be optimized for group-by  \noperations, where it performs really well (group-by is `pandas`' second fastest  \noperation for larger data).\n\nNote that this analysis assumes you are equally proficient in writing code with  \nboth! But these results could encourage you to learn the tool that you are  \nless familiar with, if the performance gains are significant.\n\n*Code*\n\nAll code  \nis  \n<https:\/\/github.com\/thedataincubator\/data-science-blogs|on our GitHub page>.\n\nBelow are the definitions of our six tasks: sort, select, load, join, filter,  \nand group by (see `driver\/sqlite_driver.py` or `driver\/pandas_driver.py`).\n\n`sqlite` is first, followed by `pandas`:\n\n*sort*\n\n```\ndef sort(self):\n  self._cursor.execute('SELECT * FROM employee ORDER BY name ASC;')\n  self._conn.commit()\n\ndef sort(self):\n  self.df_employee.sort_values(by='name')\n```\n\n*select*\n\n```\ndef select(self):\n  self._cursor.execute('SELECT name, dept FROM employee;')\n  self._conn.commit()\n\ndef select(self):\n  self.df_employee[[\"name\", \"dept\"]]\n```\n\n*load*\n\n```\ndef load(self):\n  self._cursor.execute('CREATE TABLE employee (name varchar(255), dept char(1), birth int, salary double);')\n  df = pd.read_csv(self.employee_file)\n  df.columns = employee_columns\n  df.to_sql('employee', self._conn, if_exists='replace')\n\n  self._cursor.execute('CREATE TABLE bonus (name varchar(255), bonus double);')\n  df_bonus = pd.read_csv(self.bonus_file)\n  df_bonus.columns = bonus_columns\n  df_bonus.to_sql('bonus', self._conn, if_exists='replace')\n\ndef load(self):\n  self.df_employee = pd.read_csv(self.employee_file)\n  self.df_employee.columns = employee_columns\n\n  self.df_bonus = pd.read_csv(self.bonus_file)\n  self.df_bonus.columns = bonus_columns\n```\n\n*join*\n\n```\ndef join(self):\n  self._cursor.execute('SELECT employee.name, employee.salary + bonus.bonus '\n                       'FROM employee INNER JOIN bonus ON employee.name = bonus.name')\n  self._conn.commit()\n\ndef join(self):\n  joined = self.df_employee.merge(self.df_bonus, on='name')\n  joined['total'] = joined['bonus'] + joined['salary']\n```\n\n*filter*\n\n```\ndef filter(self):\n  self._cursor.execute('SELECT * FROM employee WHERE dept = \"a\";')\n  self._conn.commit()\n\ndef filter(self):\n  self.df_employee[self.df_employee['dept'] == 'a']\n```\n\n*group by*\n\n```\ndef groupby(self):\n  self._cursor.execute('SELECT avg(birth), sum(salary) FROM employee GROUP BY dept;')\n  self._conn.commit()\n\ndef groupby(self):\n  self.df_employee.groupby(\"dept\").agg({'birth': np.mean, 'salary': np.sum})\n```\n\n*Details*\n\nWe used `pandas` version `0.19.1` and `sqlite` version `3.13.0`. All tests  \nwere ran on Digital Ocean `Ubuntu 14.04` with 16GB memory and 8 core CPU.\n\n*References*\n\nFor resource on becoming a data scientist, check out our <https:\/\/blog.thedataincubator.com\/|blog>, particular this article on <https:\/\/blog.thedataincubator.com\/2014\/09\/how-to-prepare-for-the-data-incubator\/|preparing for our free data science fellowship> and this one on <https:\/\/blog.thedataincubator.com\/2015\/01\/processing-data-like-a-professional-data-scientist\/|data manipulating data like a professional data scientist>. And if you're looking for a class, consider our <https:\/\/www.thedataincubator.com\/foundations.html|convenient after-work online instructor lead data science foundations course geared towards working professionals> or our <https:\/\/www.thedataincubator.com\/fellowship.html|free data science fellowship for people with advanced degrees>.\n\nTo learn more how `sqlite` works, check  \nout  \n<https:\/\/jvns.ca\/blog\/2014\/09\/27\/how-does-sqlite-work-part-1-pages\/|this awesome blog series>.\n\nHere is  \na  \n<http:\/\/pandas.pydata.org\/pandas-docs\/stable\/comparison_with_sql.html|syntax comparison> between  \n`pandas` and `sql`.",
                "title": "<https:\/\/github.com\/thedataincubator\/data-science-blogs\/blob\/master\/sqlite-vs-pandas.md | sqlite-vs-pandas.md>",
                "footer": "<https:\/\/github.com\/thedataincubator\/data-science-blogs|thedataincubator\/data-science-blogs>",
                "mrkdwn_in": [
                    "text"
                ]
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oJlu0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "depending on what operations you do, might be worth checking\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/thedataincubator\/data-science-blogs\/blob\/master\/sqlite-vs-pandas.md"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03FS7KM2NL",
        "type": "message",
        "ts": "1711717422.876599",
        "client_msg_id": "4BA75BFE-CFF8-4F67-8DD2-4231D22F43DC",
        "text": "Numba!",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g160a197a059",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/160a197a059d9b97aabdd95ca66dc341.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0026-72.png",
            "first_name": "Ralegh",
            "real_name": "Ralegh",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "ralegh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1711715479.434379",
        "parent_user_id": "U01PJ5YMFBJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZmQv\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Numba!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U04H54Q392N",
        "type": "message",
        "ts": "1711717764.876369",
        "client_msg_id": "d9254409-46a5-4b54-b69a-5c3048491a8d",
        "text": "nothing like embracing the NaNs :smile: Did you get an excuse to use the likes of numba or the pyarrow backend? I'm under the impression that the pyarrow backend would be decent for at least `.str.*` stuff but haven't had cause to try it out yet",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "922f15b4653c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-11-24\/8061990184023_922f15b4653c337eadd3_72.jpg",
            "first_name": "Oliver",
            "real_name": "Oliver",
            "display_name": "Oliver",
            "team": "T4G9NBD2M",
            "name": "evilumbrella",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1711715479.434379",
        "parent_user_id": "U01PJ5YMFBJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8mJUW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "nothing like embracing the NaNs "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            },
                            {
                                "type": "text",
                                "text": " Did you get an excuse to use the likes of numba or the pyarrow backend? I'm under the impression that the pyarrow backend would be decent for at least "
                            },
                            {
                                "type": "text",
                                "text": ".str.*",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " stuff but haven't had cause to try it out yet"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01PJ5YMFBJ",
        "type": "message",
        "ts": "1711729088.395069",
        "client_msg_id": "51d7474d-57fb-4ad7-9ce8-16787d7f051b",
        "text": "just the standard pandas &amp; numpy, matplotlib, don't know half those others, they tend to suit specific tasks...",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g819c7f591cc",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/819c7f591cc888486f19b3f2f49f2011.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0014-72.png",
            "first_name": "AndyL",
            "real_name": "AndyL",
            "display_name": "AndyL",
            "team": "T4G9NBD2M",
            "name": "andrew_m_leonard",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1711715479.434379",
        "parent_user_id": "U01PJ5YMFBJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yGYfg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "just the standard pandas & numpy, matplotlib, don't know half those others, they tend to suit specific tasks..."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01PJ5YMFBJ",
        "type": "message",
        "ts": "1711729143.264369",
        "client_msg_id": "67a04b36-dbf4-4391-a449-913137db3195",
        "text": "anyway i've fixed the bathroom sink this afternoon while it's been churning.... so not all bad :smile:",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g819c7f591cc",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/819c7f591cc888486f19b3f2f49f2011.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0014-72.png",
            "first_name": "AndyL",
            "real_name": "AndyL",
            "display_name": "AndyL",
            "team": "T4G9NBD2M",
            "name": "andrew_m_leonard",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1711715479.434379",
        "parent_user_id": "U01PJ5YMFBJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TD7jF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "anyway i've fixed the bathroom sink this afternoon while it's been churning.... so not all bad "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U04H54Q392N",
        "type": "message",
        "ts": "1711737097.215489",
        "client_msg_id": "522dc49d-155e-4afc-9399-7ad02d2def3a",
        "text": "numba is good if your code is slowed down by the python logic gluing all the pandas bits together (assuming you can't just use pandas more efficiently), so you can use something like `@numba.jit` to compile some block of code into machine code without you having to deal with it much. Its unlikely to be of huge value to you right now if pandas and numpy are new to you though as it is usually the use of pandas that can be improved most first.\n\nPyArrow can be used as an alternative backend\/storage engine for pandas, it has some merits, in particular if you write your data to disk and read it back later. Still fairly new in pandas so could be an excuse to avoid it as well, but it can read a CSV in parallel and be a lot faster.\n\nI'd have thought you could get a fair bit more speed out of of pandas\/python if you wanted as 250 rows a second sounds fairly slow to me so I imagine there's other places you can get speed first. I'd recommend profiling a run with a subset of data using <https:\/\/github.com\/P403n1x87\/austin?tab=readme-ov-file#synopsis|austin> and then viewing the results with <https:\/\/github.com\/jlfwong\/speedscope?tab=readme-ov-file#speedscope|speedscope>. This is probably to key combination I've found for optimising this kind of code.\n\nThen again it sounds like you\/your house benifits from the processing time <https:\/\/xkcd.com\/303\/>",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "922f15b4653c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-11-24\/8061990184023_922f15b4653c337eadd3_72.jpg",
            "first_name": "Oliver",
            "real_name": "Oliver",
            "display_name": "Oliver",
            "team": "T4G9NBD2M",
            "name": "evilumbrella",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1711715479.434379",
        "parent_user_id": "U01PJ5YMFBJ",
        "attachments": [
            {
                "image_url": "https:\/\/imgs.xkcd.com\/comics\/compiling.png",
                "image_width": 413,
                "image_height": 360,
                "image_bytes": 28315,
                "from_url": "https:\/\/xkcd.com\/303\/",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/xkcd.png",
                "id": 1,
                "original_url": "https:\/\/xkcd.com\/303\/",
                "fallback": "xkcd: Compiling",
                "text": "[Title text] \"'Are you stealing those LCDs?' 'Yeah, but I'm doing it while my code compiles.'\"",
                "title": "Compiling",
                "title_link": "https:\/\/xkcd.com\/303\/",
                "author_name": "xkcd",
                "author_link": "https:\/\/xkcd.com\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "smidi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "numba is good if your code is slowed down by the python logic gluing all the pandas bits together (assuming you can't just use pandas more efficiently), so you can use something like "
                            },
                            {
                                "type": "text",
                                "text": "@numba.jit",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to compile some block of code into machine code without you having to deal with it much. Its unlikely to be of huge value to you right now if pandas and numpy are new to you though as it is usually the use of pandas that can be improved most first.\n\nPyArrow can be used as an alternative backend\/storage engine for pandas, it has some merits, in particular if you write your data to disk and read it back later. Still fairly new in pandas so could be an excuse to avoid it as well, but it can read a CSV in parallel and be a lot faster.\n\nI'd have thought you could get a fair bit more speed out of of pandas\/python if you wanted as 250 rows a second sounds fairly slow to me so I imagine there's other places you can get speed first. I'd recommend profiling a run with a subset of data using "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/P403n1x87\/austin?tab=readme-ov-file#synopsis",
                                "text": "austin"
                            },
                            {
                                "type": "text",
                                "text": " and then viewing the results with "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/jlfwong\/speedscope?tab=readme-ov-file#speedscope",
                                "text": "speedscope"
                            },
                            {
                                "type": "text",
                                "text": ". This is probably to key combination I've found for optimising this kind of code.\n\nThen again it sounds like you\/your house benifits from the processing time "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/xkcd.com\/303\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U01PJ5YMFBJ"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U01PJ5YMFBJ",
        "type": "message",
        "ts": "1711740085.197559",
        "client_msg_id": "ed473dea-43f2-4299-9b0f-3b9afa40e3af",
        "text": "Did a bit of work with better vectoring, completes in under 2hours now :slightly_smiling_face:\nthat's about 2400 rows\/sec, not bad I think",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g819c7f591cc",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/819c7f591cc888486f19b3f2f49f2011.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0014-72.png",
            "first_name": "AndyL",
            "real_name": "AndyL",
            "display_name": "AndyL",
            "team": "T4G9NBD2M",
            "name": "andrew_m_leonard",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1711715479.434379",
        "parent_user_id": "U01PJ5YMFBJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RFf9s",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Did a bit of work with better vectoring, completes in under 2hours now "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": "\nthat's about 2400 rows\/sec, not bad I think"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U04H54Q392N"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U04H54Q392N",
        "type": "message",
        "ts": "1711742048.473639",
        "client_msg_id": "330cd613-a830-4225-bf6d-b60c1469f2a5",
        "text": "yea, nice, that's a neat increase! I suspect you can get some orders of magnitude faster with a bit more playing around, but that's just speculation. It can feel a bit like gamification and trying to get a high score so I've found it easy to sink time into that kind of thing. Of course there's the cost vs. reward which can put an end to that game",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "922f15b4653c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-11-24\/8061990184023_922f15b4653c337eadd3_72.jpg",
            "first_name": "Oliver",
            "real_name": "Oliver",
            "display_name": "Oliver",
            "team": "T4G9NBD2M",
            "name": "evilumbrella",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1711715479.434379",
        "parent_user_id": "U01PJ5YMFBJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XMeI2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "yea, nice, that's a neat increase! I suspect you can get some orders of magnitude faster with a bit more playing around, but that's just speculation. It can feel a bit like gamification and trying to get a high score so I've found it easy to sink time into that kind of thing. Of course there's the cost vs. reward which can put an end to that game"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U06999T3494",
        "type": "message",
        "ts": "1711742449.750809",
        "edited": {
            "user": "U06999T3494",
            "ts": "1711742464.000000"
        },
        "client_msg_id": "085a33a8-2ade-4a89-a9a4-04e073e1d260",
        "text": "Has anyone tried brokers such as BetinAsia? Do you have any feedback?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "ged0d6aa31e1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ed0d6aa31e135d75fd29b0c8488a124c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "Pietro",
            "real_name": "Pietro Perrone",
            "display_name": "Pietro Perrone",
            "team": "T4G9NBD2M",
            "name": "pp487",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "louo6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Has anyone tried brokers such as BetinAsia? Do you have any feedback?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UPMUFSGCR",
        "type": "message",
        "ts": "1711746687.734169",
        "client_msg_id": "7c9299ef-9a53-4b7d-9701-89c6e26a374b",
        "text": "I'm not sure what you're doing, but using Flumine to scan over and pick out bits of data (such as the full ladder at very minute for the last hour)  would take under 90 seconds on modern hardware.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "31c0bb5a442c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-28\/812386967189_31c0bb5a442c5b8d2c61_72.png",
            "first_name": "Jon",
            "real_name": "Jon Jon Jon Jon Jon Jon Jon Jon",
            "display_name": "Jonjonjon",
            "team": "T4G9NBD2M",
            "name": "fcmisc",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1711715479.434379",
        "parent_user_id": "U01PJ5YMFBJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KgzxZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm not sure what you're doing, but using Flumine to scan over and pick out bits of data (such as the full ladder at very minute for the last hour)  would take under 90 seconds on modern hardware."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01PJ5YMFBJ",
        "type": "message",
        "ts": "1711746875.889879",
        "client_msg_id": "365080a6-c849-4f47-9e0b-bc159efff6bc",
        "text": "i'm not sure what i'm doing either.... that's the best bit, I never know what I might find !",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g819c7f591cc",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/819c7f591cc888486f19b3f2f49f2011.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0014-72.png",
            "first_name": "AndyL",
            "real_name": "AndyL",
            "display_name": "AndyL",
            "team": "T4G9NBD2M",
            "name": "andrew_m_leonard",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1711715479.434379",
        "parent_user_id": "U01PJ5YMFBJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "d4jDw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i'm not sure what i'm doing either.... that's the best bit, I never know what I might find !"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01PJ5YMFBJ",
        "type": "message",
        "ts": "1711746918.673659",
        "client_msg_id": "92c7739e-9483-4010-a018-2f0fe8129f44",
        "text": "(i've got to keep going as I think the medicine will wear off soon)",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g819c7f591cc",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/819c7f591cc888486f19b3f2f49f2011.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0014-72.png",
            "first_name": "AndyL",
            "real_name": "AndyL",
            "display_name": "AndyL",
            "team": "T4G9NBD2M",
            "name": "andrew_m_leonard",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1711715479.434379",
        "parent_user_id": "U01PJ5YMFBJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bMQb\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(i've got to keep going as I think the medicine will wear off soon)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01PJ5YMFBJ",
        "type": "message",
        "ts": "1711746987.714469",
        "client_msg_id": "baf54add-c155-4784-9470-9631fe9edeec",
        "text": "how many Eggs you guys eaten so far?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g819c7f591cc",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/819c7f591cc888486f19b3f2f49f2011.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0014-72.png",
            "first_name": "AndyL",
            "real_name": "AndyL",
            "display_name": "AndyL",
            "team": "T4G9NBD2M",
            "name": "andrew_m_leonard",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1711746987.714469",
        "reply_count": 3,
        "reply_users_count": 2,
        "latest_reply": "1711751804.386699",
        "reply_users": [
            "U01PJ5YMFBJ",
            "UPMUFSGCR"
        ],
        "replies": [
            {
                "user": "U01PJ5YMFBJ",
                "ts": "1711749925.324799"
            },
            {
                "user": "UPMUFSGCR",
                "ts": "1711751583.448179"
            },
            {
                "user": "U01PJ5YMFBJ",
                "ts": "1711751804.386699"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ieYkv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "how many Eggs you guys eaten so far?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "v",
                "users": [
                    "U4H19D1D2",
                    "U01PJ5YMFBJ"
                ],
                "count": 2
            },
            {
                "name": "zero",
                "users": [
                    "UPMUFSGCR",
                    "U06R7GCC26B",
                    "USWDY5P7G"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1711747131.307779",
        "client_msg_id": "7DD02FA8-1828-458E-9A70-C1236DE42905",
        "text": "What are you doing? That seems mega mega mega slow, no?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1711715479.434379",
        "parent_user_id": "U01PJ5YMFBJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3C\/Xb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What are you doing? That seems mega mega mega slow, no?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01PJ5YMFBJ",
        "type": "message",
        "ts": "1711747527.873239",
        "client_msg_id": "ca05a3d2-7acb-43f6-a3fe-30e92fff3ec6",
        "text": "so yeah it is slower than I was hoping!\nso the obvious problem is no-one is going to tell you \"Alpha\"\nso i'm trying to calculate various features and various \"triggers\", then plot various plots to see how such features &amp; triggers vary against other features, with a hope of finding \"Alpha\" :slightly_smiling_face:",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g819c7f591cc",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/819c7f591cc888486f19b3f2f49f2011.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0014-72.png",
            "first_name": "AndyL",
            "real_name": "AndyL",
            "display_name": "AndyL",
            "team": "T4G9NBD2M",
            "name": "andrew_m_leonard",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1711715479.434379",
        "parent_user_id": "U01PJ5YMFBJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SQbp0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "so yeah it is slower than I was hoping!\nso the obvious problem is no-one is going to tell you \"Alpha\"\nso i'm trying to calculate various features and various \"triggers\", then plot various plots to see how such features & triggers vary against other features, with a hope of finding \"Alpha\" "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01PJ5YMFBJ",
        "type": "message",
        "ts": "1711749925.324799",
        "client_msg_id": "454e0721-4933-4ff5-adc8-48c87b13a343",
        "text": "just finished my second",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g819c7f591cc",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/819c7f591cc888486f19b3f2f49f2011.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0014-72.png",
            "first_name": "AndyL",
            "real_name": "AndyL",
            "display_name": "AndyL",
            "team": "T4G9NBD2M",
            "name": "andrew_m_leonard",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1711746987.714469",
        "parent_user_id": "U01PJ5YMFBJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8UU3E",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "just finished my second"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01PJ5YMFBJ",
        "type": "message",
        "ts": "1711751526.185939",
        "client_msg_id": "35eb7656-793e-43f1-9681-5ed3d84953fa",
        "text": "what sort of matplotlib would you use to create a sum histogram of for example \"profit by bin\" against a \"feature\" ? Basic histogram gives me a \"count\", but I want sum of profit for each bin ?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g819c7f591cc",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/819c7f591cc888486f19b3f2f49f2011.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0014-72.png",
            "first_name": "AndyL",
            "real_name": "AndyL",
            "display_name": "AndyL",
            "team": "T4G9NBD2M",
            "name": "andrew_m_leonard",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1711751526.185939",
        "reply_count": 20,
        "reply_users_count": 4,
        "latest_reply": "1711822276.060199",
        "reply_users": [
            "U04NWADNCFR",
            "U01PJ5YMFBJ",
            "U4H19D1D2",
            "UUCD6P13J"
        ],
        "replies": [
            {
                "user": "U04NWADNCFR",
                "ts": "1711751817.317479"
            },
            {
                "user": "U01PJ5YMFBJ",
                "ts": "1711751854.932469"
            },
            {
                "user": "U01PJ5YMFBJ",
                "ts": "1711752335.452529"
            },
            {
                "user": "U01PJ5YMFBJ",
                "ts": "1711752359.827059"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1711800308.328829"
            },
            {
                "user": "U01PJ5YMFBJ",
                "ts": "1711804998.964119"
            },
            {
                "user": "U01PJ5YMFBJ",
                "ts": "1711805090.496609"
            },
            {
                "user": "U01PJ5YMFBJ",
                "ts": "1711805148.564139"
            },
            {
                "user": "UUCD6P13J",
                "ts": "1711805200.710929"
            },
            {
                "user": "U01PJ5YMFBJ",
                "ts": "1711805201.114349"
            },
            {
                "user": "U01PJ5YMFBJ",
                "ts": "1711805211.752439"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1711805270.022639"
            },
            {
                "user": "U01PJ5YMFBJ",
                "ts": "1711805404.547499"
            },
            {
                "user": "U01PJ5YMFBJ",
                "ts": "1711805514.444739"
            },
            {
                "user": "U01PJ5YMFBJ",
                "ts": "1711805827.918279"
            },
            {
                "user": "U01PJ5YMFBJ",
                "ts": "1711806007.262119"
            },
            {
                "user": "U01PJ5YMFBJ",
                "ts": "1711806039.071719"
            },
            {
                "user": "U01PJ5YMFBJ",
                "ts": "1711806693.704599"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1711822168.672379"
            },
            {
                "user": "U01PJ5YMFBJ",
                "ts": "1711822276.060199"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1711822276.060199",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/HEr2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "what sort of matplotlib would you use to create a sum histogram of for example \"profit by bin\" against a \"feature\" ? Basic histogram gives me a \"count\", but I want sum of profit for each bin ?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UPMUFSGCR",
        "type": "message",
        "ts": "1711751583.448179",
        "client_msg_id": "236b4b5f-f3cd-4dd4-a7f9-e81ede62fc91",
        "text": "Could you get to 10 by midnight?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "31c0bb5a442c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-28\/812386967189_31c0bb5a442c5b8d2c61_72.png",
            "first_name": "Jon",
            "real_name": "Jon Jon Jon Jon Jon Jon Jon Jon",
            "display_name": "Jonjonjon",
            "team": "T4G9NBD2M",
            "name": "fcmisc",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1711746987.714469",
        "parent_user_id": "U01PJ5YMFBJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cNFi9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Could you get to 10 by midnight?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01PJ5YMFBJ",
        "type": "message",
        "ts": "1711751804.386699",
        "client_msg_id": "0b38000a-f57d-49a0-b4d3-44b2db3e9cfc",
        "text": ":face_vomiting:",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g819c7f591cc",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/819c7f591cc888486f19b3f2f49f2011.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0014-72.png",
            "first_name": "AndyL",
            "real_name": "AndyL",
            "display_name": "AndyL",
            "team": "T4G9NBD2M",
            "name": "andrew_m_leonard",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1711746987.714469",
        "parent_user_id": "U01PJ5YMFBJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RzyEC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "emoji",
                                "name": "face_with_open_mouth_vomiting",
                                "unicode": "1f92e"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U04NWADNCFR",
        "type": "message",
        "ts": "1711751817.317479",
        "client_msg_id": "9e8e733d-32f9-4670-afee-0d6434417957",
        "text": "a bar chart instead of a histogram.\n\n    `df_monthly_profit  = df.groupby('month_placed').profit.sum()`\n    `df_monthly_profit.plot.bar(figsize=(20,6), grid=True, color=['green' if x &gt; 0 else 'red' for x in df_monthly_profit])`",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g3c4e33a28db",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3c4e33a28dbfc1fe70799f8e243bf305.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0026-72.png",
            "first_name": "Derek",
            "real_name": "Derek C",
            "display_name": "Derek C",
            "team": "T4G9NBD2M",
            "name": "dataexmachinazzzzz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1711751526.185939",
        "parent_user_id": "U01PJ5YMFBJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aXEup",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "a bar chart instead of a histogram.\n\n"
                            },
                            {
                                "type": "text",
                                "text": "    df_monthly_profit  = df.groupby('month_placed').profit.sum()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "    df_monthly_profit.plot.bar(figsize=(20,6), grid=True, color=['green' if x > 0 else 'red' for x in df_monthly_profit])",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01PJ5YMFBJ",
        "type": "message",
        "ts": "1711751854.932469",
        "client_msg_id": "6253ae9e-394e-4793-a990-e2a5aacf577c",
        "text": "thanks Derek i'll try and fit that cheers",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g819c7f591cc",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/819c7f591cc888486f19b3f2f49f2011.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0014-72.png",
            "first_name": "AndyL",
            "real_name": "AndyL",
            "display_name": "AndyL",
            "team": "T4G9NBD2M",
            "name": "andrew_m_leonard",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1711751526.185939",
        "parent_user_id": "U01PJ5YMFBJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PYtp5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "thanks Derek i'll try and fit that cheers"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U04NWADNCFR"
                ],
                "count": 1
            }
        ]
    },
    {
        "text": "<@U04NWADNCFR> yeah that worked:",
        "files": [
            {
                "id": "F06SE2T41NV",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U01PJ5YMFBJ",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NoOWx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U04NWADNCFR"
                            },
                            {
                                "type": "text",
                                "text": " yeah that worked:"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1711752335.452529",
        "client_msg_id": "6302db74-2155-460d-b1ab-a9d0d82e13f7",
        "thread_ts": "1711751526.185939",
        "parent_user_id": "U01PJ5YMFBJ",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U04NWADNCFR"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U01PJ5YMFBJ",
        "type": "message",
        "ts": "1711752359.827059",
        "client_msg_id": "fe619002-55ab-43e0-aca1-88d8f9e3a9d9",
        "text": "```dff['group'] = pd.cut(dff['df'], bins=100)\ndf_feature_profit = dff.groupby('group').pr.sum()\ndf_feature_profit.plot.bar(figsize=(20,6), grid=True, color=['green' if x &gt; 0 else 'red' for x in df_feature_profit])```",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g819c7f591cc",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/819c7f591cc888486f19b3f2f49f2011.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0014-72.png",
            "first_name": "AndyL",
            "real_name": "AndyL",
            "display_name": "AndyL",
            "team": "T4G9NBD2M",
            "name": "andrew_m_leonard",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1711751526.185939",
        "parent_user_id": "U01PJ5YMFBJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Xw\/JC",
                "elements": [
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "dff['group'] = pd.cut(dff['df'], bins=100)\ndf_feature_profit = dff.groupby('group').pr.sum()\ndf_feature_profit.plot.bar(figsize=(20,6), grid=True, color=['green' if x > 0 else 'red' for x in df_feature_profit])"
                            }
                        ],
                        "border": 0
                    }
                ]
            }
        ]
    }
]