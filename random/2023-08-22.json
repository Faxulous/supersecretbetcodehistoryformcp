[
    {
        "user": "UFTBRB3F1",
        "type": "message",
        "ts": "1692705772.459609",
        "client_msg_id": "048F963A-965C-4518-AF8C-D61FF0380DF1",
        "text": "A bit of a random dumb question, but I was looking at <@U4H19D1D2>’s thread on ML and there’s one (really basic) piece that confuses me.\n\nLet’s assume I have a basic ‘model’ that obviously uses flumine recorded data for backtesting (which also takes place in flumine).\n\nLet’s pretend the ‘model’ simply tries to back any runner where say VWAP * x &gt; best available back price (where x = a percentage set by me currently).\n\nHow can I ‘train’ my model, as the code is written for streaming data?\n\nDo I have to re-write everything to look at a large Pandas\/PySpark data frame with all the raw data?\n\nI’m presuming not and I’m misunderstanding how it works, but it does confuse me as the examples I’ve seen all seem to take numpy arrays as inputs or Pandas data frames!",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g771e110be94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a771e110be945b86bede9d5c1bb551e3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Newbie99",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "vjmehra",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1692705772.459609",
        "reply_count": 4,
        "reply_users_count": 2,
        "latest_reply": "1692712735.471479",
        "reply_users": [
            "U4H19D1D2",
            "UFTBRB3F1"
        ],
        "replies": [
            {
                "user": "U4H19D1D2",
                "ts": "1692706200.796379"
            },
            {
                "user": "UFTBRB3F1",
                "ts": "1692711977.367329"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1692712267.797549"
            },
            {
                "user": "UFTBRB3F1",
                "ts": "1692712735.471479"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1692712735.471479",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "e1x",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A bit of a random dumb question, but I was looking at "
                            },
                            {
                                "type": "user",
                                "user_id": "U4H19D1D2"
                            },
                            {
                                "type": "text",
                                "text": "’s thread on ML and "
                            },
                            {
                                "type": "text",
                                "text": "there’s"
                            },
                            {
                                "type": "text",
                                "text": " one (really basic) piece that confuses me.\n\n"
                            },
                            {
                                "type": "text",
                                "text": "Let’s"
                            },
                            {
                                "type": "text",
                                "text": " assume I have a basic ‘model’ that obviously uses flumine recorded data for backtesting (which also takes place in flumine).\n\n"
                            },
                            {
                                "type": "text",
                                "text": "Let’s"
                            },
                            {
                                "type": "text",
                                "text": " pretend the ‘model’ simply tries to back any runner where say VWAP * x > best available back price (where x = a percentage set by me currently).\n\nHow can I ‘train’ my model, as the code is written for streaming data?\n\nDo I have to re-write everything to look at a large Pandas\/PySpark data frame with all the raw data?\n\n"
                            },
                            {
                                "type": "text",
                                "text": "I’m"
                            },
                            {
                                "type": "text",
                                "text": " presuming not and "
                            },
                            {
                                "type": "text",
                                "text": "I’m"
                            },
                            {
                                "type": "text",
                                "text": " misunderstanding how it works, but it does confuse me as the examples "
                            },
                            {
                                "type": "text",
                                "text": "I’ve"
                            },
                            {
                                "type": "text",
                                "text": " seen all seem to take numpy arrays as inputs or Pandas data frames!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1692706200.796379",
        "edited": {
            "user": "U4H19D1D2",
            "ts": "1692706247.000000"
        },
        "client_msg_id": "f5a5938f-8404-4924-8ac1-5cbd5b4aee55",
        "text": "Not a stupid question, easiest way is to create a flumine strategy which writes all the data to a csv (variables + W\/L of runner etc) -&gt; load into pandas\n\n<https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/examples\/strategies\/pricerecorder.py>",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1692705772.459609",
        "parent_user_id": "UFTBRB3F1",
        "attachments": [
            {
                "id": 1,
                "footer_icon": "https:\/\/slack.github.com\/static\/img\/favicon-neutral.png",
                "color": "24292f",
                "bot_id": "B021ZJYSBMW",
                "app_unfurl_url": "https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/examples\/strategies\/pricerecorder.py",
                "is_app_unfurl": true,
                "app_id": "A01BP7R4KNY",
                "fallback": "<https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/examples\/strategies\/pricerecorder.py | pricerecorder.py>",
                "text": "```\nimport os\nimport csv\n\nfrom flumine import BaseStrategy\nfrom flumine.utils import get_price\n\nHEADERS = [\n    \"market_id\",\n    \"publish_time\",\n    \"status\",\n    \"inplay\",\n    \"selection_id\",\n    \"last_price_traded\",\n    \"back\",\n    \"lay\",\n]\n\n\nclass PriceRecorder(BaseStrategy):\n    \"\"\"\n    Example strategy for recording prices\n    from historical or live data.\n    \"\"\"\n\n    def __init__(self, *args, **kwargs):\n        BaseStrategy.__init__(self, *args, **kwargs)\n        self.local_dir = self.context.get(\"local_dir\", \"\/tmp\")\n        self.filename = self.context.get(\"filename\", \"output.txt\")\n        self.file_directory = os.path.join(self.local_dir, self.filename)\n\n    def add(self) -> None:\n        # check local dir\n        if not os.path.isdir(self.local_dir):\n            raise OSError(\"File dir %s does not exist\" % self.local_dir)\n        # write headers\n        with open(self.file_directory, \"w\") as f:\n            writer = csv.DictWriter(f, fieldnames=HEADERS)\n            writer.writeheader()\n\n    def check_market_book(self, market, market_book):\n        return True\n\n    def process_market_book(self, market, market_book):\n        with open(self.file_directory, \"a\") as f:\n            writer = csv.DictWriter(f, fieldnames=HEADERS)\n            for runner in market_book.runners:\n                writer.writerow(\n                    {\n                        \"market_id\": market_book.market_id,\n                        \"publish_time\": market_book.publish_time,\n                        \"status\": market_book.status,\n                        \"inplay\": market_book.inplay,\n                        \"selection_id\": runner.selection_id,\n                        \"last_price_traded\": runner.last_price_traded,\n                        \"back\": get_price(runner.ex.available_to_back, 0),\n                        \"lay\": get_price(runner.ex.available_to_lay, 0),\n                    }\n                )\n\n```",
                "title": "<https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/examples\/strategies\/pricerecorder.py | pricerecorder.py>",
                "footer": "<https:\/\/github.com\/betcode-org\/flumine|betcode-org\/flumine>",
                "mrkdwn_in": [
                    "text"
                ]
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TSj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not a stupid question, easiest way is to create a flumine strategy which writes all the data to a csv (variables + W\/L of runner etc) -> load into pandas\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/examples\/strategies\/pricerecorder.py"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNW8Q88EL",
        "type": "message",
        "ts": "1692707546.585519",
        "client_msg_id": "d3f26f0a-f923-4d53-878a-ad53349501ac",
        "text": "Hi <@UUE6E1LA1> <@U02RN7YDRQ9> TPD has confirmed that this is an issue at their side and they are currently investigating",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "cc2c2669d548",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-21\/2643683806753_cc2c2669d548a3476e65_72.jpg",
            "first_name": "Neil",
            "real_name": "Neil T (Betfair)",
            "display_name": "Neil T (Betfair)",
            "team": "T4G9NBD2M",
            "name": "neil.thomas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1692607684.872669",
        "parent_user_id": "UUE6E1LA1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "s+ndM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi "
                            },
                            {
                                "type": "user",
                                "user_id": "UUE6E1LA1"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "U02RN7YDRQ9"
                            },
                            {
                                "type": "text",
                                "text": " TPD has confirmed that this is an issue at their side and they are currently investigating"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UUE6E1LA1",
                    "U02RN7YDRQ9"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UUE6E1LA1",
        "type": "message",
        "ts": "1692707586.304069",
        "client_msg_id": "0e7003a2-3d14-43c0-ab8c-f2ecb97d365f",
        "text": "Thanks Neil",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf53cae45edd",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f53cae45edd7f7b67bbe98819597612e.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "D C",
            "display_name": "D C",
            "team": "T4G9NBD2M",
            "name": "oddsvantage",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1692607684.872669",
        "parent_user_id": "UUE6E1LA1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+MbkT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks Neil"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNW8Q88EL",
        "type": "message",
        "ts": "1692710495.419599",
        "client_msg_id": "07282b51-32b9-4846-a8a3-a66a80da5ed6",
        "text": "Hi <@UBS7QANF3> - i'll check this but highly likely that it has changed.  See <https:\/\/developers.cloudflare.com\/load-balancing\/understand-basics\/load-balancers#SnippetTab>",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "cc2c2669d548",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-21\/2643683806753_cc2c2669d548a3476e65_72.jpg",
            "first_name": "Neil",
            "real_name": "Neil T (Betfair)",
            "display_name": "Neil T (Betfair)",
            "team": "T4G9NBD2M",
            "name": "neil.thomas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1692348434.622949",
        "parent_user_id": "UUE6E1LA1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GJd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi "
                            },
                            {
                                "type": "user",
                                "user_id": "UBS7QANF3"
                            },
                            {
                                "type": "text",
                                "text": " - i'll check this but highly likely that it has changed.  See "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/developers.cloudflare.com\/load-balancing\/understand-basics\/load-balancers#SnippetTab"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFTBRB3F1",
        "type": "message",
        "ts": "1692711977.367329",
        "client_msg_id": "25543472-CE1B-4F0C-B326-CE844B119283",
        "text": "Ah I think that makes sense, so I essentially need the relevant fields from each tick, variables plus presumably the values of any ‘features’ I need to assess and then along with the win\/loss etc I should be able to determine the relevance of the variables \/ features and go from there?\n\nAt a very high level is that about right?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g771e110be94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a771e110be945b86bede9d5c1bb551e3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Newbie99",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "vjmehra",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1692705772.459609",
        "parent_user_id": "UFTBRB3F1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rxuo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah I think that makes sense, so I essentially need the relevant fields from each tick, variables plus presumably the values of any ‘features’ I need to assess and then along with the win\/loss etc I should be able to determine the relevance of the variables \/ features and go from there?\n\nAt a very high level is that about right?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1692712267.797549",
        "client_msg_id": "2739885d-ecea-416a-870b-cfb619dd7458",
        "text": "Yep, flumine is for live\/simulation but when it comes to modelling\/backtesting you want to get things into pandas",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1692705772.459609",
        "parent_user_id": "UFTBRB3F1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DTna",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yep, flumine is for live\/simulation but when it comes to modelling\/backtesting you want to get things into pandas"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFTBRB3F1",
        "type": "message",
        "ts": "1692712735.471479",
        "client_msg_id": "70856854-4B7A-41DB-9429-994073C2C0A5",
        "text": "Cool thanks, that is very helpful, will be interesting to explore!",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g771e110be94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a771e110be945b86bede9d5c1bb551e3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Newbie99",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "vjmehra",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1692705772.459609",
        "parent_user_id": "UFTBRB3F1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LZl1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Cool thanks, that is very helpful, will be interesting to explore!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UQL0QDEKA",
        "type": "message",
        "ts": "1692712909.007769",
        "edited": {
            "user": "UQL0QDEKA",
            "ts": "1692712952.000000"
        },
        "client_msg_id": "4134e562-cb3d-46cb-91da-c42d327733ff",
        "text": "In a similar post to the above, I was recently inspired by Joe at the meet up who talked a little about ML.\nIm only just getting to grips with Python but thought Id have a stroll down the ML path to see what I could find. if you dont look you dont find :grinning:\nThese are the steps Ive taken so far but would welcome any thoughts as to my approach and whether Im going off course...(remember this is all new to me)\nSteps :\nCapture recorded data with Flumine.\nThen use the PriceRecorder to extract certain features to a CSV (for about a month of racing UK \/IRE)\nUsing this ;-\n\n`import pandas as pd`\n`import numpy as np`\n`from sklearn.model_selection import train_test_split`\n`from sklearn.ensemble import RandomForestClassifier`\n`from sklearn.metrics import accuracy_score`\n\nThen Loaded the data into a df...\nClean the data to remove NaN\nTrain a random forest classifier making predictions.\n(I also wanted to plot  the partial dependence but having problems with the code for now...)\n\nThen setup some features Im interested in ...(winner as a target)\n\n`features = ['last_price_traded', 'back', 'lay', 'back_book', 'lay_book', 'ltp_book', 'Spread', 'cross_matching']`\n`X = df[features].copy()`\n`X['cross_matching'] = X['cross_matching'].astype(int)`\n`X = X.fillna(X.median())`\n`y = df['winner']`\n`X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)`\n\n`back_book_values = np.arange(1.19, 1.21, 0.01) # Just used a ouple here as a test..`\n\n1.Then setup a simple system...\n2.Then setup a system using an ML strategy...\n\n...and determine the 'Feature importance' like so:\n`feature_importance = random_forest_model.feature_importances_`\n`feature_importance_df = pd.DataFrame({'Feature': features, 'Importance': feature_importance})`\n`feature_importance_df = feature_importance_df.sort_values(by='Importance', ascending=False)`\n`print(feature_importance_df)`\n\nAfter running for a while I got the output like so:\n\n# Random Forest Accuracy: 0.9120607771513096\n# Total Profit\/Loss using Simple strategy: £-193834.88816246387\n# Total Profit\/Loss using ML strategy for X 1.19: £17935.374273080262\n# Random Forest Accuracy: 0.9120607771513096\n# Total Profit\/Loss using Simple strategy: £-193834.88816246387\n# Total Profit\/Loss using ML strategy for X 1.2: £17327.057237254136\n# Random Forest Accuracy: 0.9120607771513096\n# Total Profit\/Loss using Simple strategy: £-193834.88816246387\n# Total Profit\/Loss using ML strategy for X 1.21: £16570.917359458937\n# Best back_book value: 1.19, Profit: £17935.374273080262\n#    Feature  Importance\n# 3  back_book    0.209721\n# 4   lay_book    0.203197\n# 5   ltp_book    0.197272\n# 2   lay    0.126964\n# 0   last_price_traded    0.111824\n# 1     back    0.082254\n# 6     Spread    0.065538\n# 7     cross_matching    0.003230\n\nI can see that the ML strategy beats the simple strategy...and the back_book is the feature with the most importance...\n\nSo my question is: How do you uncover what makes the ML model significantly better?\nIs it by looking at (and trying to understand the individual decision trees (a subset off)\nOther things that seem relevant are a Partial Dependence Plot or form of Correlation Analysis?\nWhat would the pro's suggest as a next step from the feature importance? Thanks in advance",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g444d10128c0",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/444d10128c0aaf094041a52a76796602.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "Peter",
            "real_name": "Peter Lenagh",
            "display_name": "PeterLe",
            "team": "T4G9NBD2M",
            "name": "lenagh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1692712909.007769",
        "reply_count": 30,
        "reply_users_count": 7,
        "latest_reply": "1692880918.901959",
        "reply_users": [
            "U02RN7YDRQ9",
            "U05KECSV68N",
            "UQL0QDEKA",
            "U01PJ5YMFBJ",
            "U4H19D1D2",
            "U05L8PZD2FM",
            "U030GKBMCBF"
        ],
        "replies": [
            {
                "user": "U02RN7YDRQ9",
                "ts": "1692719560.382779"
            },
            {
                "user": "U05KECSV68N",
                "ts": "1692723904.941909"
            },
            {
                "user": "UQL0QDEKA",
                "ts": "1692728043.005139"
            },
            {
                "user": "UQL0QDEKA",
                "ts": "1692728620.305389"
            },
            {
                "user": "U05KECSV68N",
                "ts": "1692729730.185159"
            },
            {
                "user": "UQL0QDEKA",
                "ts": "1692730381.235519"
            },
            {
                "user": "U01PJ5YMFBJ",
                "ts": "1692730440.984899"
            },
            {
                "user": "UQL0QDEKA",
                "ts": "1692730593.307269"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1692730770.564239"
            },
            {
                "user": "U01PJ5YMFBJ",
                "ts": "1692731336.647499"
            },
            {
                "user": "U01PJ5YMFBJ",
                "ts": "1692732394.746709"
            },
            {
                "user": "UQL0QDEKA",
                "ts": "1692733627.833519"
            },
            {
                "user": "UQL0QDEKA",
                "ts": "1692734922.270839"
            },
            {
                "user": "U01PJ5YMFBJ",
                "ts": "1692737752.747669"
            },
            {
                "user": "U01PJ5YMFBJ",
                "ts": "1692737994.285809"
            },
            {
                "user": "U01PJ5YMFBJ",
                "ts": "1692738388.378909"
            },
            {
                "user": "U01PJ5YMFBJ",
                "ts": "1692739818.364929"
            },
            {
                "user": "UQL0QDEKA",
                "ts": "1692779727.735569"
            },
            {
                "user": "U05L8PZD2FM",
                "ts": "1692780501.499769"
            },
            {
                "user": "U05L8PZD2FM",
                "ts": "1692780901.122219"
            },
            {
                "user": "UQL0QDEKA",
                "ts": "1692781917.334809"
            },
            {
                "user": "U05L8PZD2FM",
                "ts": "1692784955.305209"
            },
            {
                "user": "U030GKBMCBF",
                "ts": "1692789593.851419"
            },
            {
                "user": "UQL0QDEKA",
                "ts": "1692797298.527019"
            },
            {
                "user": "UQL0QDEKA",
                "ts": "1692802398.341279"
            },
            {
                "user": "U02RN7YDRQ9",
                "ts": "1692806454.386849"
            },
            {
                "user": "UQL0QDEKA",
                "ts": "1692808336.207759"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1692815798.289539"
            },
            {
                "user": "UQL0QDEKA",
                "ts": "1692817953.849729"
            },
            {
                "user": "UQL0QDEKA",
                "ts": "1692880918.901959"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1692880918.901959",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NlD+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In a similar post to the above, I was recently inspired by Joe at the meet up who talked a little about ML.\nIm only just getting to grips with Python but thought Id have a stroll down the ML path to see what I could find. if you dont look you dont find "
                            },
                            {
                                "type": "emoji",
                                "name": "grinning",
                                "unicode": "1f600"
                            },
                            {
                                "type": "text",
                                "text": "\nThese are the steps Ive taken so far but would welcome any thoughts as to my approach and whether Im going off course...(remember this is all new to me)\nSteps :\nCapture recorded data with Flumine.\nThen use the PriceRecorder to extract certain features to a CSV (for about a month of racing UK \/IRE)\nUsing this ;-\n\n"
                            },
                            {
                                "type": "text",
                                "text": "import pandas as pd",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "import numpy as np",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "from sklearn.model_selection import train_test_split",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "from sklearn.ensemble import RandomForestClassifier",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "from sklearn.metrics import accuracy_score",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\nThen Loaded the data into a df...\nClean the data to remove NaN\nTrain a random forest classifier making predictions.\n(I also wanted to plot  the partial dependence but having problems with the code for now...)\n\nThen setup some features Im interested in ...(winner as a target)\n\n"
                            },
                            {
                                "type": "text",
                                "text": "features = ['last_price_traded', 'back', 'lay', 'back_book', 'lay_book', 'ltp_book', 'Spread', 'cross_matching']",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "X = df[features].copy()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "X['cross_matching'] = X['cross_matching'].astype(int)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "X = X.fillna(X.median())",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "y = df['winner']",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            },
                            {
                                "type": "text",
                                "text": "back_book_values = np.arange(1.19, 1.21, 0.01) # Just used a ouple here as a test..",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\n1.Then setup a simple system...\n2.Then setup a system using an ML strategy...\n\n...and determine the 'Feature importance' like so:\n"
                            },
                            {
                                "type": "text",
                                "text": "feature_importance = random_forest_model.feature_importances_",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "feature_importance_df = pd.DataFrame({'Feature': features, 'Importance': feature_importance})",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "feature_importance_df = feature_importance_df.sort_values(by='Importance', ascending=False)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "print(feature_importance_df)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\nAfter running for a while I got the output like so:\n\n# Random Forest Accuracy: 0.9120607771513096\n# Total Profit\/Loss using Simple strategy: £-193834.88816246387\n# Total Profit\/Loss using ML strategy for X 1.19: £17935.374273080262\n# Random Forest Accuracy: 0.9120607771513096\n# Total Profit\/Loss using Simple strategy: £-193834.88816246387\n# Total Profit\/Loss using ML strategy for X 1.2: £17327.057237254136\n# Random Forest Accuracy: 0.9120607771513096\n# Total Profit\/Loss using Simple strategy: £-193834.88816246387\n# Total Profit\/Loss using ML strategy for X 1.21: £16570.917359458937\n# Best back_book value: 1.19, Profit: £17935.374273080262\n#    Feature  Importance\n# 3  back_book    0.209721\n# 4   lay_book    0.203197\n# 5   ltp_book    0.197272\n# 2   lay    0.126964\n# 0   last_price_traded    0.111824\n# 1     back    0.082254\n# 6     Spread    0.065538\n# 7     cross_matching    0.003230\n\nI can see that the ML strategy beats the simple strategy...and the back_book is the feature with the most importance...\n\nSo my question is: How do you uncover what makes the ML model significantly better?\nIs it by looking at (and trying to understand the individual decision trees (a subset off)\nOther things that seem relevant are a Partial Dependence Plot or form of Correlation Analysis?\nWhat would the pro's suggest as a next step from the feature importance? Thanks in advance"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "U4H19D1D2"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02RN7YDRQ9",
        "type": "message",
        "ts": "1692719560.382779",
        "client_msg_id": "2e18c354-b153-4248-9202-0dba019c8ece",
        "text": "1) Not a pro - just some idle thoughts\n2) the 3 books are yielding 60% of the work. since the books will move in tandem, I'd throw 2 away and try a run with just the back book. might give more insight to feature strengths - you might have more features you could add (TPD?) - given the nature of the beast could be worse though - it might need the reinforcement of all the books.\n3) suspicious of the difference between simple and ML strategies - seems too good to be true assuming the simple one has a reasonable amount of the intelligence built in. In that case I'd be looking for the ML having been given clues about the result to get that accuracy or it could be assuming a price that in reality would no longer be available at the time the prediction is made ?\n4) Have you split your data into 3 sets so testing is not on the train\/validation sets ?\n5) If it is right with it's accuracy and PL then please feel free to PM me with the code :rolling_on_the_floor_laughing::rolling_on_the_floor_laughing:",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "ge46f1f8b708",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e46f1f8b708a630e3191de7b2c42b1d1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "edblock",
            "real_name": "edblock",
            "display_name": "foxwood",
            "team": "T4G9NBD2M",
            "name": "eanb",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1692712909.007769",
        "parent_user_id": "UQL0QDEKA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OfH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "1) Not a pro - just some idle thoughts\n2) the 3 books are yielding 60% of the work. since the books will move in tandem, I'd throw 2 away and try a run with just the back book. might give more insight to feature strengths - you might have more features you could add (TPD?) - given the nature of the beast could be worse though - it might need the reinforcement of all the books.\n3) suspicious of the difference between simple and ML strategies - seems too good to be true assuming the simple one has a reasonable amount of the intelligence built in. In that case I'd be looking for the ML having been given clues about the result to get that accuracy or it could be assuming a price that in reality would no longer be available at the time the prediction is made ?\n4) Have you split your data into 3 sets so testing is not on the train\/validation sets ?\n5) If it is right with it's accuracy and PL then please feel free to PM me with the code "
                            },
                            {
                                "type": "emoji",
                                "name": "rolling_on_the_floor_laughing",
                                "unicode": "1f923"
                            },
                            {
                                "type": "emoji",
                                "name": "rolling_on_the_floor_laughing",
                                "unicode": "1f923"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05KECSV68N",
        "type": "message",
        "ts": "1692723904.941909",
        "client_msg_id": "c1cb3a93-768c-49c8-8427-9515be976e6b",
        "text": "You can look at Adjusted R sq. to find out if adding another feature actually improves the model performance or not",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gc2bc41d6054",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c2bc41d60540ec3895c1d64cf560d276.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Rishab",
            "real_name": "Rishab",
            "display_name": "Rishab",
            "team": "T4G9NBD2M",
            "name": "ris499",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1692712909.007769",
        "parent_user_id": "UQL0QDEKA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jw3Q",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You can look at Adjusted R sq. to find out if adding another feature actually improves the model performance or not"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UQL0QDEKA",
        "type": "message",
        "ts": "1692728043.005139",
        "client_msg_id": "339ef199-f4dc-433d-8b70-0147abac67f7",
        "text": "Thanks <@U02RN7YDRQ9> yes I intend to split out certain things and test. Although I do know that the ltp book and lay book do have a bearing on results as Im running this  as a live strat\nI agree, the differences between the two strat does look suspicious. The results were taken from one of the first tests I ran, as I progressed it looked more like this :\n\n```# Total Profit\/Loss using ML strategy: £9322.959999999966\n# Total Profit\/Loss using simple strategy: £2207.2800000000384```\nIt was interesting (and though provoking for me) to think that ML could turn a large losing strat into a positive? :thinking_face:\nThe data was split into two sets (80% training, 20% testing). there is no separate validation set in the code. Thanks for this, Ill edit to include this.\nTrain : 60%\nTest: 20%\nValidation ; 20%\n(Would that look about right?)\nRe PM: There is a slice of secret sauce in here :grinning:, come to he next meet up if you can, worth th trip :grinning:\n<@U05KECSV68N> Thanks for the reply. Ive just read up on that...AmI correct in thinking that R-squared is more suited to regression models (Whereas the bit that gave me the most insight in the code was a RandomForset Classifier and that it may not be a great fit for that?)\nBy the way, Im not just going to use the regression and Random Forest, Im going to look at other methods too, its just as a learning exercise if nothing else.\nMy main questoin was, once you had an ML Model how do you then interpret whats happening in he background so you can incorporate those things into a live environment?\n(This is all in play by the way)",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g444d10128c0",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/444d10128c0aaf094041a52a76796602.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "Peter",
            "real_name": "Peter Lenagh",
            "display_name": "PeterLe",
            "team": "T4G9NBD2M",
            "name": "lenagh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1692712909.007769",
        "parent_user_id": "UQL0QDEKA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bO2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks "
                            },
                            {
                                "type": "user",
                                "user_id": "U02RN7YDRQ9"
                            },
                            {
                                "type": "text",
                                "text": " yes I intend to split out certain things and test. Although I do know that the ltp book and lay book do have a bearing on results as Im running this  as a live strat\nI agree, the differences between the two strat does look suspicious. The results were taken from one of the first tests I ran, as I progressed it looked more like this :\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "# Total Profit\/Loss using ML strategy: £9322.959999999966\n# Total Profit\/Loss using simple strategy: £2207.2800000000384"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It was interesting (and though provoking for me) to think that ML could turn a large losing strat into a positive? "
                            },
                            {
                                "type": "emoji",
                                "name": "thinking_face",
                                "unicode": "1f914"
                            },
                            {
                                "type": "text",
                                "text": "\nThe data was split into two sets (80% training, 20% testing). there is no separate validation set in the code. Thanks for this, Ill edit to include this.\nTrain : 60%\nTest: 20%\nValidation ; 20%\n(Would that look about right?)\nRe PM: There is a slice of secret sauce in here "
                            },
                            {
                                "type": "emoji",
                                "name": "grinning",
                                "unicode": "1f600"
                            },
                            {
                                "type": "text",
                                "text": ", come to he next meet up if you can, worth th trip "
                            },
                            {
                                "type": "emoji",
                                "name": "grinning",
                                "unicode": "1f600"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "user",
                                "user_id": "U05KECSV68N"
                            },
                            {
                                "type": "text",
                                "text": " Thanks for the reply. Ive just read up on that...AmI correct in thinking that R-squared is more suited to regression models (Whereas the bit that gave me the most insight in the code was a RandomForset Classifier and that it may not be a great fit for that?)\nBy the way, Im not just going to use the regression and Random Forest, Im going to look at other methods too, its just as a learning exercise if nothing else.\nMy main questoin was, once you had an ML Model how do you then interpret whats happening in he background so you can incorporate those things into a live environment?\n(This is all in play by the way)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U02RN7YDRQ9"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UQL0QDEKA",
        "type": "message",
        "ts": "1692728620.305389",
        "client_msg_id": "fc279ef3-5036-46ca-bf47-6aaf49d6767c",
        "text": "Sorry forgot....I also thought that this would lend itself well to including TPD data too..\nI do have the feed in the betfair API and I record it using a C# program\nI dont have Flumine recording it (I dont know who to do this just yet)\nI might test TPD inisolation in the future? :+1:",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g444d10128c0",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/444d10128c0aaf094041a52a76796602.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "Peter",
            "real_name": "Peter Lenagh",
            "display_name": "PeterLe",
            "team": "T4G9NBD2M",
            "name": "lenagh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1692712909.007769",
        "parent_user_id": "UQL0QDEKA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kjl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sorry forgot....I also thought that this would lend itself well to including TPD data too..\nI do have the feed in the betfair API and I record it using a C# program\nI dont have Flumine recording it (I dont know who to do this just yet)\nI might test TPD inisolation in the future? "
                            },
                            {
                                "type": "emoji",
                                "name": "+1",
                                "unicode": "1f44d"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05KECSV68N",
        "type": "message",
        "ts": "1692729730.185159",
        "client_msg_id": "47fae165-3598-4679-b8c3-4eda6802c59c",
        "text": "So R2sq is a strictly increasing function wrt no. of features. So if u just keep on increasing features ur R2 will increase but ML models suffer from something known as curse of dimensionality. So Adjusted R2 takes this into consideration &amp; tells you the ideal point where the variance is balanced wrt to no. of features. To answer your second question ML models are generally complex in nature,  just with 4-5 features you can interpret a RF using the tree but can't do the same for a large number of features. I think in general you can't find exactly what the model is doing(i.e there are more complex model that combines various trees to make stronger models), but you can get a good feel for it by understanding the general working of the model, then using tools like feature imp., R2, confusion matrix etc",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gc2bc41d6054",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c2bc41d60540ec3895c1d64cf560d276.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Rishab",
            "real_name": "Rishab",
            "display_name": "Rishab",
            "team": "T4G9NBD2M",
            "name": "ris499",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1692712909.007769",
        "parent_user_id": "UQL0QDEKA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "78i6G",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So R2sq is a strictly increasing function wrt no. of features. So if u just keep on increasing features ur R2 will increase but ML models suffer from something known as curse of dimensionality. So Adjusted R2 takes this into consideration & tells you the ideal point where the variance is balanced wrt to no. of features. To answer your second question ML models are generally complex in nature,  just with 4-5 features you can interpret a RF using the tree but can't do the same for a large number of features. I think in general you can't find exactly what the model is doing(i.e there are more complex model that combines various trees to make stronger models), but you can get a good feel for it by understanding the general working of the model, then using tools like feature imp., R2, confusion matrix etc"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UQL0QDEKA",
        "type": "message",
        "ts": "1692730381.235519",
        "client_msg_id": "1a5872a9-b747-4b67-9249-08b107fff172",
        "text": "OK Rishab I understand that now. This maybe useful to prevent adding many features that does little to improve the results. The first thing I noticed when starting off down this road was how much longer it takes when you are adding more and more.\nI need to read more about them tools as they are new to me.\n\nJust a general question to you or anyone. have you found ML useful in in-play markets? I can see how this would work in pre off markets but lesser so inplay? Thakns",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g444d10128c0",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/444d10128c0aaf094041a52a76796602.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "Peter",
            "real_name": "Peter Lenagh",
            "display_name": "PeterLe",
            "team": "T4G9NBD2M",
            "name": "lenagh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1692712909.007769",
        "parent_user_id": "UQL0QDEKA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "x3v",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "OK Rishab I understand that now. This maybe useful to prevent adding many features that does little to improve the results. The first thing I noticed when starting off down this road was how much longer it takes when you are adding more and more.\nI need to read more about them tools as they are new to me.\n\nJust a general question to you or anyone. have you found ML useful in in-play markets? I can see how this would work in pre off markets but lesser so inplay? Thakns"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01PJ5YMFBJ",
        "type": "message",
        "ts": "1692730440.984899",
        "client_msg_id": "06d5acbb-579e-4315-804f-3a7f1438bbe7",
        "text": "<@UQL0QDEKA> great stuff Peter. You've given me the \"bug\" to dig into this now!\nAgree on your remark on coming to the MeetUp, gives you a lot of motivation in talking to all you guys, although not sure I found much \"sauce\", but the FREE beer and nibbles went down very well :-)",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g819c7f591cc",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/819c7f591cc888486f19b3f2f49f2011.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0014-72.png",
            "first_name": "AndyL",
            "real_name": "AndyL",
            "display_name": "AndyL",
            "team": "T4G9NBD2M",
            "name": "andrew_m_leonard",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1692712909.007769",
        "parent_user_id": "UQL0QDEKA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5Ik6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UQL0QDEKA"
                            },
                            {
                                "type": "text",
                                "text": " great stuff Peter. You've given me the \"bug\" to dig into this now!\nAgree on your remark on coming to the MeetUp, gives you a lot of motivation in talking to all you guys, although not sure I found much \"sauce\", but the FREE beer and nibbles went down very well :-)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UQL0QDEKA",
        "type": "message",
        "ts": "1692730593.307269",
        "client_msg_id": "e87f1f36-53e3-4db3-bbf2-2ff04568ffa0",
        "text": ":grinning: Yeah its great to speak to some of these guys. Its like anything in life, you dont know what you dont know!",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g444d10128c0",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/444d10128c0aaf094041a52a76796602.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "Peter",
            "real_name": "Peter Lenagh",
            "display_name": "PeterLe",
            "team": "T4G9NBD2M",
            "name": "lenagh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1692712909.007769",
        "parent_user_id": "UQL0QDEKA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zQqI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "emoji",
                                "name": "grinning",
                                "unicode": "1f600"
                            },
                            {
                                "type": "text",
                                "text": " Yeah its great to speak to some of these guys. Its like anything in life, you dont know what you dont know!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1692730770.564239",
        "client_msg_id": "D6E11CAF-729E-44D5-BC4E-FA6C7C17DDA5",
        "text": "Good to see others exploring this, would be great if we all get somewhere where a betting ML FAQ can be open sourced as there is a hell of a lot to learn ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1692712909.007769",
        "parent_user_id": "UQL0QDEKA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dKo67",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Good to see others exploring this, would be great if we all get somewhere where a betting ML FAQ can be open sourced as there is a hell of a lot to learn "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01PJ5YMFBJ",
        "type": "message",
        "ts": "1692731336.647499",
        "client_msg_id": "e0577aed-91c9-4064-83d2-f49b0e7a87b5",
        "text": "<@UQL0QDEKA> So about a random forest classifier, am I right in thinking the key to that is the \"decision trees\" ? ie.you've created some secret sauce decision tree alogorithm, whose parameters you've trained to get a better prediction?\nor in other words, you have a set of decision trees like say:\n     DecisionTree1: Win%1 = a*Feature1 + b*Feature2 + c*Feature3\n     DecisionTree2: Win%2 = d*Feature4 + e*Feature5 + f*Feature6\nPrediction = MajorityVote(Win%1, Win%2)\nand running the dataset through Pandas...refines to give you a,b,c,d,e,f parameters for your best optimized \"sauce\"?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g819c7f591cc",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/819c7f591cc888486f19b3f2f49f2011.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0014-72.png",
            "first_name": "AndyL",
            "real_name": "AndyL",
            "display_name": "AndyL",
            "team": "T4G9NBD2M",
            "name": "andrew_m_leonard",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1692712909.007769",
        "parent_user_id": "UQL0QDEKA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BlRF=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UQL0QDEKA"
                            },
                            {
                                "type": "text",
                                "text": " So about a random forest classifier, am I right in thinking the key to that is the \"decision trees\" ? ie.you've created some secret sauce decision tree alogorithm, whose parameters you've trained to get a better prediction?\nor in other words, you have a set of decision trees like say:\n     DecisionTree1: Win%1 = a*Feature1 + b*Feature2 + c*Feature3\n     DecisionTree2: Win%2 = d*Feature4 + e*Feature5 + f*Feature6\nPrediction = MajorityVote(Win%1, Win%2)\nand running the dataset through Pandas...refines to give you a,b,c,d,e,f parameters for your best optimized \"sauce\"?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01PJ5YMFBJ",
        "type": "message",
        "ts": "1692732394.746709",
        "client_msg_id": "1e0868a2-dbc7-438c-bee1-77bfbecb67f8",
        "text": "So I just asked GPT... and it seems the RandomForestClassifier actually creates the DecisionTrees, which sounds sort of \"Magic\" ? So you feed it a load of CSV data of features over time, and it predicts a Win%, which you then turn into a \"price\" and then compare to current price as to whether it's value",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g819c7f591cc",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/819c7f591cc888486f19b3f2f49f2011.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0014-72.png",
            "first_name": "AndyL",
            "real_name": "AndyL",
            "display_name": "AndyL",
            "team": "T4G9NBD2M",
            "name": "andrew_m_leonard",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1692712909.007769",
        "parent_user_id": "UQL0QDEKA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5jEOZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So I just asked GPT... and it seems the RandomForestClassifier actually creates the DecisionTrees, which sounds sort of \"Magic\" ? So you feed it a load of CSV data of features over time, and it predicts a Win%, which you then turn into a \"price\" and then compare to current price as to whether it's value"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UQL0QDEKA",
        "type": "message",
        "ts": "1692733627.833519",
        "client_msg_id": "221dcb0a-a77f-4403-b604-0cf0c949a225",
        "text": "<@U4H19D1D2> Ive just found it an interesting topic. The standout for me is that there is no right or wrong way of doing it. Is all subjective. I thnk it helps if you have a good understanding of the markets to start with.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g444d10128c0",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/444d10128c0aaf094041a52a76796602.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "Peter",
            "real_name": "Peter Lenagh",
            "display_name": "PeterLe",
            "team": "T4G9NBD2M",
            "name": "lenagh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1692712909.007769",
        "parent_user_id": "UQL0QDEKA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uZFk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U4H19D1D2"
                            },
                            {
                                "type": "text",
                                "text": " Ive just found it an interesting topic. The standout for me is that there is no right or wrong way of doing it. Is all subjective. I thnk it helps if you have a good understanding of the markets to start with."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UQL0QDEKA",
        "type": "message",
        "ts": "1692734922.270839",
        "client_msg_id": "a411ebd7-f655-4790-ae78-99f2af8f1baa",
        "text": "<@U01PJ5YMFBJ> I started out by learning how to create the CSV  (using the price recorder) into Pandas DF's etc. (I know you are much more accomplished than me in terms of programming by the way)\nThe added in a couple more columns to include winner, P\/L Sum of the books etc\nI then started with something simple like regression\nAnd then a random forest (ive only got the estimators set low for the time being)\nI have two strats one a simple one and one an ML. They both use the same parameters eg, if the simple strat has a condition tha says back &lt; 10 then so does the ML.\nto answer your question - Kind of :grinning: (remember we all do things differently and I know next to nothing about this) You need to have a 'Target'.  In my case I chose the target as 'winner' (from that you can determine whether you bet won or lost) Set up a value in the P\/L column in your CSV based on say £1. if you dont have the CSV data (Which is every update) you need to get that up and running first (Lee helped me get this running, but is simple enough). use the price recorder against your recorded data (One month is plenty)\nChatGPT is great for this sort of thing it bootstraps your learning,\nFor your simple model just create something simple like lay the fav (in running) when X occurs. The ML will work it out for itself. The problem I had is understanding what the ML did so that I could employ that in my live stuff. Ive got some new stuff to look at now thanks to the earlier posts.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g444d10128c0",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/444d10128c0aaf094041a52a76796602.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "Peter",
            "real_name": "Peter Lenagh",
            "display_name": "PeterLe",
            "team": "T4G9NBD2M",
            "name": "lenagh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1692712909.007769",
        "parent_user_id": "UQL0QDEKA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KAZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U01PJ5YMFBJ"
                            },
                            {
                                "type": "text",
                                "text": " I started out by learning how to create the CSV  (using the price recorder) into Pandas DF's etc. (I know you are much more accomplished than me in terms of programming by the way)\nThe added in a couple more columns to include winner, P\/L Sum of the books etc\nI then started with something simple like regression\nAnd then a random forest (ive only got the estimators set low for the time being)\nI have two strats one a simple one and one an ML. They both use the same parameters eg, if the simple strat has a condition tha says back < 10 then so does the ML.\nto answer your question - Kind of "
                            },
                            {
                                "type": "emoji",
                                "name": "grinning",
                                "unicode": "1f600"
                            },
                            {
                                "type": "text",
                                "text": " (remember we all do things differently and I know next to nothing about this) You need to have a 'Target'.  In my case I chose the target as 'winner' (from that you can determine whether you bet won or lost) Set up a value in the P\/L column in your CSV based on say £1. if you dont have the CSV data (Which is every update) you need to get that up and running first (Lee helped me get this running, but is simple enough). use the price recorder against your recorded data (One month is plenty)\nChatGPT is great for this sort of thing it bootstraps your learning,\nFor your simple model just create something simple like lay the fav (in running) when X occurs. The ML will work it out for itself. The problem I had is understanding what the ML did so that I could employ that in my live stuff. Ive got some new stuff to look at now thanks to the earlier posts."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01PJ5YMFBJ",
        "type": "message",
        "ts": "1692737752.747669",
        "client_msg_id": "4389cbc1-2651-4dc1-83b1-b204ad8010b0",
        "text": "Thanks <@UQL0QDEKA> so yeah the programming i'm good with, my head is just missing some part of the \"workflow\" here, I think i'm nearly there with your help above.\nSo in my huge data.csv, i've got something like:\n```market_id, selection_id, secToStart, lay_price, winner, P\/L\n1.1111,    1023,         -12.1,      1.08,      False,  £1\n1.1111,    1023,         -12.2,      1.06,      False,  £1\n1.1111,    1023,         -12.3,      2.46,      False,  £1\n...```\nThe \"classifier\" is basically going to tell me \"when to place the bet\" ?\nSo I don't see how from above the ML is going to work out when to place a bet?\nDon't you need a running cumulative P\/L ?\nThe end goal is when I run this \"model\" over a dataset, it achieves the best net Profit having made a decision of \"when to place a bet\" over all the markets.\nMy head is still missing what it's trying to tell me!\nI'm going to ask ChatGPT again!",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g819c7f591cc",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/819c7f591cc888486f19b3f2f49f2011.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0014-72.png",
            "first_name": "AndyL",
            "real_name": "AndyL",
            "display_name": "AndyL",
            "team": "T4G9NBD2M",
            "name": "andrew_m_leonard",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1692712909.007769",
        "parent_user_id": "UQL0QDEKA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vi+ap",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks "
                            },
                            {
                                "type": "user",
                                "user_id": "UQL0QDEKA"
                            },
                            {
                                "type": "text",
                                "text": " so yeah the programming i'm good with, my head is just missing some part of the \"workflow\" here, I think i'm nearly there with your help above.\nSo in my huge data.csv, i've got something like:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "market_id, selection_id, secToStart, lay_price, winner, P\/L\n1.1111,    1023,         -12.1,      1.08,      False,  £1\n1.1111,    1023,         -12.2,      1.06,      False,  £1\n1.1111,    1023,         -12.3,      2.46,      False,  £1\n..."
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The \"classifier\" is basically going to tell me \"when to place the bet\" ?\nSo I don't see how from above the ML is going to work out when to place a bet?\nDon't you need a running cumulative P\/L ?\nThe end goal is when I run this \"model\" over a dataset, it achieves the best net Profit having made a decision of \"when to place a bet\" over all the markets.\nMy head is still missing what it's trying to tell me!\nI'm going to ask ChatGPT again!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01PJ5YMFBJ",
        "type": "message",
        "ts": "1692737994.285809",
        "client_msg_id": "ffd15d72-fe1d-487b-a8ae-430185243c8c",
        "text": "Ah I see, it's basically creating a \"class\" that can predict with reasonable accuracy the \"target\"",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g819c7f591cc",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/819c7f591cc888486f19b3f2f49f2011.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0014-72.png",
            "first_name": "AndyL",
            "real_name": "AndyL",
            "display_name": "AndyL",
            "team": "T4G9NBD2M",
            "name": "andrew_m_leonard",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1692712909.007769",
        "parent_user_id": "UQL0QDEKA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JF9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah I see, it's basically creating a \"class\" that can predict with reasonable accuracy the \"target\""
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01PJ5YMFBJ",
        "type": "message",
        "ts": "1692738388.378909",
        "client_msg_id": "eac51479-44c0-44e1-955d-b240a20a4c85",
        "text": "The \"target\" being winner",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g819c7f591cc",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/819c7f591cc888486f19b3f2f49f2011.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0014-72.png",
            "first_name": "AndyL",
            "real_name": "AndyL",
            "display_name": "AndyL",
            "team": "T4G9NBD2M",
            "name": "andrew_m_leonard",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1692712909.007769",
        "parent_user_id": "UQL0QDEKA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1BO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The \"target\" being winner"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01PJ5YMFBJ",
        "type": "message",
        "ts": "1692739818.364929",
        "edited": {
            "user": "U01PJ5YMFBJ",
            "ts": "1692739862.000000"
        },
        "client_msg_id": "691ef40c-ecab-4501-b9da-f0ee5535ec78",
        "text": "Doh, penny dropped finally!\nSo a Random Forest Classifier, is for \"classifying\" groups as best as possible,  so you need to have a strategy to start with say \"X\", which says makes £1000, and you can then train a RFC to optimize the \"X\" entry points for \"profit\". So once you have trained your RFC, when using \"live\", rather than doing \"X\", you simply ask \"RFC\" will the entry here be profitable? Yes or No ? .... and with a bit of luck you may end up with £2000 !\nRight, so I just need to find a decent \"X\"......!",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g819c7f591cc",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/819c7f591cc888486f19b3f2f49f2011.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0014-72.png",
            "first_name": "AndyL",
            "real_name": "AndyL",
            "display_name": "AndyL",
            "team": "T4G9NBD2M",
            "name": "andrew_m_leonard",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1692712909.007769",
        "parent_user_id": "UQL0QDEKA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aCu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Doh, penny dropped finally!\nSo a Random Forest Classifier, is for \"classifying\" groups as best as possible,  so you need to have a strategy to start with say \"X\", which says makes £1000, and you can then train a RFC to optimize the \"X\" entry points for \"profit\". So once you have trained your RFC, when using \"live\", rather than doing \"X\", you simply ask \"RFC\" will the entry here be profitable? Yes or No ? .... and with a bit of luck you may end up with £2000 !\nRight, so I just need to find a decent \"X\"......!"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]