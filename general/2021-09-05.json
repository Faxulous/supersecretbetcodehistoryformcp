[
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1630827904.169300",
        "client_msg_id": "d5c7a883-9783-43c2-aed7-559c804b80db",
        "text": "For previously discussed reasons, even if you get a connection limit per subaccount, if you end up using that many connections they will come down hard on you\n\nIt sounds like all of your problems go away if you use a coarse market filter and do the filtering locally as is best practice",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "w0UgB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For previously discussed reasons, even if you get a connection limit per subaccount, if you end up using that many connections they will come down hard on you\n\nIt sounds like all of your problems go away if you use a coarse market filter and do the filtering locally as is best practice"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U4H19D1D2"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1630830205.169600",
        "client_msg_id": "d2d990ba-da7e-4c10-bf39-e91c2b576d48",
        "text": ":100:",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630786129.155700",
        "parent_user_id": "UPMUFSGCR",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IzC7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "emoji",
                                "name": "100",
                                "unicode": "1f4af"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UPMUFSGCR",
        "type": "message",
        "ts": "1630835675.172700",
        "client_msg_id": "424bbb54-db96-458a-958b-44845d1cf0ac",
        "text": "What do people do if they run over 10 discrete strategies?\n\nDo they have Python scripts that run more than one strategy?\n\nOr do they use some sort of local server, with course filter, and sends the data to individual strategies running on other Python scripts?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "31c0bb5a442c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-28\/812386967189_31c0bb5a442c5b8d2c61_72.png",
            "first_name": "Jon",
            "real_name": "Jon Jon Jon Jon Jon Jon Jon Jon",
            "display_name": "Jonjonjon",
            "team": "T4G9NBD2M",
            "name": "fcmisc",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DSAm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What do people do if they run over 10 discrete strategies?\n\nDo they have Python scripts that run more than one strategy?\n\nOr do they use some sort of local server, with course filter, and sends the data to individual strategies running on other Python scripts?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "ULDAVFDRP",
        "type": "message",
        "ts": "1630836205.175800",
        "client_msg_id": "00d97b5f-33cc-489f-b182-04b52822d040",
        "text": "For me at least strategies are associated with a sub account, and config is loaded from a database on start up, so I typically run a single process for an account which just loads in multiple strategies. Not sure if others do similar, I guess it may depend on where \/ how you code your logic",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g46fe1c1bf03",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b46fe1c1bf03e18d951e7032fb494283.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "",
            "real_name": "Oliver Varney",
            "display_name": "Oliver Varney",
            "team": "T4G9NBD2M",
            "name": "oliverashleyvarney",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "U2Ar6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For me at least strategies are associated with a sub account, and config is loaded from a database on start up, so I typically run a single process for an account which just loads in multiple strategies. Not sure if others do similar, I guess it may depend on where \/ how you code your logic"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1630836276.176200",
        "edited": {
            "user": "UBS7QANF3",
            "ts": "1630836284.000000"
        },
        "client_msg_id": "f330ba2d-64ec-45fa-8813-6be3ce1872d3",
        "text": "Centralised component connecting to the stream and publishing market books on Redis pubsub",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qAl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Centralised component connecting to the stream and publishing market books on Redis pubsub"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1630836403.177400",
        "client_msg_id": "c5d141a6-ca00-495d-81dc-07b6174775c6",
        "text": "That's not really driven by the connection limit however",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hUX1N",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That's not really driven by the connection limit however"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1630836441.178700",
        "client_msg_id": "4271ee0b-c839-4833-8f9f-bdd803013cb3",
        "text": "I'd be shocked if someone is trading &gt;10 strategies where it makes sense to have a connection per strategy. 10 horse racing strategies can be easily served by one connection",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qAZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'd be shocked if someone is trading >10 strategies where it makes sense to have a connection per strategy. 10 horse racing strategies can be easily served by one connection"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "ULDAVFDRP",
        "type": "message",
        "ts": "1630836461.178800",
        "edited": {
            "user": "ULDAVFDRP",
            "ts": "1630837450.000000"
        },
        "client_msg_id": "17ba5a65-6924-411f-974f-88fecfaee150",
        "text": "at a basic level with flumine isnt it as simple as flumine.add_strategy or something? so can you not just add some logic here to batch up strategies if you only have one account currently?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g46fe1c1bf03",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b46fe1c1bf03e18d951e7032fb494283.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "",
            "real_name": "Oliver Varney",
            "display_name": "Oliver Varney",
            "team": "T4G9NBD2M",
            "name": "oliverashleyvarney",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "22N",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "at a basic level with flumine isnt it as simple as flumine.add_strategy or something? so can you not just add some logic here to batch up strategies if you only have one account currently?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U4H19D1D2"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UFTBRB3F1",
        "type": "message",
        "ts": "1630836706.180300",
        "client_msg_id": "11f0c23a-8c7e-4b8f-87b6-2a5d15e352fe",
        "text": "I'm on a much more basic level than all of you I'd imagine and thats exactly what I do.\n\nI have a json file which has various parameters, then on startup I loop through and add each strategy (this is using Flumine).",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g771e110be94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a771e110be945b86bede9d5c1bb551e3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Newbie99",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "vjmehra",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/=X0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm on a much more basic level than all of you I'd imagine and thats exactly what I do.\n\nI have a json file which has various parameters, then on startup I loop through and add each strategy (this is using Flumine)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UPMUFSGCR",
        "type": "message",
        "ts": "1630839328.186300",
        "client_msg_id": "505649f6-b7ce-4a23-8f11-7faaca9a0ef4",
        "text": "<@ULDAVFDRP> yes using add_strategy would make it easy to batch up a load of strategies into one script. However, if updating code for a strategy, I wouldn't want to disrupt the operation of other strategies.\n\nMy strategies trade in and out of positions quite heavily, so if something is interrupted while doing that it could leave me unhedged.\n\nI like <@UBS7QANF3>'s idea. I'm wondering how easy it would be to make a flumine session point at a centralised component rather than Betfair.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "31c0bb5a442c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-28\/812386967189_31c0bb5a442c5b8d2c61_72.png",
            "first_name": "Jon",
            "real_name": "Jon Jon Jon Jon Jon Jon Jon Jon",
            "display_name": "Jonjonjon",
            "team": "T4G9NBD2M",
            "name": "fcmisc",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "z0gcv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "ULDAVFDRP"
                            },
                            {
                                "type": "text",
                                "text": " yes using add_strategy would make it easy to batch up a load of strategies into one script. However, if updating code for a strategy, I wouldn't want to disrupt the operation of other strategies.\n\nMy strategies trade in and out of positions quite heavily, so if something is interrupted while doing that it could leave me unhedged.\n\nI like "
                            },
                            {
                                "type": "user",
                                "user_id": "UBS7QANF3"
                            },
                            {
                                "type": "text",
                                "text": "'s idea. I'm wondering how easy it would be to make a flumine session point at a centralised component rather than Betfair."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1630839584.187200",
        "client_msg_id": "fe0e167e-9365-42b9-aed5-336bfc77d5c5",
        "text": "Your first point is exactly why I run everything as individual components which communicate using pubsub",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "t5U9q",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Your first point is exactly why I run everything as individual components which communicate using pubsub"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UPMUFSGCR",
        "type": "message",
        "ts": "1630840665.187900",
        "client_msg_id": "b8e2b76f-97d0-4fc4-94e2-1c45608ea49f",
        "text": "<@U4H19D1D2> do you have any thoughts on the cleanest way to do this with Flumine?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "31c0bb5a442c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-28\/812386967189_31c0bb5a442c5b8d2c61_72.png",
            "first_name": "Jon",
            "real_name": "Jon Jon Jon Jon Jon Jon Jon Jon",
            "display_name": "Jonjonjon",
            "team": "T4G9NBD2M",
            "name": "fcmisc",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "o\/5mU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U4H19D1D2"
                            },
                            {
                                "type": "text",
                                "text": " do you have any thoughts on the cleanest way to do this with Flumine?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1630840791.188900",
        "client_msg_id": "5CA0AC26-1045-47F2-9388-F98D50F5701F",
        "text": "Just create a custom stream to read from redis instead of betfair, I imagine it would be relatively simple ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5A+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Just create a custom stream to read from redis instead of betfair, I imagine it would be relatively simple "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1630840836.190100",
        "client_msg_id": "041F189F-9DAC-4AA1-AE91-A2F3DE071C19",
        "text": "However I wouldn’t recommend the complication unless you are trying to solve something, I wouldn’t consider the connection limit a problem to solve ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GSES",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "However I wouldn’t recommend the complication unless you are trying to solve something, I wouldn’t consider the connection limit a problem to solve "
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1::skin-tone-6",
                "users": [
                    "UPMUFSGCR"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "ULDAVFDRP",
        "type": "message",
        "ts": "1630840991.191700",
        "client_msg_id": "f54e0f4a-ac93-4c44-81ad-585389abcdab",
        "text": "If im understanding your issues, Is it worth all the effort building something complicated when assuming your strategies are all horses, you can restart the process with the updated code on like a sunday , or weeknight at 9pm (and reload in positions if necessary)",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g46fe1c1bf03",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b46fe1c1bf03e18d951e7032fb494283.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "",
            "real_name": "Oliver Varney",
            "display_name": "Oliver Varney",
            "team": "T4G9NBD2M",
            "name": "oliverashleyvarney",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pNQY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If im understanding your issues, Is it worth all the effort building something complicated when assuming your strategies are all horses, you can restart the process with the updated code on like a sunday , or weeknight at 9pm (and reload in positions if necessary)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UPMUFSGCR",
        "type": "message",
        "ts": "1630841089.192400",
        "client_msg_id": "0a393a41-1d1e-4a63-bdd3-44ed0791e11b",
        "text": "You are right. I don't want to waste time on something like that. I will ponder...",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "31c0bb5a442c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-28\/812386967189_31c0bb5a442c5b8d2c61_72.png",
            "first_name": "Jon",
            "real_name": "Jon Jon Jon Jon Jon Jon Jon Jon",
            "display_name": "Jonjonjon",
            "team": "T4G9NBD2M",
            "name": "fcmisc",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jZs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You are right. I don't want to waste time on something like that. I will ponder..."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1630841133.193200",
        "client_msg_id": "DB4F1D56-F00F-4FD3-B815-97934B331C0B",
        "text": "Not say it wouldn’t be a cool thing to do \/ learn ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Pjv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not say it wouldn’t be a cool thing to do \/ learn "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1630841207.194200",
        "client_msg_id": "854e4210-7b60-463f-b644-1c353736c202",
        "text": "I have to say even though I do things this way I agree with <@ULDAVFDRP> and <@U4H19D1D2> - it sounds like the problems you are currently experiencing have much simpler solutions for now",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "j=7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have to say even though I do things this way I agree with "
                            },
                            {
                                "type": "user",
                                "user_id": "ULDAVFDRP"
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "user",
                                "user_id": "U4H19D1D2"
                            },
                            {
                                "type": "text",
                                "text": " - it sounds like the problems you are currently experiencing have much simpler solutions for now"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "ULDAVFDRP",
        "type": "message",
        "ts": "1630841237.194800",
        "client_msg_id": "33efea1d-3499-4b90-be76-e8a20d1b40bd",
        "text": "not knocking doing it properly per say though and as <@U4H19D1D2> says it would be interesting",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g46fe1c1bf03",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b46fe1c1bf03e18d951e7032fb494283.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "",
            "real_name": "Oliver Varney",
            "display_name": "Oliver Varney",
            "team": "T4G9NBD2M",
            "name": "oliverashleyvarney",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Eeo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "not knocking doing it properly per say though and as "
                            },
                            {
                                "type": "user",
                                "user_id": "U4H19D1D2"
                            },
                            {
                                "type": "text",
                                "text": " says it would be interesting"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0128E7BEHW",
        "type": "message",
        "ts": "1630843454.196300",
        "client_msg_id": "7d264200-4f72-495c-bd32-efeb1baf1801",
        "text": "This is the kinda thing we debated a while ago...I decided I liked the idea of having one centralised consumer for market data which was broadcasted internally to whatever processes wanted to subscribe to whatever markets. If you didn't want to go the redis route you could go down zmq instead which has less setup overhead (generally found it simpler). Didn't integrate it into flumine though.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb57a2bdd15a",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b57a2bdd15acccdb845ce257f38940cc.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Dave",
            "real_name": "Dave R",
            "display_name": "Dave",
            "team": "T4G9NBD2M",
            "name": "d7m",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630843454.196300",
        "reply_count": 4,
        "reply_users_count": 2,
        "latest_reply": "1630858367.223800",
        "reply_users": [
            "UBS7QANF3",
            "U0128E7BEHW"
        ],
        "replies": [
            {
                "user": "UBS7QANF3",
                "ts": "1630844770.198500"
            },
            {
                "user": "U0128E7BEHW",
                "ts": "1630846335.198700"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1630848048.199700"
            },
            {
                "user": "U0128E7BEHW",
                "ts": "1630858367.223800"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Mpf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is the kinda thing we debated a while ago...I decided I liked the idea of having one centralised consumer for market data which was broadcasted internally to whatever processes wanted to subscribe to whatever markets. If you didn't want to go the redis route you could go down zmq instead which has less setup overhead (generally found it simpler). Didn't integrate it into flumine though."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0128E7BEHW",
        "type": "message",
        "ts": "1630843528.196700",
        "client_msg_id": "13683575-c0c8-402a-b958-35c6f291ca0d",
        "text": "Too long ago to find the thread unfortunately.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb57a2bdd15a",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b57a2bdd15acccdb845ce257f38940cc.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Dave",
            "real_name": "Dave R",
            "display_name": "Dave",
            "team": "T4G9NBD2M",
            "name": "d7m",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YzpEn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Too long ago to find the thread unfortunately."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0128E7BEHW",
        "type": "message",
        "ts": "1630843769.197400",
        "client_msg_id": "14496c3d-c452-4d00-9ef1-bdbf51b49f42",
        "text": "(one advantage is that you can have a process per strategy rather than one process for N strategies and be hindered by GIL)",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb57a2bdd15a",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b57a2bdd15acccdb845ce257f38940cc.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Dave",
            "real_name": "Dave R",
            "display_name": "Dave",
            "team": "T4G9NBD2M",
            "name": "d7m",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630843769.197400",
        "reply_count": 8,
        "reply_users_count": 2,
        "latest_reply": "1630854627.223300",
        "reply_users": [
            "UBS7QANF3",
            "UUE6E1LA1"
        ],
        "replies": [
            {
                "user": "UBS7QANF3",
                "ts": "1630848311.200100"
            },
            {
                "user": "UUE6E1LA1",
                "ts": "1630850974.204500"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1630851902.214500"
            },
            {
                "user": "UUE6E1LA1",
                "ts": "1630852023.214900"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1630854213.221000"
            },
            {
                "user": "UUE6E1LA1",
                "ts": "1630854382.222000"
            },
            {
                "user": "UUE6E1LA1",
                "ts": "1630854398.222700"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1630854627.223300"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VX7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(one advantage is that you can have a process per strategy rather than one process for N strategies and be hindered by GIL)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1::skin-tone-6",
                "users": [
                    "UPMUFSGCR"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1630844770.198500",
        "client_msg_id": "A3B97B3D-D25E-421F-8231-EA1F382E2C62",
        "text": "Can you expand on ZMQ having less setup overhead than Redis?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630843454.196300",
        "parent_user_id": "U0128E7BEHW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mCJQY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Can you expand on ZMQ having less setup overhead than Redis?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0128E7BEHW",
        "type": "message",
        "ts": "1630846335.198700",
        "client_msg_id": "409be583-be87-4df8-aead-695e93b4e3de",
        "text": "all I needed to do was pip install zmq, write 3 lines to make my centralised proxy, and a couple of lines on each  client to send data to the proxy  (the proxy being the process that receives data and publishes it to subscribers), and a couple of lines on consumers to subscribe. Very little in way of config, and presumably lighter than redis to run as it lacks many features such as the KV store",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb57a2bdd15a",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b57a2bdd15acccdb845ce257f38940cc.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Dave",
            "real_name": "Dave R",
            "display_name": "Dave",
            "team": "T4G9NBD2M",
            "name": "d7m",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630843454.196300",
        "parent_user_id": "U0128E7BEHW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tr2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "all I needed to do was pip install zmq, write 3 lines to make my centralised proxy, and a couple of lines on each  client to send data to the proxy  (the proxy being the process that receives data and publishes it to subscribers), and a couple of lines on consumers to subscribe. Very little in way of config, and presumably lighter than redis to run as it lacks many features such as the KV store"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1630848048.199700",
        "client_msg_id": "CA0974C2-5196-430E-B906-D9C4E631D208",
        "text": "Good to know, I’m still thinking of replacing Redis with ZMQ in certain parts of my stack for latency reasons",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630843454.196300",
        "parent_user_id": "U0128E7BEHW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6HXT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Good to know, I’m still thinking of replacing Redis with ZMQ in certain parts of my stack for latency reasons"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1630848311.200100",
        "client_msg_id": "8824567E-A39F-4723-8F20-E43B2C2BD49D",
        "text": "Personally I have one process per event",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630843769.197400",
        "parent_user_id": "U0128E7BEHW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "at95",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Personally I have one process per event"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUE6E1LA1",
        "type": "message",
        "ts": "1630850913.204000",
        "client_msg_id": "24e23e81-99b7-4662-b23c-b0bd4c352e33",
        "text": "I am currently implementing stream resubscription (simply have not needed it before and used to just restart from scratch on a heartbeat timeout) and wondering do you have to send the same filters as that of your initial subscription? Docs say\n\n_\"Store your subscription criteria (re-subscribe will only work correctly with identical subscription critieria\"_\n\nso I assume that this has to be the case and that the initialClk and clk values you send are not sufficient ??",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf53cae45edd",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f53cae45edd7f7b67bbe98819597612e.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "D C",
            "display_name": "D C",
            "team": "T4G9NBD2M",
            "name": "oddsvantage",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630850913.204000",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1630915687.245900",
        "reply_users": [
            "U4H19D1D2",
            "UUE6E1LA1"
        ],
        "replies": [
            {
                "user": "U4H19D1D2",
                "ts": "1630868801.226400"
            },
            {
                "user": "UUE6E1LA1",
                "ts": "1630915687.245900"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1630915687.245900",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jGqO0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I am currently implementing stream resubscription (simply have not needed it before and used to just restart from scratch on a heartbeat timeout) and wondering do you have to send the same filters as that of your initial subscription? Docs say\n\n"
                            },
                            {
                                "type": "text",
                                "text": "\"Store your subscription criteria (re-subscribe will only work correctly with identical subscription critieria\"",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\nso I assume that this has to be the case and that the initialClk and clk values you send are not sufficient ??"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUE6E1LA1",
        "type": "message",
        "ts": "1630850974.204500",
        "client_msg_id": "2e87d27d-4854-4432-a5d0-d3c3f344dce8",
        "text": "What is GIL ?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf53cae45edd",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f53cae45edd7f7b67bbe98819597612e.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "D C",
            "display_name": "D C",
            "team": "T4G9NBD2M",
            "name": "oddsvantage",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630843769.197400",
        "parent_user_id": "U0128E7BEHW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "d3RhM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What is GIL ?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1630851902.214500",
        "client_msg_id": "5572150A-C8E1-4964-8498-837F41AC30D2",
        "text": "Global interperer lock. It means Python is inherently single threaded",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630843769.197400",
        "parent_user_id": "U0128E7BEHW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vslGA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Global interperer lock. It means Python is inherently single threaded"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UUE6E1LA1"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UUE6E1LA1",
        "type": "message",
        "ts": "1630852023.214900",
        "client_msg_id": "ccb13fad-f3b5-4fe0-8bb4-311bbeef8922",
        "text": "So would this cause the same kind of holdups as using async type socket components?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf53cae45edd",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f53cae45edd7f7b67bbe98819597612e.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "D C",
            "display_name": "D C",
            "team": "T4G9NBD2M",
            "name": "oddsvantage",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630843769.197400",
        "parent_user_id": "U0128E7BEHW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oBq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So would this cause the same kind of holdups as using async type socket components?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013K4VNB6D",
        "type": "message",
        "ts": "1630853567.218800",
        "client_msg_id": "579f8364-0442-4eef-a3c5-0f7d493616f3",
        "text": "I've just purchased some historical data from Betfair containing thousands of JSON files. What I've done previously is to manually extract some of the files to a folder called 'Data', and then go:\n\n*from os import listdir*\n*from os.path import isfile, join*\n\n*markets = [f for f in listdir('Data') if isfile(join('Data', f))]*\n*for i in range(len(markets)):*\n    *markets[i] = \"Data\/\" + markets[i]*\n\n*strategy = TestStrategy(*\n    *market_filter={\"markets\": markets},*\n*)*\n*framework.add_strategy(strategy)*\n*framework.run()*\n\nHowever, that approach isn't viable when there are thousands of files in different folders in a WINRAR file. I've been told I can use match.patch:\n\n*with mock.patch(\"builtins.open\", smart_open.open):*\n    *framework.add_strategy(strat)*\n    *framework.run()*\n\nHowever, where do I put the name and path of the tar file? Alternatively, is there a program that extracts all the JSON files to a single folder?\n\nThanks\n\nJeff",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf188478b89f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f188478b89f4a5e2c5af9eafa0433712.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "",
            "real_name": "Jeff Waters",
            "display_name": "Jeff Waters",
            "team": "T4G9NBD2M",
            "name": "watersjg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tf4k",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've just purchased some historical data from Betfair containing thousands of JSON files. What I've done previously is to manually extract some of the files to a folder called 'Data', and then go:\n\n"
                            },
                            {
                                "type": "text",
                                "text": "from os import listdir",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "from os.path import isfile, join",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            },
                            {
                                "type": "text",
                                "text": "markets = [f for f in listdir('Data') if isfile(join('Data', f))]",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "for i in range(len(markets)):",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "    markets[i] = \"Data\/\" + markets[i]",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            },
                            {
                                "type": "text",
                                "text": "strategy = TestStrategy(",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "    market_filter={\"markets\": markets},",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": ")",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "framework.add_strategy(strategy)",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "framework.run()",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\nHowever, that approach isn't viable when there are thousands of files in different folders in a WINRAR file. I've been told I can use match.patch:\n\n"
                            },
                            {
                                "type": "text",
                                "text": "with mock.patch(\"builtins.open\", smart_open.open):",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "    framework.add_strategy(strat)",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "    framework.run()",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\nHowever, where do I put the name and path of the tar file? Alternatively, is there a program that extracts all the JSON files to a single folder?\n\nThanks\n\nJeff"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1630853882.219100",
        "client_msg_id": "4C8CDE9A-F436-4624-ADC4-78C7D12C0215",
        "text": "Untar the file then do the above ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630853882.219100",
        "reply_count": 8,
        "reply_users_count": 3,
        "latest_reply": "1630866514.225500",
        "reply_users": [
            "U013K4VNB6D",
            "UBS7QANF3",
            "U01SCPDTV5J"
        ],
        "replies": [
            {
                "user": "U013K4VNB6D",
                "ts": "1630854093.219300"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1630854405.223100"
            },
            {
                "user": "U013K4VNB6D",
                "ts": "1630856362.223600"
            },
            {
                "user": "U01SCPDTV5J",
                "ts": "1630858873.224000"
            },
            {
                "user": "U013K4VNB6D",
                "ts": "1630860651.224400"
            },
            {
                "user": "U01SCPDTV5J",
                "ts": "1630865195.225100"
            },
            {
                "user": "U01SCPDTV5J",
                "ts": "1630865228.225300"
            },
            {
                "user": "U013K4VNB6D",
                "ts": "1630866514.225500"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Z4I7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Untar the file then do the above "
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U013K4VNB6D"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U013K4VNB6D",
        "type": "message",
        "ts": "1630854093.219300",
        "client_msg_id": "6e4b7167-7ba4-4c81-beaa-eb6e9aebe219",
        "text": "Will do, thanks.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf188478b89f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f188478b89f4a5e2c5af9eafa0433712.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "",
            "real_name": "Jeff Waters",
            "display_name": "Jeff Waters",
            "team": "T4G9NBD2M",
            "name": "watersjg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630853882.219100",
        "parent_user_id": "UBS7QANF3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XBwbd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Will do, thanks."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1630854213.221000",
        "client_msg_id": "E96FFC5C-BC6C-4BCE-B57B-B051ECCD4235",
        "text": "I’m not sure exactly what you’re asking but it does mean that you cannot spend a lot of time processing an individual stream update as you’ll block handling of subsequent updates",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630843769.197400",
        "parent_user_id": "U0128E7BEHW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GiYx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’m not sure exactly what you’re asking but it does mean that you cannot spend a lot of time processing an individual stream update as you’ll block handling of subsequent updates"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUE6E1LA1",
        "type": "message",
        "ts": "1630854382.222000",
        "client_msg_id": "cecd10f4-a64e-4421-932d-b61a4acc5796",
        "text": "Yes that's what I am getting at. It has occurred to me that I need to shift from this single thread event loop model and rework things to a multi-process approach with a shared image of the market - rather like your redis type architecture",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf53cae45edd",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f53cae45edd7f7b67bbe98819597612e.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "D C",
            "display_name": "D C",
            "team": "T4G9NBD2M",
            "name": "oddsvantage",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630843769.197400",
        "parent_user_id": "U0128E7BEHW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mv5\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes that's what I am getting at. It has occurred to me that I need to shift from this single thread event loop model and rework things to a multi-process approach with a shared image of the market - rather like your redis type architecture"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUE6E1LA1",
        "type": "message",
        "ts": "1630854398.222700",
        "client_msg_id": "39a62637-3074-4d18-b798-4c710dcc38a2",
        "text": "Well \"need\" may be overstating it but I am sure you know what I mean",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf53cae45edd",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f53cae45edd7f7b67bbe98819597612e.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "D C",
            "display_name": "D C",
            "team": "T4G9NBD2M",
            "name": "oddsvantage",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630843769.197400",
        "parent_user_id": "U0128E7BEHW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DZf4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Well \"need\" may be overstating it but I am sure you know what I mean"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1630854405.223100",
        "client_msg_id": "79FE685C-30B3-425F-986D-3ADFCEC3FD0D",
        "text": "The point being the smart_open construct allows you to process the bz2 files directly but you still have to extract the tar file first ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630853882.219100",
        "parent_user_id": "UBS7QANF3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pdD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The point being the smart_open construct allows you to process the bz2 files directly but you still have to extract the tar file first "
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U013K4VNB6D"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1630854627.223300",
        "client_msg_id": "dd30c82f-077d-4074-8c14-f551712f94b8",
        "text": ":100::+1:",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630843769.197400",
        "parent_user_id": "U0128E7BEHW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eHQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "emoji",
                                "name": "100",
                                "unicode": "1f4af"
                            },
                            {
                                "type": "emoji",
                                "name": "+1",
                                "unicode": "1f44d"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "I've now gone with:\n\n```strategy = TestStrategy(\n    market_filter={},\n    max_order_exposure=1000,\n    max_selection_exposure=105,\n)\n\nwith mock.patch(\"builtins.open\", smart_open.open):\n    framework.add_strategy(strategy)\n    framework.run()```\nI've also unzipped the tar file to the same folder that the code resides in.\n\nHowever, none of the data files are being read. One of the messages I get is:\n\n{\"asctime\": \"2021-09-05 15:35:38,776\", \"levelname\": \"WARNING\", \"message\": \"No markets or events found for strategy TestStrategy\"}\n\nWhat am I doing wrong?",
        "files": [
            {
                "id": "F02D0THK50X",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U013K4VNB6D",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "B+bUo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've now gone with:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "strategy = TestStrategy(\n    market_filter={},\n    max_order_exposure=1000,\n    max_selection_exposure=105,\n)\n\nwith mock.patch(\"builtins.open\", smart_open.open):\n    framework.add_strategy(strategy)\n    framework.run()"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've also unzipped the tar file to the same folder that the code resides in.\n\nHowever, none of the data files are being read. One of the messages I get is:\n\n{\"asctime\": \"2021-09-05 15:35:38,776\", \"levelname\": \"WARNING\", \"message\": \"No markets or events found for strategy TestStrategy\"}\n\nWhat am I doing wrong?"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1630856362.223600",
        "thread_ts": "1630853882.219100",
        "parent_user_id": "UBS7QANF3"
    },
    {
        "user": "U0128E7BEHW",
        "type": "message",
        "ts": "1630858367.223800",
        "client_msg_id": "f4e33d8b-f68b-4964-a7f7-6ef2be0b85fd",
        "text": "Nice. I've found zmq to be pretty great where you want to have more control over certain bits of your stack I guess, especially where you don't need the extra stuff that redis has to offer.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb57a2bdd15a",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b57a2bdd15acccdb845ce257f38940cc.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Dave",
            "real_name": "Dave R",
            "display_name": "Dave",
            "team": "T4G9NBD2M",
            "name": "d7m",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630843454.196300",
        "parent_user_id": "U0128E7BEHW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5sQjH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Nice. I've found zmq to be pretty great where you want to have more control over certain bits of your stack I guess, especially where you don't need the extra stuff that redis has to offer."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01SCPDTV5J",
        "type": "message",
        "ts": "1630858873.224000",
        "client_msg_id": "05549b8a-3a94-45f7-ab5c-1055063acfde",
        "text": "Your market filter looks empty. Need to give it your filepaths.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "4db627cf9e3e",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-07\/2464604515811_4db627cf9e3ea5713217_72.jpg",
            "first_name": "Jack",
            "real_name": "Jack Rickards",
            "display_name": "Jack",
            "team": "T4G9NBD2M",
            "name": "jack.rickards",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630853882.219100",
        "parent_user_id": "UBS7QANF3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pHPd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Your market filter looks empty. Need to give it your filepaths."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U013K4VNB6D"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U013K4VNB6D",
        "type": "message",
        "ts": "1630860651.224400",
        "client_msg_id": "d6edf610-966a-42d8-a725-4695e2c4748b",
        "text": "Thanks Jack\n\nI know how to access a particular file, viz something like:\n\nmarkets = [\"tests\/resources\/PRO-1.170258213\"] (from <https:\/\/github.com\/liampauling\/flumine\/blob\/master\/examples\/backtest.py>)\n\nWhat I'm not clear is how to get my program to go through the entire directory tree and extract every bz2 file. Would I need to do a traversal of the directories, using something like this? <https:\/\/www.pythoncentral.io\/how-to-traverse-a-directory-tree-in-python-guide-to-os-walk\/>",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf188478b89f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f188478b89f4a5e2c5af9eafa0433712.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "",
            "real_name": "Jeff Waters",
            "display_name": "Jeff Waters",
            "team": "T4G9NBD2M",
            "name": "watersjg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630853882.219100",
        "parent_user_id": "UBS7QANF3",
        "attachments": [
            {
                "service_name": "Python Central",
                "title": "How to Traverse a Directory Tree in Python - Guide to os.walk | Python Central",
                "title_link": "https:\/\/www.pythoncentral.io\/how-to-traverse-a-directory-tree-in-python-guide-to-os-walk\/",
                "text": "A look at Python's os.walk built-in method, used for traversing directory trees.",
                "fallback": "Python Central: How to Traverse a Directory Tree in Python - Guide to os.walk | Python Central",
                "fields": [
                    {
                        "title": "Written by",
                        "value": "unknown",
                        "short": true
                    },
                    {
                        "title": "Est. reading time",
                        "value": "3 minutes",
                        "short": true
                    }
                ],
                "ts": 1337862720,
                "from_url": "https:\/\/www.pythoncentral.io\/how-to-traverse-a-directory-tree-in-python-guide-to-os-walk\/",
                "service_icon": "https:\/\/www.pythoncentral.io\/wp-content\/themes\/pythoncentral\/assets\/images\/favicons\/apple-touch-icon-57x57.png",
                "id": 1,
                "original_url": "https:\/\/www.pythoncentral.io\/how-to-traverse-a-directory-tree-in-python-guide-to-os-walk\/"
            },
            {
                "text": "```\nimport time\nimport logging\nfrom pythonjsonlogger import jsonlogger\n\nfrom flumine import FlumineBacktest, clients\nfrom strategies.lowestlayer import LowestLayer\n\nlogger = logging.getLogger()\n\ncustom_format = \"%(asctime) %(levelname) %(message)\"\nlog_handler = logging.StreamHandler()\nformatter = jsonlogger.JsonFormatter(custom_format)\nformatter.converter = time.gmtime\nlog_handler.setFormatter(formatter)\nlogger.addHandler(log_handler)\nlogger.setLevel(<http:\/\/logging.INFO|logging.INFO>)\n\nclient = clients.BacktestClient()\n\nframework = FlumineBacktest(client=client)\n\nmarkets = [\"tests\/resources\/PRO-1.170258213\"]\n\nstrategy = LowestLayer(\n    market_filter={\"markets\": markets},\n    max_order_exposure=1000,\n    max_selection_exposure=105,\n    context={\"stake\": 2},\n)\nframework.add_strategy(strategy)\n\nframework.run()\n\nfor market in framework.markets:\n    print(\"Profit: {0:.2f}\".format(sum([o.simulated.profit for o in market.blotter])))\n    for order in market.blotter:\n        print(\n            order.selection_id,\n            order.responses.date_time_placed,\n            order.status,\n            order.order_type.price,\n            order.average_price_matched,\n            order.size_matched,\n            order.simulated.profit,\n        )\n\n```",
                "title": "<https:\/\/github.com\/liampauling\/flumine\/blob\/master\/examples\/backtest.py | backtest.py>",
                "footer": "<https:\/\/github.com\/liampauling\/flumine|liampauling\/flumine>",
                "id": 2,
                "footer_icon": "https:\/\/slack.github.com\/static\/img\/favicon-neutral.png",
                "color": "24292f",
                "mrkdwn_in": [
                    "text"
                ],
                "fallback": "<https:\/\/github.com\/liampauling\/flumine\/blob\/master\/examples\/backtest.py | backtest.py>",
                "bot_id": "B021ZJYSBMW",
                "app_unfurl_url": "https:\/\/github.com\/liampauling\/flumine\/blob\/master\/examples\/backtest.py",
                "is_app_unfurl": true,
                "app_id": "A01BP7R4KNY"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ijQl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks Jack\n\nI know how to access a particular file, viz something like:\n\nmarkets = [\"tests\/resources\/PRO-1.170258213\"] (from "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/liampauling\/flumine\/blob\/master\/examples\/backtest.py"
                            },
                            {
                                "type": "text",
                                "text": ")\n\nWhat I'm not clear is how to get my program to go through the entire directory tree and extract every bz2 file. Would I need to do a traversal of the directories, using something like this? "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.pythoncentral.io\/how-to-traverse-a-directory-tree-in-python-guide-to-os-walk\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01SCPDTV5J",
        "type": "message",
        "ts": "1630865195.225100",
        "client_msg_id": "03b1830d-2a1a-425b-8369-77e4c29fb548",
        "text": "Yes os.walk() is a good way to do it.\n\nSomething like this would probably do the job\n```def get_markets(data_dir):\n    markets = []\n    for dir_, _, files in os.walk(data_dir):\n        for file_name in files:\n            rel_dir = os.path.relpath(dir_, data_dir)\n            rel_file = os.path.join(rel_dir, file_name)\n            markets.append(rel_file)\n    return markets```",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "4db627cf9e3e",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-07\/2464604515811_4db627cf9e3ea5713217_72.jpg",
            "first_name": "Jack",
            "real_name": "Jack Rickards",
            "display_name": "Jack",
            "team": "T4G9NBD2M",
            "name": "jack.rickards",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630853882.219100",
        "parent_user_id": "UBS7QANF3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Pq1C",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes os.walk() is a good way to do it.\n\nSomething like this would probably do the job\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "def get_markets(data_dir):\n    markets = []\n    for dir_, _, files in os.walk(data_dir):\n        for file_name in files:\n            rel_dir = os.path.relpath(dir_, data_dir)\n            rel_file = os.path.join(rel_dir, file_name)\n            markets.append(rel_file)\n    return markets"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01SCPDTV5J",
        "type": "message",
        "ts": "1630865228.225300",
        "client_msg_id": "e201ac9b-02e9-4545-9156-7984ab1fc9b2",
        "text": "might want to add a condition or two if you have other files in there that won't work with the market filter",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "4db627cf9e3e",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-07\/2464604515811_4db627cf9e3ea5713217_72.jpg",
            "first_name": "Jack",
            "real_name": "Jack Rickards",
            "display_name": "Jack",
            "team": "T4G9NBD2M",
            "name": "jack.rickards",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630853882.219100",
        "parent_user_id": "UBS7QANF3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vyYZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "might want to add a condition or two if you have other files in there that won't work with the market filter"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013K4VNB6D",
        "type": "message",
        "ts": "1630866514.225500",
        "client_msg_id": "59a6c72b-8042-444a-9605-6632a8da9416",
        "text": "Nice one, thanks Jack",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf188478b89f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f188478b89f4a5e2c5af9eafa0433712.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "",
            "real_name": "Jeff Waters",
            "display_name": "Jeff Waters",
            "team": "T4G9NBD2M",
            "name": "watersjg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630853882.219100",
        "parent_user_id": "UBS7QANF3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Kcx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Nice one, thanks Jack"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U01SCPDTV5J"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1630868801.226400",
        "client_msg_id": "1901CEB0-532F-457F-AF8F-067C242C4B0E",
        "text": "Yeah from memory you have to make an identical subscription but with the clk values ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630850913.204000",
        "parent_user_id": "UUE6E1LA1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tnTt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah from memory you have to make an identical subscription but with the clk values "
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UUE6E1LA1"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U013K4VNB6D",
        "type": "message",
        "ts": "1630877715.230100",
        "edited": {
            "user": "U013K4VNB6D",
            "ts": "1630878260.000000"
        },
        "client_msg_id": "db459291-3fa1-4d20-87c1-ae60d7951c26",
        "text": "I've tried to add filters to only include British races and win races (based on filters used in the the example code at <https:\/\/github.com\/liampauling\/flumine>):\n\n```strategy = TestStrategy(\n    market_filter={\"markets\": marketsToProcess},\n    country_codes=[\"GB\"],\n    market_types=[\"WIN\"],\n    max_order_exposure=1000,\n    max_selection_exposure=105,\n)```\nHowever, I got an error message:\n\n*TypeError: __init__() got an unexpected keyword argument 'country_codes'*\n\nPresumably, that was because I wasn't using market_filter=streaming_market_filter, as in the example (as I was using historical data rather than live data).\n\nIs there any way of filtering out particular types of races when using historical data, other than putting something like\n```if market.country_code != \"GB\":\n    continue```\nin the process_market_book method?\n\nThanks\n\nJeff",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf188478b89f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f188478b89f4a5e2c5af9eafa0433712.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "",
            "real_name": "Jeff Waters",
            "display_name": "Jeff Waters",
            "team": "T4G9NBD2M",
            "name": "watersjg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630877715.230100",
        "reply_count": 4,
        "reply_users_count": 3,
        "latest_reply": "1631105417.395100",
        "reply_users": [
            "U010GM77S4W",
            "U4H19D1D2",
            "U013K4VNB6D"
        ],
        "replies": [
            {
                "user": "U010GM77S4W",
                "ts": "1630903248.230500"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1630903996.232100"
            },
            {
                "user": "U013K4VNB6D",
                "ts": "1630910008.232300"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1631105417.395100"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1631105417.395100",
        "attachments": [
            {
                "fallback": "liampauling\/flumine",
                "text": "flūmine - Betfair trading framework",
                "title": "liampauling\/flumine",
                "id": 1,
                "color": "24292f",
                "fields": [
                    {
                        "title": "Stars",
                        "value": "61",
                        "short": true
                    },
                    {
                        "title": "Language",
                        "value": "Python",
                        "short": true
                    }
                ],
                "bot_id": "B021ZJYSBMW",
                "app_unfurl_url": "https:\/\/github.com\/liampauling\/flumine",
                "is_app_unfurl": true,
                "app_id": "A01BP7R4KNY"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "z4a",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've tried to add filters to only include British races and win races (based on filters used in the the example code at "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/liampauling\/flumine"
                            },
                            {
                                "type": "text",
                                "text": "):\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "strategy = TestStrategy(\n    market_filter={\"markets\": marketsToProcess},\n    country_codes=[\"GB\"],\n    market_types=[\"WIN\"],\n    max_order_exposure=1000,\n    max_selection_exposure=105,\n)"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "However, I got an error message:\n\n"
                            },
                            {
                                "type": "text",
                                "text": "TypeError: __init__() got an unexpected keyword argument 'country_codes'",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\nPresumably, that was because I wasn't using market_filter=streaming_market_filter, as in the example (as I was using historical data rather than live data).\n\nIs there any way of filtering out particular types of races when using historical data, other than putting something like\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "if market.country_code != \"GB\":\n    continue"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "in the process_market_book method?\n\nThanks\n\nJeff"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U010GM77S4W",
        "type": "message",
        "ts": "1630903248.230500",
        "edited": {
            "user": "U010GM77S4W",
            "ts": "1630903834.000000"
        },
        "client_msg_id": "1fb5d314-4fdb-4607-a6c1-c59c39a5c22a",
        "text": "You have to create a market_filter\n```marketsToProcess = betfairlightweight.filters.streaming_market_filter(\n           event_type_ids=[\"4339\"],\n           country_codes=[\"GB\"],\n           market_types=[\"WIN\"]\n)```\nand then use that in your strategy such as\n\n```strategy = TestStrategy(\n    market_filter=marketsToProcess,\n    max_order_exposure=1000,\n    max_selection_exposure=105,\n)```",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "66cae8f5399c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-03-20\/1004508356769_66cae8f5399cf91a07ae_72.jpg",
            "first_name": "",
            "real_name": "mandelbot",
            "display_name": "mandelbot",
            "team": "T4G9NBD2M",
            "name": "demhadbale",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630877715.230100",
        "parent_user_id": "U013K4VNB6D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jQXC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You have to create a market_filter\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "marketsToProcess = betfairlightweight.filters.streaming_market_filter(\n           event_type_ids=[\"4339\"],\n           country_codes=[\"GB\"],\n           market_types=[\"WIN\"]\n)"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "and then use that in your strategy such as\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "strategy = TestStrategy(\n    market_filter=marketsToProcess,\n    max_order_exposure=1000,\n    max_selection_exposure=105,\n)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U013K4VNB6D"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1630903996.232100",
        "client_msg_id": "39460464-E0EF-4A7D-A0E7-59981E1DE9F7",
        "text": "Not currently, create a GitHub issue and I can look to add it ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630877715.230100",
        "parent_user_id": "U013K4VNB6D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5DE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not currently, create a GitHub issue and I can look to add it "
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U013K4VNB6D"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U013K4VNB6D",
        "type": "message",
        "ts": "1630910008.232300",
        "client_msg_id": "3c1fdf9d-032a-48e5-a689-ab6605cd6a9e",
        "text": "Thanks guys",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf188478b89f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f188478b89f4a5e2c5af9eafa0433712.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "",
            "real_name": "Jeff Waters",
            "display_name": "Jeff Waters",
            "team": "T4G9NBD2M",
            "name": "watersjg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630877715.230100",
        "parent_user_id": "U013K4VNB6D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oJ6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks guys"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0154JA98TH",
        "type": "message",
        "ts": "1630911223.233600",
        "client_msg_id": "fe4f5d8a-95ab-4dda-af56-ca8d676c56e6",
        "text": "Hey everyone, before using flumine in an older strategy i used to send a pandas dataframe of orders placed along with the ladder information at the time the bet was placed to a database api for cataloging. I would quite like to do this again specifically in a given flumine strategy iteration when a market order is placed make a note of the runner info (available to back\/lay etc) for that given market_book and then send it back to my database api every 30 seconds or so. I was wondering the best way to go about this without using messy global variables. After reading up in the flumine docs my current plan is to store a pandas df in the market.context and access it in a background worker, then loop through \"for market in flumine.markets:\" appending each of the dfs to get all the orders and runner information in one large frame before sending it off to the db. Not had much experience with utilising the market[context] to store information between iterations so wondering if this sound like a plausible way of using it or is there a better way of going about storing odds at time of placing before sending this info off to an external api? Thanks",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g04d857ee3ad",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/04d857ee3ad168a8451932c84c7d0d6d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0007-72.png",
            "first_name": "Jonathan",
            "real_name": "Jonathan Wadsworth",
            "display_name": "Jono",
            "team": "T4G9NBD2M",
            "name": "jonowads",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "S=0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hey everyone, before using flumine in an older strategy i used to send a pandas dataframe of orders placed along with the ladder information at the time the bet was placed to a database api for cataloging. I would quite like to do this again specifically in a given flumine strategy iteration when a market order is placed make a note of the runner info (available to back\/lay etc) for that given market_book and then send it back to my database api every 30 seconds or so. I was wondering the best way to go about this without using messy global variables. After reading up in the flumine docs my current plan is to store a pandas df in the market.context and access it in a background worker, then loop through \"for market in flumine.markets:\" appending each of the dfs to get all the orders and runner information in one large frame before sending it off to the db. Not had much experience with utilising the market[context] to store information between iterations so wondering if this sound like a plausible way of using it or is there a better way of going about storing odds at time of placing before sending this info off to an external api? Thanks"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]