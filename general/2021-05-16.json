[
    {
        "user": "U01EZ613ZCZ",
        "type": "message",
        "ts": "1621161822.259900",
        "client_msg_id": "234a69b9-59bf-450c-8cd8-350e74582738",
        "text": "Forgive me if I'm slow on the uptake, but I've just logged into Matchbook for the first time in a long time and the advertised liquidity looks fishy. £44k matched on the 1340 at Naas. Compared to £5k on BF and £7k on Smarkets.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gee1fd669100",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ee1fd6691003d1a11867dc2baf04174d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "Graham",
            "display_name": "Graham",
            "team": "T4G9NBD2M",
            "name": "sharkey88",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "k6+U",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Forgive me if I'm slow on the uptake, but I've just logged into Matchbook for the first time in a long time and the advertised liquidity looks fishy. £44k matched on the 1340 at Naas. Compared to £5k on BF and £7k on Smarkets."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1621161941.260100",
        "client_msg_id": "8CA61D89-03BB-455E-B16F-DE14F1893E8B",
        "text": "Bunch of crooks",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rL0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Bunch of crooks"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UUE6E1LA1"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U01EZ613ZCZ",
        "type": "message",
        "ts": "1621162006.260500",
        "client_msg_id": "415b0056-6cd7-468b-acbc-f212b4481ff0",
        "text": "indeed, hence my _\"logged into Matchbook for the first time in a long time\"_",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gee1fd669100",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ee1fd6691003d1a11867dc2baf04174d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "Graham",
            "display_name": "Graham",
            "team": "T4G9NBD2M",
            "name": "sharkey88",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Kj+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "indeed, hence my "
                            },
                            {
                                "type": "text",
                                "text": "\"logged into Matchbook for the first time in a long time\"",
                                "style": {
                                    "italic": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01EZ613ZCZ",
        "type": "message",
        "ts": "1621162028.261000",
        "client_msg_id": "e4a49c47-cc8c-4f72-a98e-41a5336947d0",
        "text": "surprised it took Benham so long to step away from it",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gee1fd669100",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ee1fd6691003d1a11867dc2baf04174d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "Graham",
            "display_name": "Graham",
            "team": "T4G9NBD2M",
            "name": "sharkey88",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "x4e",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "surprised it took Benham so long to step away from it"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01EZ613ZCZ",
        "type": "message",
        "ts": "1621162093.262000",
        "client_msg_id": "3a0f57d0-89ae-4837-a3d4-257b6a6a7ee4",
        "text": "mind you, not sure there's much wiggle room in terms of legality where any of the exchanges are concerned. Origin of liquidity for BF on Cricket, for example, is dubious at best.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gee1fd669100",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ee1fd6691003d1a11867dc2baf04174d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "Graham",
            "display_name": "Graham",
            "team": "T4G9NBD2M",
            "name": "sharkey88",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "STug",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "mind you, not sure there's much wiggle room in terms of legality where any of the exchanges are concerned. Origin of liquidity for BF on Cricket, for example, is dubious at best."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01EZ613ZCZ",
        "type": "message",
        "ts": "1621162134.262600",
        "client_msg_id": "e05ae5ba-1598-495b-b696-cc6f83929c49",
        "text": "but that £44k is eyebrow raising to say the least.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gee1fd669100",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ee1fd6691003d1a11867dc2baf04174d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "Graham",
            "display_name": "Graham",
            "team": "T4G9NBD2M",
            "name": "sharkey88",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gyYi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "but that £44k is eyebrow raising to say the least."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1621162388.263100",
        "client_msg_id": "9CF53AC5-E35F-49AE-8019-059BE49071A0",
        "text": "Yeah I would assume it’s not real given their track record",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "62a0=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah I would assume it’s not real given their track record"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U016535QCJ2",
        "type": "message",
        "ts": "1621163191.263500",
        "client_msg_id": "c8ed6f77-e998-42e0-afee-c7fe3a38fa5c",
        "text": "They measure matched differently",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "048f61bdc189",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-01\/1216267094995_048f61bdc189acecaafc_72.jpg",
            "first_name": "Misha",
            "real_name": "Misha Charrett",
            "display_name": "Misha",
            "team": "T4G9NBD2M",
            "name": "misha",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lEHO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "They measure matched differently"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U016535QCJ2",
        "type": "message",
        "ts": "1621163211.264000",
        "client_msg_id": "95e03a33-7767-4807-aed1-46229acbb957",
        "text": "It's measured as liability (if I remember correctly)",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "048f61bdc189",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-01\/1216267094995_048f61bdc189acecaafc_72.jpg",
            "first_name": "Misha",
            "real_name": "Misha Charrett",
            "display_name": "Misha",
            "team": "T4G9NBD2M",
            "name": "misha",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "83Y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's measured as liability (if I remember correctly)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "ULDAVFDRP",
        "type": "message",
        "ts": "1621163337.264400",
        "client_msg_id": "0ecfba32-67f5-4878-83bf-596305682352",
        "text": "Yes I think they do it the same way smarket does it",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g46fe1c1bf03",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b46fe1c1bf03e18d951e7032fb494283.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "",
            "real_name": "Oliver Varney",
            "display_name": "Oliver Varney",
            "team": "T4G9NBD2M",
            "name": "oliverashleyvarney",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kGp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes I think they do it the same way smarket does it"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "ULDAVFDRP",
        "type": "message",
        "ts": "1621163440.264700",
        "client_msg_id": "83496e20-881e-4047-a315-85739c6b35ef",
        "text": "wonder how they are doing after that ban they got",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g46fe1c1bf03",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b46fe1c1bf03e18d951e7032fb494283.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "",
            "real_name": "Oliver Varney",
            "display_name": "Oliver Varney",
            "team": "T4G9NBD2M",
            "name": "oliverashleyvarney",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hze",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "wonder how they are doing after that ban they got"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "channel_join",
        "user": "U022E5ADCEM",
        "text": "<@U022E5ADCEM> has joined the channel",
        "type": "message",
        "ts": "1621168125.265000"
    },
    {
        "user": "U016TGY3676",
        "type": "message",
        "ts": "1621173825.266100",
        "client_msg_id": "d7fa3bba-0e50-47f1-a9e8-e57de7a2745d",
        "text": "Can anyone comment on how Flumine paper trading compares to backtesting? I'm just wondering whether to go from backtesting straight to live or run paper trading for a short while first?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g6a681220e11",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6a681220e11c1a2ed3685375d658dadb.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "",
            "real_name": "birchy",
            "display_name": "birchy",
            "team": "T4G9NBD2M",
            "name": "birchy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tXz0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Can anyone comment on how Flumine paper trading compares to backtesting? I'm just wondering whether to go from backtesting straight to live or run paper trading for a short while first?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1621175490.267200",
        "client_msg_id": "735BCCBE-38FF-447A-9BBF-C3A55826B977",
        "text": "The same as it uses the same simulation logic, only difference will be the use of live data, can be a good final integration test ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "N\/7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The same as it uses the same simulation logic, only difference will be the use of live data, can be a good final integration test "
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U016TGY3676"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U9JHLMZB4",
        "type": "message",
        "ts": "1621179302.270500",
        "client_msg_id": "e27e11c0-b8df-4189-81b3-0cea0330a356",
        "text": "+1 for final integration. I find it useful as the markets arrive as they will for live trading, i.e. in a giant heap rather than neatly ordered in sequence. This can be especially significant when acting on signals from another market as backtesting's event_processing groups related markets nicely, but live data doesn't always exhibit the same helpful structure, especially when you can't rely on event_id as your group index.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g951ddcb43e7",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3951ddcb43e788a387d6daf330dad5ca.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0018-72.png",
            "first_name": "",
            "real_name": "Peter Coles",
            "display_name": "Peter",
            "team": "T4G9NBD2M",
            "name": "peter",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zw=R",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "+1 for final integration. I find it useful as the markets arrive as they will for live trading, i.e. in a giant heap rather than neatly ordered in sequence. This can be especially significant when acting on signals from another market as backtesting's event_processing groups related markets nicely, but live data doesn't always exhibit the same helpful structure, especially when you can't rely on event_id as your group index."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U016TGY3676",
                    "U4H19D1D2"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U01J98RDHRN",
        "type": "message",
        "ts": "1621213835.272400",
        "client_msg_id": "abba1415-e41d-4154-b67c-996ed5bedc73",
        "text": "kinda embarassing question to ask since I've been a \"data\" person for so long, but when you're comparing different models against each other to predict some sort of numeric value, do people look at other stuff other than the correlation between the predicted number and the actual number?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "8b8d5a5cf363",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-05-13\/2062433979347_8b8d5a5cf363b0cb041b_72.jpg",
            "first_name": "",
            "real_name": "Sam Asin",
            "display_name": "Sam Asin",
            "team": "T4G9NBD2M",
            "name": "asin.sam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Xf+gm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "kinda embarassing question to ask since I've been a \"data\" person for so long, but when you're comparing different models against each other to predict some sort of numeric value, do people look at other stuff other than the correlation between the predicted number and the actual number?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01J98RDHRN",
        "type": "message",
        "ts": "1621213900.273900",
        "client_msg_id": "048022b4-ff0f-49d6-b7ef-aa7340d92940",
        "text": "i.e. if i have two different models that try to predict the number of crosses a footballer will hit in a game, and then they predict stuff out of sample, and i can take mod1_prediction mod_2prediction and the actual crosses, anything fun I should do other than correlate them to the crosses?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "8b8d5a5cf363",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-05-13\/2062433979347_8b8d5a5cf363b0cb041b_72.jpg",
            "first_name": "",
            "real_name": "Sam Asin",
            "display_name": "Sam Asin",
            "team": "T4G9NBD2M",
            "name": "asin.sam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fmq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i.e. if i have two different models that try to predict the number of crosses a footballer will hit in a game, and then they predict stuff out of sample, and i can take mod1_prediction mod_2prediction and the actual crosses, anything fun I should do other than correlate them to the crosses?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01J98RDHRN",
        "type": "message",
        "ts": "1621213968.274900",
        "client_msg_id": "1e0b2631-7b02-42f5-a057-25b2e072ddf0",
        "text": "Right now i'm having fun with some models where I'm gonna do my best to linear regression and see how good I can predict various stats, and then see about applying the ML stuff I never messed with. Curious what the \"criteria\" should be, if that makes sense.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "8b8d5a5cf363",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-05-13\/2062433979347_8b8d5a5cf363b0cb041b_72.jpg",
            "first_name": "",
            "real_name": "Sam Asin",
            "display_name": "Sam Asin",
            "team": "T4G9NBD2M",
            "name": "asin.sam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2KMQv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Right now i'm having fun with some models where I'm gonna do my best to linear regression and see how good I can predict various stats, and then see about applying the ML stuff I never messed with. Curious what the \"criteria\" should be, if that makes sense."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U012PA3M7ST",
        "type": "message",
        "ts": "1621227945.278300",
        "client_msg_id": "b99ad566-6575-425b-8d4f-799bb6a7d3ca",
        "text": "been sitting here for hours and can't for the life of me figure out 1. how to lay at the back price (or x ticks above it). I tried reading into the 'available_to_back' results obtained for each runner but have failed. The utils.py 'get_nereast_price' function is above my pay grade. Someone got a manual? :slightly_smiling_face: Might have to pay someone at this rate. Can anyone tell me how I lay on the back side as a start please : e.g. side=\"LAY\", order_type=LimitOrder(price=20, size=5) thanks",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "ge48e1a579ab",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e48e1a579ab6ab79ee350f16ae8f8aab.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0012-72.png",
            "first_name": "",
            "real_name": "Greg",
            "display_name": "Greg",
            "team": "T4G9NBD2M",
            "name": "madalainoz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Mbv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "been sitting here for hours and can't for the life of me figure out 1. how to lay at the back price (or x ticks above it). I tried reading into the 'available_to_back' results obtained for each runner but have failed. The utils.py 'get_nereast_price' function is above my pay grade. Someone got a manual? "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " Might have to pay someone at this rate. Can anyone tell me how I lay on the back side as a start please : e.g. side=\"LAY\", order_type=LimitOrder(price=20, size=5) thanks"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "ULDAVFDRP",
        "type": "message",
        "ts": "1621228612.281700",
        "client_msg_id": "5f095830-2b13-4755-acf5-5eb1fec516b4",
        "text": "<@U012PA3M7ST> it may be worth firing up betangel (if you have it ) in ladder mode so you can visualise what the data from bflw \/ flumine provides. The available_to_back and available_to_lay should be sorted so index 0 will be the first price available to back at or lay at. get_nearest_price may look complicated in terms of implementation to you but the result should be fairly simple and should act as expected. It may be worth wring a few test case and see if your results match your expectation from your input.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g46fe1c1bf03",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b46fe1c1bf03e18d951e7032fb494283.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "",
            "real_name": "Oliver Varney",
            "display_name": "Oliver Varney",
            "team": "T4G9NBD2M",
            "name": "oliverashleyvarney",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1621228612.281700",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1621229282.290600",
        "reply_users": [
            "U012PA3M7ST"
        ],
        "replies": [
            {
                "user": "U012PA3M7ST",
                "ts": "1621229282.290600"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6N5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U012PA3M7ST"
                            },
                            {
                                "type": "text",
                                "text": " it may be worth firing up betangel (if you have it ) in ladder mode so you can visualise what the data from bflw \/ flumine provides. The available_to_back and available_to_lay should be sorted so index 0 will be the first price available to back at or lay at. get_nearest_price may look complicated in terms of implementation to you but the result should be fairly simple and should act as expected. It may be worth wring a few test case and see if your results match your expectation from your input."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U012PA3M7ST",
        "type": "message",
        "ts": "1621229282.290600",
        "edited": {
            "user": "U012PA3M7ST",
            "ts": "1621229343.000000"
        },
        "client_msg_id": "56380a90-ee0b-4f93-94dd-0deeee6eb4b3",
        "text": "Thanks <@ULDAVFDRP> . I have done BA automation for years (bots are running for weeks as we speak) and can see what is delivered in the amount_available_to_back in terms of price and size(when I print the output) but for some reason I can't extract it so instead of price=20 I should have something like price=ex.available_to_back[0].price (in my head) but the ex has an error so I have something wrong somewhere. learning python as one goes is very hard for the 50 yr old brain",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "ge48e1a579ab",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e48e1a579ab6ab79ee350f16ae8f8aab.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0012-72.png",
            "first_name": "",
            "real_name": "Greg",
            "display_name": "Greg",
            "team": "T4G9NBD2M",
            "name": "madalainoz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1621228612.281700",
        "parent_user_id": "ULDAVFDRP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vrpu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks "
                            },
                            {
                                "type": "user",
                                "user_id": "ULDAVFDRP"
                            },
                            {
                                "type": "text",
                                "text": " . I have done BA automation for years (bots are running for weeks as we speak) and can see what is delivered in the amount_available_to_back in terms of price and size(when I print the output) but for some reason I can't extract it so instead of price=20 I should have something like price=ex.available_to_back[0].price (in my head) but the ex has an error so I have something wrong somewhere. learning python as one goes is very hard for the 50 yr old brain"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01DVUAE2G1",
        "type": "message",
        "ts": "1621229380.292200",
        "edited": {
            "user": "U01DVUAE2G1",
            "ts": "1621229603.000000"
        },
        "client_msg_id": "97e986cf-f1fd-4b27-b3ae-ea7fcee4c8f3",
        "text": "<@U012PA3M7ST>\nplacing a lay order (copied from flumine example):\n```trade = Trade(\n                    market_id=market_book.market_id,\n                    selection_id=runner.selection_id,\n                    handicap=runner.handicap,\n                    strategy=self,\n                )\n                order = trade.create_order(\n                    side=\"LAY\", order_type=LimitOrder(price=1.01, size=2.00)\n                )\n                market.place_order(order)```\nHere price is just set to 1.01 as an example. If you want to place at the current available to back price, you can retrieve it beforehand and fill it in.\n```best_atb = runner_book.ex.available_to_back[0]['price']```\nand now you could put this in as `price = best_atb` .\n`runner_book.ex.available_to_back`  is a list, with the first element being the best price and then going through the ladder of all available prices (or limited by how many you are requesting). So if you wanted to lay at the second best back_price, its  `runner_book.ex.available_to_back[1]['price']`  etc. This is not necesarrily the next best tick, as theoretically the next best available back price could jump over one tick as nobody placed any bet there, but that is no problem. The `get_nearest_price`  function does exacltly what it says, but may not actually be the perfect fit for what you are looking for. Instead you should maybe check `price_ticks_away` , which is also in utils.py",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gd87aca58eae",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/d87aca58eaeabd0a953b4bc4204bbbaf.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Aaron Smith",
            "display_name": "Aaron Smith",
            "team": "T4G9NBD2M",
            "name": "smiffyaaron",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "94OA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U012PA3M7ST"
                            },
                            {
                                "type": "text",
                                "text": "\nplacing a lay order (copied from flumine example):\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "trade = Trade(\n                    market_id=market_book.market_id,\n                    selection_id=runner.selection_id,\n                    handicap=runner.handicap,\n                    strategy=self,\n                )\n                order = trade.create_order(\n                    side=\"LAY\", order_type=LimitOrder(price=1.01, size=2.00)\n                )\n                market.place_order(order)"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nHere price is just set to 1.01 as an example. If you want to place at the current available to back price, you can retrieve it beforehand and fill it in.\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "best_atb = runner_book.ex.available_to_back[0]['price']"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "and now you could put this in as "
                            },
                            {
                                "type": "text",
                                "text": "price = best_atb",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " .\n"
                            },
                            {
                                "type": "text",
                                "text": "runner_book.ex.available_to_back",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "  is a list, with the first element being the best price and then going through the ladder of all available prices (or limited by how many you are requesting). So if you wanted to lay at the second best back_price, its "
                            },
                            {
                                "type": "text",
                                "text": " runner_book.ex.available_to_back[1]['price']",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "  etc. This is not necesarrily the next best tick, as theoretically the next best available back price could jump over one tick as nobody placed any bet there, but that is no problem. The "
                            },
                            {
                                "type": "text",
                                "text": "get_nearest_price",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "  function does exacltly what it says, but may not actually be the perfect fit for what you are looking for. Instead you should maybe check "
                            },
                            {
                                "type": "text",
                                "text": "price_ticks_away",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " , which is also in utils.py"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U012PA3M7ST",
                    "U4H19D1D2"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U012PA3M7ST",
        "type": "message",
        "ts": "1621229525.292900",
        "client_msg_id": "9bb94d4a-e362-4230-83b7-3576dba9cb85",
        "text": "thank you Aaron.Looks like the syntax got me. I'll give that a whirl.Much appreciated",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "ge48e1a579ab",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e48e1a579ab6ab79ee350f16ae8f8aab.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0012-72.png",
            "first_name": "",
            "real_name": "Greg",
            "display_name": "Greg",
            "team": "T4G9NBD2M",
            "name": "madalainoz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZJlso",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "thank you Aaron.Looks like the syntax got me. I'll give that a whirl.Much appreciated"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1621231421.294300",
        "client_msg_id": "381AAAA9-37F7-436E-9187-4DC39141FCE6",
        "text": "Note that it’s .price in bflw and [“price”] in flumine as we patch the resource so things are faster ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2=0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Note that it’s .price in bflw and [“price”] in flumine as we patch the resource so things are faster "
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U012PA3M7ST"
                ],
                "count": 1
            }
        ]
    }
]