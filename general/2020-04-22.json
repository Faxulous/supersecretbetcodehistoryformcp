[
    {
        "subtype": "channel_join",
        "user": "U0129JA56HK",
        "text": "<@U0129JA56HK> has joined the channel",
        "type": "message",
        "ts": "1587565430.440800"
    },
    {
        "subtype": "channel_join",
        "user": "U012B9ASW1G",
        "text": "<@U012B9ASW1G> has joined the channel",
        "type": "message",
        "ts": "1587571059.441100"
    },
    {
        "user": "UKFF3N7K9",
        "type": "message",
        "ts": "1587582442.442100",
        "client_msg_id": "12a14d73-e99a-43f8-8e91-fbe9bf653f3f",
        "text": "Has anyone ever got 'going' from the race card? It seems to be null permanently :confused:",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gc6f16eb1052",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8c6f16eb1052bb1f12a451a9e89e72f7.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0006-72.png",
            "first_name": "Christopher",
            "real_name": "Christopher Collins",
            "display_name": "Chris",
            "team": "T4G9NBD2M",
            "name": "qemtek",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OutT2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Has anyone ever got 'going' from the race card? It seems to be null permanently "
                            },
                            {
                                "type": "emoji",
                                "name": "confused",
                                "unicode": "1f615"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1587582486.442400",
        "client_msg_id": "AFE0CF74-ECC5-49CC-BADF-59F7B6B474A8",
        "text": "AUS?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cwc23",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "AUS?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKFF3N7K9",
        "type": "message",
        "ts": "1587582993.442600",
        "client_msg_id": "417995bb-e1a7-4af5-aedd-bf28bf1d6a5f",
        "text": "US",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gc6f16eb1052",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8c6f16eb1052bb1f12a451a9e89e72f7.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0006-72.png",
            "first_name": "Christopher",
            "real_name": "Christopher Collins",
            "display_name": "Chris",
            "team": "T4G9NBD2M",
            "name": "qemtek",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2f6ff",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "US"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKFF3N7K9",
        "type": "message",
        "ts": "1587583001.442800",
        "client_msg_id": "b43023c6-1dcc-4dab-a0f8-5dd3020cd29a",
        "text": "ah maybe its country related",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gc6f16eb1052",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8c6f16eb1052bb1f12a451a9e89e72f7.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0006-72.png",
            "first_name": "Christopher",
            "real_name": "Christopher Collins",
            "display_name": "Chris",
            "team": "T4G9NBD2M",
            "name": "qemtek",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zk8=j",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "ah maybe its country related"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKFF3N7K9",
        "type": "message",
        "ts": "1587583028.443300",
        "client_msg_id": "219c9633-1d6d-46e2-997a-10ef28c6081a",
        "text": "I'm testing my model on US since GB\/IRE isnt available",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gc6f16eb1052",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8c6f16eb1052bb1f12a451a9e89e72f7.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0006-72.png",
            "first_name": "Christopher",
            "real_name": "Christopher Collins",
            "display_name": "Chris",
            "team": "T4G9NBD2M",
            "name": "qemtek",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PYJ\/M",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm testing my model on US since GB\/IRE isnt available"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1587584005.443600",
        "client_msg_id": "58722891-DCA0-45E6-B58B-E7ED328378EC",
        "text": "Yeah I think that’s the case ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xVuka",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah I think that’s the case "
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UKFF3N7K9"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U012XEYK2FJ",
        "type": "message",
        "ts": "1587592856.445900",
        "client_msg_id": "c85d4e85-3648-4a0a-ba10-53c4bf6829d8",
        "text": "I have just started working with the historical data from Betfair and want to extract the market books at a given time before the event. Does anyone know what functions I should be using for this?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g07b20e9bd82",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/07b20e9bd82baa247fa3716f05bc898c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "user34",
            "display_name": "user34",
            "team": "T4G9NBD2M",
            "name": "alex.bird",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "i0A",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have just started working with the historical data from Betfair and want to extract the market books at a given time before the event. Does anyone know what functions I should be using for this?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "channel_join",
        "user": "U012B61009Z",
        "text": "<@U012B61009Z> has joined the channel",
        "type": "message",
        "ts": "1587607261.446000"
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1587624256.446400",
        "text": "Have you seen this example? <https:\/\/github.com\/liampauling\/betfair\/blob\/master\/examples\/examplestreaminghistorical.py>",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "fallback": "[April 22nd, 2020 11:00 PM] alex.bird: I have just started working with the historical data from Betfair and want to extract the market books at a given time before the event. Does anyone know what functions I should be using for this?",
                "ts": "1587592856.445900",
                "author_id": "U012XEYK2FJ",
                "author_subname": "user34",
                "channel_id": "C4HL6EZTQ",
                "is_msg_unfurl": true,
                "text": "I have just started working with the historical data from Betfair and want to extract the market books at a given time before the event. Does anyone know what functions I should be using for this?",
                "author_name": "user34",
                "author_link": "https:\/\/betfairlightweight.slack.com\/team\/U012XEYK2FJ",
                "author_icon": "https:\/\/secure.gravatar.com\/avatar\/07b20e9bd82baa247fa3716f05bc898c.jpg?s=48&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-48.png",
                "mrkdwn_in": [
                    "text"
                ],
                "color": "D0D0D0",
                "from_url": "https:\/\/betfairlightweight.slack.com\/archives\/C4HL6EZTQ\/p1587592856445900",
                "is_share": true,
                "id": 1,
                "footer": "Slack conversation"
            },
            {
                "fallback": "[liampauling\/betfair] examples\/examplestreaminghistorical.py",
                "text": "```\nimport logging\n\nimport betfairlightweight\nfrom betfairlightweight import StreamListener\nfrom betfairlightweight.streaming.stream import MarketStream\n\n\"\"\"\nData needs to be downloaded from:\n    <https:\/\/historicdata.betfair.com>\n\"\"\"\n\n# setup logging\nlogging.basicConfig(level=<http:\/\/logging.INFO|logging.INFO>)\n\n# create trading instance (don't need username\/password)\ntrading = betfairlightweight.APIClient(\"username\", \"password\")\n\n\nclass HistoricalStream(MarketStream):\n    # create custom listener and stream\n\n    def __init__(self, listener):\n        super(HistoricalStream, self).__init__(listener)\n        with open(\"output.txt\", \"w\") as output:\n            output.write(\"Time,MarketId,Status,Inplay,SelectionId,LastPriceTraded\\n\")\n\n    def on_process(self, market_books):\n        with open(\"output.txt\", \"a\") as output:\n            for market_book in market_books:\n                for runner in market_book.runners:\n\n                    # how to get runner details from the market definition\n                    market_def = market_book.market_definition\n                    runners_dict = {\n                        (runner.selection_id, runner.handicap): runner\n                        for runner in market_def.runners\n                    }\n                    runner_def = runners_dict.get(\n                        (runner.selection_id, runner.handicap)\n                    )\n\n                    output.write(\n                        \"%s,%s,%s,%s,%s,%s\\n\"\n                        % (\n                            market_book.publish_time,\n                            market_book.market_id,\n                            market_book.status,\n                            market_book.inplay,\n                            runner.selection_id,\n                            runner.last_price_traded or \"\",\n                        )\n                    )\n\n\nclass HistoricalListener(StreamListener):\n    def _add_stream(self, unique_id, stream_type):\n        if stream_type == \"marketSubscription\":\n            return HistoricalStream(self)\n\n\n# create listener\nlistener = HistoricalListener(max_latency=None)\n\n# create historical stream, update directory to file location\nstream = trading.streaming.create_historical_stream(\n    directory=\"\/Users\/liampauling\/Downloads\/Sites 3\/xdw\/api\/c0a022d4-3460-41f1-af12-a0b68b136898\/BASIC-1.132153978\",\n    listener=listener,\n)\n\n# start stream\nstream.start()\n\n```",
                "title": "examples\/examplestreaminghistorical.py",
                "footer": "<https:\/\/github.com\/liampauling\/betfair|liampauling\/betfair>",
                "id": 2,
                "title_link": "https:\/\/github.com\/liampauling\/betfair\/blob\/master\/examples\/examplestreaminghistorical.py",
                "footer_icon": "https:\/\/github.githubassets.com\/favicon.ico",
                "color": "24292f",
                "mrkdwn_in": [
                    "text"
                ],
                "bot_id": "B01144Z0734",
                "app_unfurl_url": "https:\/\/github.com\/liampauling\/betfair\/blob\/master\/examples\/examplestreaminghistorical.py",
                "is_app_unfurl": true
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "By\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Have you seen this example? "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/liampauling\/betfair\/blob\/master\/examples\/examplestreaminghistorical.py"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]