[
    {
        "user": "UT6593JBH",
        "type": "message",
        "ts": "1629550441.317500",
        "client_msg_id": "fe4582df-c184-48e2-b136-62fc60b45bd7",
        "text": "I'm building a df to process my exposure to a selection for markets with more than 1 winner. I'm pulling the data from the blotter_live_orders (see below). I’ve put it under the process_market function.\n \norders = pd.DataFrame([{**{fn: getattr(f, fn) for fn in fields},**{'current_order': f},**{'order_price': f.responses.current_order.price_size.price},**{'order_status': f.status._name_},**{'order_persistence_type': f.responses.current_order.persistence_type}} for f in market.blotter._live_orders.copy()])\n \nFor some reason when I pull this data I’m getting some wrong order information where I know the order has been matched (and completed) – because I can see on my betfair account that whole amount was matched– but the blotter has it recorded as “executable” with 0 sized_matched. This is what the status log looks like:\n[OrderStatus.PENDING, OrderStatus.EXECUTABLE]\n\nWeird. Anyone had something similar or got any ideas what I may have screwed up?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gcc4ebad3a58",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/cc4ebad3a580698a264d16101dc48253.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Steve",
            "display_name": "Steve",
            "team": "T4G9NBD2M",
            "name": "flegg.stephen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1629550441.317500",
        "reply_count": 30,
        "reply_users_count": 2,
        "latest_reply": "1629880242.373100",
        "reply_users": [
            "U4H19D1D2",
            "UT6593JBH"
        ],
        "replies": [
            {
                "user": "U4H19D1D2",
                "ts": "1629704349.319300"
            },
            {
                "user": "UT6593JBH",
                "ts": "1629704970.319500"
            },
            {
                "user": "UT6593JBH",
                "ts": "1629705005.319700"
            },
            {
                "user": "UT6593JBH",
                "ts": "1629705103.319900"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1629705287.320100"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1629705292.320300"
            },
            {
                "user": "UT6593JBH",
                "ts": "1629707423.320500"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1629707818.320700"
            },
            {
                "user": "UT6593JBH",
                "ts": "1629708765.320900"
            },
            {
                "user": "UT6593JBH",
                "ts": "1629708813.321100"
            },
            {
                "user": "UT6593JBH",
                "ts": "1629708957.321300"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1629709099.321500"
            },
            {
                "user": "UT6593JBH",
                "ts": "1629709831.321900"
            },
            {
                "user": "UT6593JBH",
                "ts": "1629709945.322100"
            },
            {
                "user": "UT6593JBH",
                "ts": "1629710000.322300"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1629710082.322500"
            },
            {
                "user": "UT6593JBH",
                "ts": "1629710209.322700"
            },
            {
                "user": "UT6593JBH",
                "ts": "1629710304.322900"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1629710420.323100"
            },
            {
                "user": "UT6593JBH",
                "ts": "1629718237.324700"
            },
            {
                "user": "UT6593JBH",
                "ts": "1629718264.324900"
            },
            {
                "user": "UT6593JBH",
                "ts": "1629718382.325100"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1629719276.325300"
            },
            {
                "user": "UT6593JBH",
                "ts": "1629780176.333600"
            },
            {
                "user": "UT6593JBH",
                "ts": "1629780271.333800"
            },
            {
                "user": "UT6593JBH",
                "ts": "1629780946.334000"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1629786907.336700"
            },
            {
                "user": "UT6593JBH",
                "ts": "1629849081.370300"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1629880237.372900"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1629880242.373100"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1629880242.373100",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "I23G",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm building a df to process my exposure to a selection for markets with more than 1 winner. I'm pulling the data from the blotter_live_orders (see below). I’ve put it under the process_market function.\n \norders = pd.DataFrame([{**{fn: getattr(f, fn) for fn in fields},**{'current_order': f},**{'order_price': f.responses.current_order.price_size.price},**{'order_status': f.status._name_},**{'order_persistence_type': f.responses.current_order.persistence_type}} for f in market.blotter._live_orders.copy()])\n \nFor some reason when I pull this data I’m getting some wrong order information where I know the order has been matched (and completed) – because I can see on my betfair account that whole amount was matched– but the blotter has it recorded as “executable” with 0 sized_matched. This is what the status log looks like:\n[OrderStatus.PENDING, OrderStatus.EXECUTABLE]\n\nWeird. Anyone had something similar or got any ideas what I may have screwed up?"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]