[
    {
        "user": "U02RN7YDRQ9",
        "type": "message",
        "ts": "1736241322.740549",
        "client_msg_id": "61de604b-29dd-4885-b04a-4ba8e7db016b",
        "text": "<@U4H19D1D2> - seems like purge time - got message below when logged in - not sure how often you make your magic backup but seems like a good time soon !    *162K messages and files older than a year will be permanently deleted on Jan 28th*Upgrade to preserve your content and get 50% off your first three months. <https:\/\/betcode-org.slack.com\/checkout\/router?s=1&amp;p=std_m&amp;entry_point=data_deletion_celebratory_launch_modal|Upgrade to Pro>",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "ge46f1f8b708",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e46f1f8b708a630e3191de7b2c42b1d1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "edblock",
            "real_name": "edblock",
            "display_name": "foxwood",
            "team": "T4G9NBD2M",
            "name": "eanb",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1736241322.740549",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1736244231.439929",
        "reply_users": [
            "U4H19D1D2",
            "U02RN7YDRQ9"
        ],
        "replies": [
            {
                "user": "U4H19D1D2",
                "ts": "1736242044.540559"
            },
            {
                "user": "U02RN7YDRQ9",
                "ts": "1736244231.439929"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1736244231.439929",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Kcugu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U4H19D1D2"
                            },
                            {
                                "type": "text",
                                "text": " - seems like purge time - got message below when logged in - not sure how often you make your magic backup but seems like a good time soon !    "
                            },
                            {
                                "type": "text",
                                "text": "162K messages and files older than a year will be permanently deleted on Jan 28th",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "Upgrade to preserve your content and get 50% off your first three months. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/betcode-org.slack.com\/checkout\/router?s=1&p=std_m&entry_point=data_deletion_celebratory_launch_modal",
                                "text": "Upgrade to Pro"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1736242044.540559",
        "client_msg_id": "9ffb0fa6-1a92-4c4c-9e42-d6505c5569fc",
        "text": "I think it has always said this? I will make a backup before then just in case",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1736241322.740549",
        "parent_user_id": "U02RN7YDRQ9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "c4DDL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think it has always said this? I will make a backup before then just in case"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02RN7YDRQ9",
        "type": "message",
        "ts": "1736244231.439929",
        "client_msg_id": "a414b95f-d1cd-4f87-ab6b-aaf04d84d056",
        "text": "Not seen the message for a long time - maybe just ramping their ads for new year - or adblocker defeated !",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "ge46f1f8b708",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e46f1f8b708a630e3191de7b2c42b1d1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "edblock",
            "real_name": "edblock",
            "display_name": "foxwood",
            "team": "T4G9NBD2M",
            "name": "eanb",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1736241322.740549",
        "parent_user_id": "U02RN7YDRQ9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YEQVU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not seen the message for a long time - maybe just ramping their ads for new year - or adblocker defeated !"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U07SPFFN010",
        "type": "message",
        "ts": "1736247961.820679",
        "client_msg_id": "d335c052-a3df-474a-a277-08d300a5cd6a",
        "text": "I don't request them, but i'm writing a lib and want to support it",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "013148a74023",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-10-20\/7910027379108_013148a74023365902a3_72.png",
            "first_name": "Jhonny",
            "real_name": "Jhonny",
            "display_name": "Jhonny",
            "team": "T4G9NBD2M",
            "name": "olajeremy123",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1736177354.267329",
        "parent_user_id": "U07SPFFN010",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GuIZu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't request them, but i'm writing a lib and want to support it"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U016TGY3676",
        "type": "message",
        "ts": "1736256563.940559",
        "client_msg_id": "101c2fb8-097e-4610-aac6-8d4adb53fc90",
        "text": "Inspired by <@UBS7QANF3>'s thread, I thought I'd better try to calculate my Sharpe Ratio, which I've never done before. Can someone please confirm if this is correct? It's in a jupyter notebook where my dataframe is populated from flumine bet logs.\n\n\n\n`def calc_sharpe(df, period='D'):\n    # Create a copy of the dataframe\n    d = df.copy()`\n\n    `# Ensure datetime index\n    if not isinstance(d.index, pd.DatetimeIndex):\n        d.set_index('date_time_created', inplace=True)`\n\n    `# Calculate liability and ROI\n    d['liability'] = d['size_matched'] * (d['price_matched'] - 1)`\n\n    `# Filter for matched bets\n    df_matched = d[d['liability'] &gt; 0]`\n\n    `# Calculate period returns (weighted by liability)\n    period_profits = df_matched.groupby(pd.Grouper(freq=period))['profit'].sum()\n    period_liabilities = df_matched.groupby(pd.Grouper(freq=period))['liability'].sum()\n    period_returns = period_profits \/ period_liabilities`\n\n    `# Filter out null periods\n    period_returns = period_returns[period_returns.index.notnull()]`\n\n    `# Calculate metrics\n    avg_return = period_returns.mean()\n    volatility = period_returns.std()\n    sharpe_ratio = np.sqrt(len(period_returns)) * (avg_return \/ volatility) if volatility != 0 else 0`\n\n    `# Calculate summary statistics\n    total_bets = len(df_matched)\n    total_profit = round(df_matched['profit'].sum(), 2)\n    total_liability = round(df_matched['liability'].sum(), 2)\n    overall_roi = total_profit \/ total_liability if total_liability &gt; 0 else 0`\n\n    `return {\n        'sharpe_ratio': sharpe_ratio,\n        'average_return': avg_return,\n        'volatility': volatility,\n        'periods_analyzed': len(period_returns),\n        'total_matched_bets': total_bets,\n        'total_profit': total_profit,\n        'total_liability': total_liability,\n        'overall_roi': overall_roi\n    }`\n\n`sr = calc_sharpe(df, period='D')\nfor k, v in sr.items():\n    print(f'{k}: {v}')`\n",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g6a681220e11",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6a681220e11c1a2ed3685375d658dadb.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "",
            "real_name": "birchy",
            "display_name": "birchy",
            "team": "T4G9NBD2M",
            "name": "birchy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1736256563.940559",
        "reply_count": 19,
        "reply_users_count": 8,
        "latest_reply": "1736294919.677679",
        "reply_users": [
            "UQL0QDEKA",
            "U016TGY3676",
            "UBS7QANF3",
            "U02RN7YDRQ9",
            "U0128E7BEHW",
            "U05REBJ21EC",
            "U03FS7KM2NL",
            "US2RWCWKY"
        ],
        "replies": [
            {
                "user": "UQL0QDEKA",
                "ts": "1736257992.099049"
            },
            {
                "user": "U016TGY3676",
                "ts": "1736258266.921909"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1736258319.623039"
            },
            {
                "user": "U016TGY3676",
                "ts": "1736258980.634039"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1736259005.934319"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1736259035.184119"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1736259225.975879"
            },
            {
                "user": "U016TGY3676",
                "ts": "1736259437.346819"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1736259498.317329"
            },
            {
                "user": "U016TGY3676",
                "ts": "1736259641.447269"
            },
            {
                "user": "U02RN7YDRQ9",
                "ts": "1736271140.867469"
            },
            {
                "user": "U0128E7BEHW",
                "ts": "1736272678.630189"
            },
            {
                "user": "U016TGY3676",
                "ts": "1736273782.335819"
            },
            {
                "user": "U05REBJ21EC",
                "ts": "1736278341.013509"
            },
            {
                "user": "U05REBJ21EC",
                "ts": "1736278477.298429"
            },
            {
                "user": "U03FS7KM2NL",
                "ts": "1736278746.473619"
            },
            {
                "user": "U03FS7KM2NL",
                "ts": "1736278768.596929"
            },
            {
                "user": "U016TGY3676",
                "ts": "1736283519.909039"
            },
            {
                "user": "US2RWCWKY",
                "ts": "1736294919.677679"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0GbFw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Inspired by "
                            },
                            {
                                "type": "user",
                                "user_id": "UBS7QANF3"
                            },
                            {
                                "type": "text",
                                "text": "'s thread, I thought I'd better try to calculate my Sharpe Ratio, which I've never done before. Can someone please confirm if this is correct? It's in a jupyter notebook where my dataframe is populated from flumine bet logs.\n\n"
                            },
                            {
                                "type": "text",
                                "text": "\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "def calc_sharpe(df, period='D'):\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "    # Create a copy of the dataframe\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "    d = df.copy()\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "    # Ensure datetime index\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "    if not isinstance(d.index, pd.DatetimeIndex):\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "        d.set_index('date_time_created', inplace=True)\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "    # Calculate liability and ROI\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "    d['liability'] = d['size_matched'] * (d['price_matched'] - 1)\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "    # Filter for matched bets\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "    df_matched = d[d['liability'] > 0]\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "    # Calculate period returns (weighted by liability)\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "    period_profits = df_matched.groupby(pd.Grouper(freq=period))['profit'].sum()\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "    period_liabilities = df_matched.groupby(pd.Grouper(freq=period))['liability'].sum()\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "    period_returns = period_profits \/ period_liabilities\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "    # Filter out null periods\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "    period_returns = period_returns[period_returns.index.notnull()]\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "    # Calculate metrics\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "    avg_return = period_returns.mean()\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "    volatility = period_returns.std()\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "    sharpe_ratio = np.sqrt(len(period_returns)) * (avg_return \/ volatility) if volatility != 0 else 0\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "    # Calculate summary statistics\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "    total_bets = len(df_matched)\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "    total_profit = round(df_matched['profit'].sum(), 2)\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "    total_liability = round(df_matched['liability'].sum(), 2)\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "    overall_roi = total_profit \/ total_liability if total_liability > 0 else 0\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "    return {\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "        'sharpe_ratio': sharpe_ratio,\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "        'average_return': avg_return,\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "        'volatility': volatility,\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "        'periods_analyzed': len(period_returns),\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "        'total_matched_bets': total_bets,\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "        'total_profit': total_profit,\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "        'total_liability': total_liability,\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "        'overall_roi': overall_roi\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "    }\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "sr = calc_sharpe(df, period='D')\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "for k, v in sr.items():\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "    print(f'{k}: {v}')\n",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UQL0QDEKA",
        "type": "message",
        "ts": "1736257992.099049",
        "client_msg_id": "7FF1D1FC-65F9-4A61-8462-02BAF13B20A8",
        "text": "Hi Birchy I’ve got a new back tester which calculates this amongst other things, happy to send you a copy when I get home later. At least you can run it on your recorded files and see if you get the same values etc? ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g444d10128c0",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/444d10128c0aaf094041a52a76796602.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "Peter",
            "real_name": "Peter Lenagh",
            "display_name": "PeterLe",
            "team": "T4G9NBD2M",
            "name": "lenagh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1736256563.940559",
        "parent_user_id": "U016TGY3676",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dHDjm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi Birchy I’ve got a new "
                            },
                            {
                                "type": "text",
                                "text": "back tester which calculates this amongst other things, happy to send you a copy when I get home later. At least you can run it on your recorded files and see if you get the same values etc? "
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U016TGY3676"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U016TGY3676",
        "type": "message",
        "ts": "1736258266.921909",
        "client_msg_id": "7110f85e-ac46-4eb0-b67e-2aaa905818b3",
        "text": "I've been using this for live bet logs and getting a SR of 4.507 which seems ridiculously high. GPT thinks it's fine but I'm not so sure!",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g6a681220e11",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6a681220e11c1a2ed3685375d658dadb.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "",
            "real_name": "birchy",
            "display_name": "birchy",
            "team": "T4G9NBD2M",
            "name": "birchy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1736256563.940559",
        "parent_user_id": "U016TGY3676",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PntC1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've been using this for live bet logs and getting a SR of 4.507 which seems ridiculously high. GPT thinks it's fine but I'm not so sure!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1736258319.623039",
        "client_msg_id": "3390e75d-f861-4cf0-8fcd-c5a40a19b65f",
        "text": "What's the ROI?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1736256563.940559",
        "parent_user_id": "U016TGY3676",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CPf\/b",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What's the ROI?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U016TGY3676",
        "type": "message",
        "ts": "1736258980.634039",
        "client_msg_id": "77fca6c4-36f7-464e-a80d-8aeac989dddc",
        "text": "Output from the above:\n\n`sharpe_ratio: 4.507113558287616\naverage_return: 0.002074230741245862\nvolatility: 0.007837139279485535\nperiods_analyzed: 290\ntotal_matched_bets: 86591\ntotal_profit: 1577.2\ntotal_liability: 704965.01\noverall_roi: 0.0022372741591813188`",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g6a681220e11",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6a681220e11c1a2ed3685375d658dadb.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "",
            "real_name": "birchy",
            "display_name": "birchy",
            "team": "T4G9NBD2M",
            "name": "birchy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1736256563.940559",
        "parent_user_id": "U016TGY3676",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9\/StF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Output from the above:\n\n"
                            },
                            {
                                "type": "text",
                                "text": "sharpe_ratio: 4.507113558287616\naverage_return: 0.002074230741245862\nvolatility: 0.007837139279485535\nperiods_analyzed: 290\ntotal_matched_bets: 86591\ntotal_profit: 1577.2\ntotal_liability: 704965.01\noverall_roi: 0.0022372741591813188",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1736259005.934319",
        "client_msg_id": "44f24fd3-70c9-4dc3-99f6-2d8ba3b080ab",
        "text": "Intuitively there's no way that SR is correct with that ROI",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1736256563.940559",
        "parent_user_id": "U016TGY3676",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gQr2D",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Intuitively there's no way that SR is correct with that ROI"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1736259035.184119",
        "client_msg_id": "81d4c0c5-067c-4dd4-a6fb-bba325af1908",
        "text": "As per the thread you're referencing, replace `np.sqrt(len(period_returns))` with `np.sqrt(365)` to get the annualised SR",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1736256563.940559",
        "parent_user_id": "U016TGY3676",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SsmP2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "As per the thread you're referencing, replace "
                            },
                            {
                                "type": "text",
                                "text": "np.sqrt(len(period_returns))",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " with "
                            },
                            {
                                "type": "text",
                                "text": "np.sqrt(365)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to get the annualised SR"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1736259225.975879",
        "client_msg_id": "a8edf292-a3af-49cf-bd8c-afeecc79ae33",
        "text": "What do you get if you do `np.sqrt(365) * period_profits.mean() \/ period_profits.std()`?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1736256563.940559",
        "parent_user_id": "U016TGY3676",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Qvz+\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What do you get if you do "
                            },
                            {
                                "type": "text",
                                "text": "np.sqrt(365) * period_profits.mean() \/ period_profits.std()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U016TGY3676",
        "type": "message",
        "ts": "1736259437.346819",
        "client_msg_id": "3b2779f9-2075-4162-8727-8d46090ed87d",
        "text": "5.57!",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g6a681220e11",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6a681220e11c1a2ed3685375d658dadb.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "",
            "real_name": "birchy",
            "display_name": "birchy",
            "team": "T4G9NBD2M",
            "name": "birchy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1736256563.940559",
        "parent_user_id": "U016TGY3676",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sm+vs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "5.57!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1736259498.317329",
        "client_msg_id": "a8660f43-70dd-4a67-8e0d-c2d8f9d9af50",
        "text": "Maybe my intuition is just off",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1736256563.940559",
        "parent_user_id": "U016TGY3676",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Lib1p",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Maybe my intuition is just off"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U016TGY3676",
        "type": "message",
        "ts": "1736259641.447269",
        "client_msg_id": "9017e64c-692c-49a7-964d-f8d216e8f116",
        "text": "It feels wrong to me as well. This is a strategy that has been running for 4 years and I know it's low ROI but it just plods along so I've left it alone.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g6a681220e11",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6a681220e11c1a2ed3685375d658dadb.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "",
            "real_name": "birchy",
            "display_name": "birchy",
            "team": "T4G9NBD2M",
            "name": "birchy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1736256563.940559",
        "parent_user_id": "U016TGY3676",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8wZWe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It feels wrong to me as well. This is a strategy that has been running for 4 years and I know it's low ROI but it just plods along so I've left it alone."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02RN7YDRQ9",
        "type": "message",
        "ts": "1736271140.867469",
        "client_msg_id": "4d1f680f-ed54-4a81-a7cc-48437ccc4ee8",
        "text": "<@U016TGY3676> as I read the formula in the other thread maybe you should use `period_profits` instead of `period_returns` ie `((1577.20 \/ 290) \/ period_profits.std()) * sqrt(365)` May be wrong though !",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "ge46f1f8b708",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e46f1f8b708a630e3191de7b2c42b1d1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "edblock",
            "real_name": "edblock",
            "display_name": "foxwood",
            "team": "T4G9NBD2M",
            "name": "eanb",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1736256563.940559",
        "parent_user_id": "U016TGY3676",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wA8Px",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U016TGY3676"
                            },
                            {
                                "type": "text",
                                "text": " as I read the formula in the other thread maybe you should use "
                            },
                            {
                                "type": "text",
                                "text": "period_profits",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " instead of "
                            },
                            {
                                "type": "text",
                                "text": "period_returns",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " ie "
                            },
                            {
                                "type": "text",
                                "text": "((1577.20 \/ 290) \/ period_profits.std()) * sqrt(365)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " May be wrong though !"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0128E7BEHW",
        "type": "message",
        "ts": "1736272678.630189",
        "client_msg_id": "2e19a2f0-cad8-4fe3-abf9-1333b0ffd7ac",
        "text": "Mo, are you saying 0.2% ROI is too low for this Sharpe? I think I'd agree, but it looks like the low ROI is because of the \"liability\" denominator. <@U016TGY3676>, what if you compute ROI using backers stake, rather than liability?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb57a2bdd15a",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b57a2bdd15acccdb845ce257f38940cc.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Dave",
            "real_name": "Dave R",
            "display_name": "Dave",
            "team": "T4G9NBD2M",
            "name": "d7m",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1736256563.940559",
        "parent_user_id": "U016TGY3676",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KjGff",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Mo, are you saying 0.2% ROI is too low for this Sharpe? I think I'd agree, but it looks like the low ROI is because of the \"liability\" denominator. "
                            },
                            {
                                "type": "user",
                                "user_id": "U016TGY3676"
                            },
                            {
                                "type": "text",
                                "text": ", what if you compute ROI using backers stake, rather than liability?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U016TGY3676",
        "type": "message",
        "ts": "1736273782.335819",
        "client_msg_id": "57698e0e-d362-44bf-b915-7515fbd3e91c",
        "text": "<@U0128E7BEHW> ROI is a fraction over 1% when using size_matched as the liability.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g6a681220e11",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6a681220e11c1a2ed3685375d658dadb.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "",
            "real_name": "birchy",
            "display_name": "birchy",
            "team": "T4G9NBD2M",
            "name": "birchy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1736256563.940559",
        "parent_user_id": "U016TGY3676",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kfUlr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U0128E7BEHW"
                            },
                            {
                                "type": "text",
                                "text": " ROI is a fraction over 1% when using size_matched as the liability."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "FWIW I calculate it as follows:\n\n```class SharpeRatio(PostTradeAnalytics):\n    \"\"\"Calculate sharpe ratio on the orders.\"\"\"\n\n    def run(self, orders):\n        orders = group_by_market(orders)\n        profit = orders[\"profit\"]\n        sharpe = profit.mean() \/ (profit.std() \/ np.sqrt(profit.count()))\n        return sharpe```\nand also have sharps > 5 (live) with low roi, _but_ I do the cardinal sin of hedging...",
        "files": [
            {
                "id": "F087QUQL4VA",
                "created": 1736278312,
                "timestamp": 1736278312,
                "name": "Screenshot 2025-01-07 at 19.31.48.png",
                "title": "Screenshot 2025-01-07 at 19.31.48.png",
                "mimetype": "image\/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "U05REBJ21EC",
                "user_team": "T4G9NBD2M",
                "editable": false,
                "size": 17356,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https:\/\/files.slack.com\/files-pri\/T4G9NBD2M-F087QUQL4VA\/screenshot_2025-01-07_at_19.31.48.png?t=xoxe-152328387089-8357743338709-8373272928225-dfe8ebcd8ca3d2f633bcafeb95191840",
                "url_private_download": "https:\/\/files.slack.com\/files-pri\/T4G9NBD2M-F087QUQL4VA\/download\/screenshot_2025-01-07_at_19.31.48.png?t=xoxe-152328387089-8357743338709-8373272928225-dfe8ebcd8ca3d2f633bcafeb95191840",
                "media_display_type": "unknown",
                "thumb_64": "https:\/\/files.slack.com\/files-tmb\/T4G9NBD2M-F087QUQL4VA-7ae201806d\/screenshot_2025-01-07_at_19.31.48_64.png?t=xoxe-152328387089-8357743338709-8373272928225-dfe8ebcd8ca3d2f633bcafeb95191840",
                "thumb_80": "https:\/\/files.slack.com\/files-tmb\/T4G9NBD2M-F087QUQL4VA-7ae201806d\/screenshot_2025-01-07_at_19.31.48_80.png?t=xoxe-152328387089-8357743338709-8373272928225-dfe8ebcd8ca3d2f633bcafeb95191840",
                "thumb_360": "https:\/\/files.slack.com\/files-tmb\/T4G9NBD2M-F087QUQL4VA-7ae201806d\/screenshot_2025-01-07_at_19.31.48_360.png?t=xoxe-152328387089-8357743338709-8373272928225-dfe8ebcd8ca3d2f633bcafeb95191840",
                "thumb_360_w": 360,
                "thumb_360_h": 131,
                "thumb_160": "https:\/\/files.slack.com\/files-tmb\/T4G9NBD2M-F087QUQL4VA-7ae201806d\/screenshot_2025-01-07_at_19.31.48_160.png?t=xoxe-152328387089-8357743338709-8373272928225-dfe8ebcd8ca3d2f633bcafeb95191840",
                "original_w": 428,
                "original_h": 156,
                "thumb_tiny": "AwARADDQYPuyrgD0IpMP\/wA9B\/3zTqRmKjIUn6UAJ8\/\/AD0X\/vmnLuB+ZgfoMVExVjkwsT7inR7QTiMp+FAEh6HBx70i53csD7YoPIwaauNw+THvQA+kpaSgAooooAWgdaKB1oA\/\/9k=",
                "permalink": "https:\/\/betcode-org.slack.com\/files\/U05REBJ21EC\/F087QUQL4VA\/screenshot_2025-01-07_at_19.31.48.png",
                "permalink_public": "https:\/\/slack-files.com\/T4G9NBD2M-F087QUQL4VA-c4f97d05ea",
                "is_starred": false,
                "has_rich_preview": false,
                "file_access": "visible"
            }
        ],
        "upload": false,
        "user": "U05REBJ21EC",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "a1VSk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "FWIW I calculate it as follows:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "class SharpeRatio(PostTradeAnalytics):\n    \"\"\"Calculate sharpe ratio on the orders.\"\"\"\n\n    def run(self, orders):\n        orders = group_by_market(orders)\n        profit = orders[\"profit\"]\n        sharpe = profit.mean() \/ (profit.std() \/ np.sqrt(profit.count()))\n        return sharpe"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nand also have sharps > 5 (live) with low roi, "
                            },
                            {
                                "type": "text",
                                "text": "but",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " I do the cardinal sin of hedging..."
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1736278341.013509",
        "edited": {
            "user": "U05REBJ21EC",
            "ts": "1736278379.000000"
        },
        "client_msg_id": "33e7a729-3e94-4958-b912-f112fc038d07",
        "thread_ts": "1736256563.940559",
        "parent_user_id": "U016TGY3676"
    },
    {
        "user": "U05REBJ21EC",
        "type": "message",
        "ts": "1736278477.298429",
        "edited": {
            "user": "U05REBJ21EC",
            "ts": "1736278492.000000"
        },
        "client_msg_id": "d386259b-24b9-481a-895a-a8894c9c67cb",
        "text": "ROI is calculated as:\n\n```class ReturnOnInvestment(PostTradeAnalytics):\n    \"\"\"Measure the ROI defined as profit \/ turnover.\"\"\"\n\n    def run(self, orders):\n        orders = group_by_market(orders)\n        # this profit has commision applied\n        return orders[\"profit\"].sum() \/ orders[\"size_matched\"].sum()```",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g17ca955ed73",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/17ca955ed73db12e24f600927d8c670e.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "lorenzo",
            "real_name": "lorenzo",
            "display_name": "lorenzo",
            "team": "T4G9NBD2M",
            "name": "lor.niccolini",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1736256563.940559",
        "parent_user_id": "U016TGY3676",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "x9DRu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "ROI is calculated as:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "class ReturnOnInvestment(PostTradeAnalytics):\n    \"\"\"Measure the ROI defined as profit \/ turnover.\"\"\"\n\n    def run(self, orders):\n        orders = group_by_market(orders)\n        # this profit has commision applied\n        return orders[\"profit\"].sum() \/ orders[\"size_matched\"].sum()"
                            }
                        ],
                        "border": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "U03FS7KM2NL",
        "type": "message",
        "ts": "1736278746.473619",
        "client_msg_id": "9E53A3D1-3A83-47AE-B8A0-C38C3FA8498A",
        "text": "Sharpe 5 seems pretty reasonable in context",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g160a197a059",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/160a197a059d9b97aabdd95ca66dc341.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0026-72.png",
            "first_name": "Ralegh",
            "real_name": "Ralegh",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "ralegh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1736256563.940559",
        "parent_user_id": "U016TGY3676",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3c6aQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sharpe 5 seems pretty reasonable in context"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03FS7KM2NL",
        "type": "message",
        "ts": "1736278768.596929",
        "client_msg_id": "A6E5817F-B553-4B5E-98AD-4C9B9E7DB9F0",
        "text": "I have 1-1.5% strategies which if hedged are 30+ sharpe",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g160a197a059",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/160a197a059d9b97aabdd95ca66dc341.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0026-72.png",
            "first_name": "Ralegh",
            "real_name": "Ralegh",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "ralegh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1736256563.940559",
        "parent_user_id": "U016TGY3676",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CnJBD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have 1-1.5% strategies which if hedged are 30+ sharpe"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U016TGY3676"
                ],
                "count": 1
            }
        ]
    },
    {
        "subtype": "thread_broadcast",
        "user": "U016TGY3676",
        "thread_ts": "1736256563.940559",
        "root": {
            "user": "U016TGY3676",
            "type": "message",
            "ts": "1736256563.940559",
            "client_msg_id": "101c2fb8-097e-4610-aac6-8d4adb53fc90",
            "text": "Inspired by <@UBS7QANF3>'s thread, I thought I'd better try to calculate my Sharpe Ratio, which I've never done before. Can someone please confirm if this is correct? It's in a jupyter notebook where my dataframe is populated from flumine bet logs.\n\n\n\n`def calc_sharpe(df, period='D'):\n    # Create a copy of the dataframe\n    d = df.copy()`\n\n    `# Ensure datetime index\n    if not isinstance(d.index, pd.DatetimeIndex):\n        d.set_index('date_time_created', inplace=True)`\n\n    `# Calculate liability and ROI\n    d['liability'] = d['size_matched'] * (d['price_matched'] - 1)`\n\n    `# Filter for matched bets\n    df_matched = d[d['liability'] &gt; 0]`\n\n    `# Calculate period returns (weighted by liability)\n    period_profits = df_matched.groupby(pd.Grouper(freq=period))['profit'].sum()\n    period_liabilities = df_matched.groupby(pd.Grouper(freq=period))['liability'].sum()\n    period_returns = period_profits \/ period_liabilities`\n\n    `# Filter out null periods\n    period_returns = period_returns[period_returns.index.notnull()]`\n\n    `# Calculate metrics\n    avg_return = period_returns.mean()\n    volatility = period_returns.std()\n    sharpe_ratio = np.sqrt(len(period_returns)) * (avg_return \/ volatility) if volatility != 0 else 0`\n\n    `# Calculate summary statistics\n    total_bets = len(df_matched)\n    total_profit = round(df_matched['profit'].sum(), 2)\n    total_liability = round(df_matched['liability'].sum(), 2)\n    overall_roi = total_profit \/ total_liability if total_liability &gt; 0 else 0`\n\n    `return {\n        'sharpe_ratio': sharpe_ratio,\n        'average_return': avg_return,\n        'volatility': volatility,\n        'periods_analyzed': len(period_returns),\n        'total_matched_bets': total_bets,\n        'total_profit': total_profit,\n        'total_liability': total_liability,\n        'overall_roi': overall_roi\n    }`\n\n`sr = calc_sharpe(df, period='D')\nfor k, v in sr.items():\n    print(f'{k}: {v}')`\n",
            "team": "T4G9NBD2M",
            "thread_ts": "1736256563.940559",
            "reply_count": 19,
            "reply_users_count": 8,
            "latest_reply": "1736294919.677679",
            "reply_users": [
                "UQL0QDEKA",
                "U016TGY3676",
                "UBS7QANF3",
                "U02RN7YDRQ9",
                "U0128E7BEHW",
                "U05REBJ21EC",
                "U03FS7KM2NL",
                "US2RWCWKY"
            ],
            "replies": [
                {
                    "user": "UQL0QDEKA",
                    "ts": "1736257992.099049"
                },
                {
                    "user": "U016TGY3676",
                    "ts": "1736258266.921909"
                },
                {
                    "user": "UBS7QANF3",
                    "ts": "1736258319.623039"
                },
                {
                    "user": "U016TGY3676",
                    "ts": "1736258980.634039"
                },
                {
                    "user": "UBS7QANF3",
                    "ts": "1736259005.934319"
                },
                {
                    "user": "UBS7QANF3",
                    "ts": "1736259035.184119"
                },
                {
                    "user": "UBS7QANF3",
                    "ts": "1736259225.975879"
                },
                {
                    "user": "U016TGY3676",
                    "ts": "1736259437.346819"
                },
                {
                    "user": "UBS7QANF3",
                    "ts": "1736259498.317329"
                },
                {
                    "user": "U016TGY3676",
                    "ts": "1736259641.447269"
                },
                {
                    "user": "U02RN7YDRQ9",
                    "ts": "1736271140.867469"
                },
                {
                    "user": "U0128E7BEHW",
                    "ts": "1736272678.630189"
                },
                {
                    "user": "U016TGY3676",
                    "ts": "1736273782.335819"
                },
                {
                    "user": "U05REBJ21EC",
                    "ts": "1736278341.013509"
                },
                {
                    "user": "U05REBJ21EC",
                    "ts": "1736278477.298429"
                },
                {
                    "user": "U03FS7KM2NL",
                    "ts": "1736278746.473619"
                },
                {
                    "user": "U03FS7KM2NL",
                    "ts": "1736278768.596929"
                },
                {
                    "user": "U016TGY3676",
                    "ts": "1736283519.909039"
                },
                {
                    "user": "US2RWCWKY",
                    "ts": "1736294919.677679"
                }
            ],
            "is_locked": false,
            "subscribed": false,
            "blocks": [
                {
                    "type": "rich_text",
                    "block_id": "0GbFw",
                    "elements": [
                        {
                            "type": "rich_text_section",
                            "elements": [
                                {
                                    "type": "text",
                                    "text": "Inspired by "
                                },
                                {
                                    "type": "user",
                                    "user_id": "UBS7QANF3"
                                },
                                {
                                    "type": "text",
                                    "text": "'s thread, I thought I'd better try to calculate my Sharpe Ratio, which I've never done before. Can someone please confirm if this is correct? It's in a jupyter notebook where my dataframe is populated from flumine bet logs.\n\n"
                                },
                                {
                                    "type": "text",
                                    "text": "\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "def calc_sharpe(df, period='D'):\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "    # Create a copy of the dataframe\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "    d = df.copy()\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "    # Ensure datetime index\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "    if not isinstance(d.index, pd.DatetimeIndex):\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "        d.set_index('date_time_created', inplace=True)\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "    # Calculate liability and ROI\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "    d['liability'] = d['size_matched'] * (d['price_matched'] - 1)\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "    # Filter for matched bets\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "    df_matched = d[d['liability'] > 0]\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "    # Calculate period returns (weighted by liability)\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "    period_profits = df_matched.groupby(pd.Grouper(freq=period))['profit'].sum()\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "    period_liabilities = df_matched.groupby(pd.Grouper(freq=period))['liability'].sum()\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "    period_returns = period_profits \/ period_liabilities\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "    # Filter out null periods\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "    period_returns = period_returns[period_returns.index.notnull()]\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "    # Calculate metrics\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "    avg_return = period_returns.mean()\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "    volatility = period_returns.std()\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "    sharpe_ratio = np.sqrt(len(period_returns)) * (avg_return \/ volatility) if volatility != 0 else 0\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "    # Calculate summary statistics\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "    total_bets = len(df_matched)\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "    total_profit = round(df_matched['profit'].sum(), 2)\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "    total_liability = round(df_matched['liability'].sum(), 2)\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "    overall_roi = total_profit \/ total_liability if total_liability > 0 else 0\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "    return {\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "        'sharpe_ratio': sharpe_ratio,\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "        'average_return': avg_return,\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "        'volatility': volatility,\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "        'periods_analyzed': len(period_returns),\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "        'total_matched_bets': total_bets,\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "        'total_profit': total_profit,\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "        'total_liability': total_liability,\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "        'overall_roi': overall_roi\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "    }\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "sr = calc_sharpe(df, period='D')\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "for k, v in sr.items():\n",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "    print(f'{k}: {v}')\n",
                                    "style": {
                                        "code": true
                                    }
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "type": "message",
        "ts": "1736283519.909039",
        "client_msg_id": "2d9cf68e-4c90-4c20-99cc-08ff617917e2",
        "text": "That's reassuring, although I already know it's a profitable strategy. Not life changing amounts, but being consistently &gt; 0 is inspiring. Although I've become very complacent. :thinking_face:",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UWmeV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That's reassuring, although I already know it's a profitable strategy. Not life changing amounts, but being consistently > 0 is inspiring. Although I've become very complacent. "
                            },
                            {
                                "type": "emoji",
                                "name": "thinking_face",
                                "unicode": "1f914"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "US2RWCWKY",
        "type": "message",
        "ts": "1736294919.677679",
        "client_msg_id": "C49E3E12-CFDA-4FB3-A983-918DF77F76A5",
        "text": "Yeah, I hedge and I calculated my Sharpe ratio for 2024 yesterday and it was 15",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf934fece8db",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f934fece8db401123296fc3e9f70453a.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "Alex A",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "alexander.abboud",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1736256563.940559",
        "parent_user_id": "U016TGY3676",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "x4jWd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, I hedge and I calculated my Sharpe ratio for 2024 yesterday and it was 15"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]