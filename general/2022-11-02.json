[
    {
        "user": "U01B8031PM1",
        "type": "message",
        "ts": "1667389683.207809",
        "client_msg_id": "553eae57-3e37-4c01-a7c5-ab77a53373bf",
        "text": "It appears that this is always price sorted in my unit tests: `RunnerBook.ex.traded_volume` is this guaranteed or just an artefact of the market data I am testing on?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g6e482a0e41b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6e482a0e41b232f48d801454006dfa56.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "river_shah",
            "real_name": "river_shah",
            "display_name": "river_shah",
            "team": "T4G9NBD2M",
            "name": "ansar.sa",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+Uh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It appears that this is always price sorted in my unit tests: "
                            },
                            {
                                "type": "text",
                                "text": "RunnerBook.ex.traded_volume",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is this guaranteed or just an artefact of the market data I am testing on?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1667389749.298279",
        "client_msg_id": "8d2fd3bb-7879-4a7f-8375-09cd8a3ccfd7",
        "text": "<https:\/\/github.com\/betcode-org\/betfair\/blob\/71c8fe2acdd20c9d65663e5a5af7692267489e81\/betfairlightweight\/streaming\/cache.py#L74|both> i think",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "id": 1,
                "footer_icon": "https:\/\/slack.github.com\/static\/img\/favicon-neutral.png",
                "color": "24292f",
                "bot_id": "B021ZJYSBMW",
                "app_unfurl_url": "https:\/\/github.com\/betcode-org\/betfair\/blob\/71c8fe2acdd20c9d65663e5a5af7692267489e81\/betfairlightweight\/streaming\/cache.py#L74",
                "is_app_unfurl": true,
                "app_id": "A01BP7R4KNY",
                "fallback": "<https:\/\/github.com\/betcode-org\/betfair\/blob\/71c8fe2acdd20c9d65663e5a5af7692267489e81\/betfairlightweight\/streaming\/cache.py | cache.py>",
                "text": "```\n            self._sort_order_book()\n```",
                "title": "<https:\/\/github.com\/betcode-org\/betfair\/blob\/71c8fe2acdd20c9d65663e5a5af7692267489e81\/betfairlightweight\/streaming\/cache.py | cache.py>",
                "footer": "<https:\/\/github.com\/betcode-org\/betfair|betcode-org\/betfair>",
                "mrkdwn_in": [
                    "text"
                ]
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ifB5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/betcode-org\/betfair\/blob\/71c8fe2acdd20c9d65663e5a5af7692267489e81\/betfairlightweight\/streaming\/cache.py#L74",
                                "text": "both"
                            },
                            {
                                "type": "text",
                                "text": " i think"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U01B8031PM1"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U0155J92A7Q",
        "type": "message",
        "ts": "1667394882.377979",
        "client_msg_id": "b081fd39-5b40-40ce-8055-e5eec8e7184f",
        "text": "Hi, is it possible to use flumine to simulate a strategy that uses data which is not recorded in the market files?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gde8c5d51af5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/de8c5d51af54a5ac7b501f416ddb262c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "",
            "real_name": "Jorge",
            "display_name": "Jorge",
            "team": "T4G9NBD2M",
            "name": "jgarciam95",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3td",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi, is it possible to use flumine to simulate a strategy that uses data which is not recorded in the market files?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1667395023.282239",
        "client_msg_id": "574e1384-58ed-49e1-9c9a-02c17af7fefe",
        "text": "Yep, example <https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/examples\/simulate-sportsdata.py|here> that uses the cricket stream and the <https:\/\/github.com\/betcode-org\/flumine\/blob\/47af44b2173cf9d6b32fd9daef22dae510adea3f\/flumine\/markets\/middleware.py#L287|middleware> that does the heavy lifting",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "id": 1,
                "footer_icon": "https:\/\/slack.github.com\/static\/img\/favicon-neutral.png",
                "color": "24292f",
                "bot_id": "B021ZJYSBMW",
                "app_unfurl_url": "https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/examples\/simulate-sportsdata.py",
                "is_app_unfurl": true,
                "app_id": "A01BP7R4KNY",
                "fallback": "<https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/examples\/simulate-sportsdata.py | simulate-sportsdata.py>",
                "text": "```\nimport time\nimport logging\nfrom pythonjsonlogger import jsonlogger\n\nfrom flumine import FlumineSimulation, clients\nfrom flumine.strategy.strategy import BaseStrategy\nfrom flumine.markets.middleware import SimulatedSportsDataMiddleware\nfrom flumine.order.trade import Trade\nfrom flumine.order.ordertype import LimitOrder\n\nlogger = logging.getLogger()\n\ncustom_format = \"%(asctime) %(levelname) %(message)\"\nlog_handler = logging.StreamHandler()\nformatter = jsonlogger.JsonFormatter(custom_format)\nformatter.converter = time.gmtime\nlog_handler.setFormatter(formatter)\nlogger.addHandler(log_handler)\nlogger.setLevel(<http:\/\/logging.INFO|logging.INFO>)  # Set to logging.CRITICAL to speed up simulation\n\n\nclass ExampleStrategy(BaseStrategy):\n    \"\"\"\n    Boiler plate strategy that places an\n    order on the bowling team on each\n    wicket.\n    \"\"\"\n\n    def check_sports_data(self, market, sports_data) -> bool:\n        # process_sports_data only executed if this returns True\n        return True\n\n    def process_sports_data(self, market, sports_data) -> None:\n        # called on each update from sports-data-stream\n        if not sports_data.match_stats:\n            return\n        current_innings = sports_data.match_stats.current_innings\n        innings_stats = sports_data.match_stats.innings_stats[current_innings - 1]\n\n        if (\n            innings_stats.innings_wickets\n            and innings_stats.innings_wickets != self.context[\"wickets\"]\n        ):\n            # new wicket\n            self.context[\"wickets\"] = innings_stats.innings_wickets\n            # create lookup\n            lookup = {\n                sports_data.home_team.name: sports_data.home_team.selection_id,\n                sports_data.away_team.name: sports_data.away_team.selection_id,\n            }\n            selection_id = lookup[innings_stats.bowling_team]\n            # place order\n            trade = Trade(\n                market.market_id,\n                selection_id,\n                0,\n                self,\n            )\n            order = trade.create_order(\n                side=\"BACK\",\n                order_type=LimitOrder(1.01, 2),\n            )\n            market.place_order(order)\n\n\nclient = clients.SimulatedClient()\n\nframework = FlumineSimulation(client=client)\n\nframework.add_market_middleware(\n    SimulatedSportsDataMiddleware(\"cricketSubscription\", \"tests\/resources\/sportsdata\")\n)\n\nmarkets = [\"tests\/resources\/1.200806927\"]\n\nstrategy = ExampleStrategy(\n    market_filter={\"markets\": markets, \"listener_kwargs\": {\"inplay\": True}},\n    context={\"wickets\": 0},\n)\nframework.add_strategy(strategy)\n\nframework.run()\n\nfor market in framework.markets:\n    print(\"Profit: {0:.2f}\".format(sum([o.profit for o in market.blotter])))\n    for order in market.blotter:\n        print(\n            order.selection_id,\n            order.responses.date_time_placed,\n            order.status,\n            order.order_type.price,\n            order.average_price_matched,\n            order.size_matched,\n            order.profit,\n        )\n\n```",
                "title": "<https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/examples\/simulate-sportsdata.py | simulate-sportsdata.py>",
                "footer": "<https:\/\/github.com\/betcode-org\/flumine|betcode-org\/flumine>",
                "mrkdwn_in": [
                    "text"
                ]
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aOtY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yep, example "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/examples\/simulate-sportsdata.py",
                                "text": "here"
                            },
                            {
                                "type": "text",
                                "text": " that uses the cricket stream and the "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/betcode-org\/flumine\/blob\/47af44b2173cf9d6b32fd9daef22dae510adea3f\/flumine\/markets\/middleware.py#L287",
                                "text": "middleware"
                            },
                            {
                                "type": "text",
                                "text": " that does the heavy lifting"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0155J92A7Q",
        "type": "message",
        "ts": "1667395275.679079",
        "client_msg_id": "c6f58d15-bc54-46cc-ad8d-361f1910acbb",
        "text": "And is it possible to use a data time series which is not a cricketSubscription or raceSubscription?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gde8c5d51af5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/de8c5d51af54a5ac7b501f416ddb262c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "",
            "real_name": "Jorge",
            "display_name": "Jorge",
            "team": "T4G9NBD2M",
            "name": "jgarciam95",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667395275.679079",
        "reply_count": 7,
        "reply_users_count": 2,
        "latest_reply": "1667396077.157799",
        "reply_users": [
            "U4H19D1D2",
            "U0155J92A7Q"
        ],
        "replies": [
            {
                "user": "U4H19D1D2",
                "ts": "1667395348.444649"
            },
            {
                "user": "U0155J92A7Q",
                "ts": "1667395794.324969"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1667395840.792799"
            },
            {
                "user": "U0155J92A7Q",
                "ts": "1667395881.615729"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1667395976.912279"
            },
            {
                "user": "U0155J92A7Q",
                "ts": "1667396044.513059"
            },
            {
                "user": "U0155J92A7Q",
                "ts": "1667396077.157799"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1667396077.157799",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5Y3o",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And is it possible to use a data time series which is not a cricketSubscription or raceSubscription?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1667395348.444649",
        "client_msg_id": "853d7845-368c-4344-9ea4-ea56d2bff98f",
        "text": "just an example but the idea would be the same, use middleware that gets called on each `marketBook` update to pull in the data that you need and then store in `market.context` for strategy processing",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667395275.679079",
        "parent_user_id": "U0155J92A7Q",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jth",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "just an example but the idea would be the same, use middleware that gets called on each "
                            },
                            {
                                "type": "text",
                                "text": "marketBook",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " update to pull in the data that you need and then store in "
                            },
                            {
                                "type": "text",
                                "text": "market.context",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " for strategy processing"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0155J92A7Q",
        "type": "message",
        "ts": "1667395794.324969",
        "client_msg_id": "f45fdf27-0d2d-493f-b997-f5ef2ff41e2a",
        "text": "What format does the data need to be in?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gde8c5d51af5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/de8c5d51af54a5ac7b501f416ddb262c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "",
            "real_name": "Jorge",
            "display_name": "Jorge",
            "team": "T4G9NBD2M",
            "name": "jgarciam95",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667395275.679079",
        "parent_user_id": "U0155J92A7Q",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Q\/AD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What format does the data need to be in?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1667395840.792799",
        "client_msg_id": "41d1d789-4173-4717-9e98-c511e10d39fe",
        "text": "whatever you want? But if you are simulating then you need a datetime of some sort, if you have an example (marketbook and the data) I can show you",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667395275.679079",
        "parent_user_id": "U0155J92A7Q",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5Lu0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "whatever you want? But if you are simulating then you need a datetime of some sort, if you have an example (marketbook and the data) I can show you"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0155J92A7Q",
        "type": "message",
        "ts": "1667395881.615729",
        "client_msg_id": "8d70f928-1b2d-42fd-a758-ed188084649c",
        "text": "Actually, the <https:\/\/github.com\/betcode-org\/flumine\/blob\/47af44b2173cf9d6b32fd9daef22dae510adea3f\/flumine\/markets\/middleware.py#L287|middleware> would work if I have a file with the marketId even if it is not coming from a cricketSubscription, right?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gde8c5d51af5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/de8c5d51af54a5ac7b501f416ddb262c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "",
            "real_name": "Jorge",
            "display_name": "Jorge",
            "team": "T4G9NBD2M",
            "name": "jgarciam95",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667395275.679079",
        "parent_user_id": "U0155J92A7Q",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fgEJT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Actually, the "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/betcode-org\/flumine\/blob\/47af44b2173cf9d6b32fd9daef22dae510adea3f\/flumine\/markets\/middleware.py#L287",
                                "text": "middleware"
                            },
                            {
                                "type": "text",
                                "text": " would work if I have a file with the marketId even if it is not coming from a cricketSubscription, right?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1667395976.912279",
        "client_msg_id": "12797f68-2244-4748-a683-e525c09b8f45",
        "text": "no idea what you are doing and the data you have :man-shrugging:",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667395275.679079",
        "parent_user_id": "U0155J92A7Q",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7ok4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "no idea what you are doing and the data you have "
                            },
                            {
                                "type": "emoji",
                                "name": "man-shrugging",
                                "unicode": "1f937-200d-2642-fe0f"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0155J92A7Q",
        "type": "message",
        "ts": "1667396044.513059",
        "client_msg_id": "a284094c-d43f-4ddf-99c5-132e8b63c962",
        "text": "Ah I think I get it now, the data format does not matter. But it would be convenient to have a generator of some kind",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gde8c5d51af5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/de8c5d51af54a5ac7b501f416ddb262c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "",
            "real_name": "Jorge",
            "display_name": "Jorge",
            "team": "T4G9NBD2M",
            "name": "jgarciam95",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667395275.679079",
        "parent_user_id": "U0155J92A7Q",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zPIl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah I think I get it now, the data format does not matter. But it would be convenient to have a generator of some kind"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0155J92A7Q",
        "type": "message",
        "ts": "1667396077.157799",
        "client_msg_id": "460ebd31-a8e1-43d7-8654-341a41edc175",
        "text": "I'll try it and come back with an example if it doesn't work:sweat_smile:",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gde8c5d51af5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/de8c5d51af54a5ac7b501f416ddb262c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "",
            "real_name": "Jorge",
            "display_name": "Jorge",
            "team": "T4G9NBD2M",
            "name": "jgarciam95",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667395275.679079",
        "parent_user_id": "U0155J92A7Q",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dRT6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'll try it and come back with an example if it doesn't work"
                            },
                            {
                                "type": "emoji",
                                "name": "sweat_smile",
                                "unicode": "1f605"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U4H19D1D2"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U0322P0CK0E",
        "type": "message",
        "ts": "1667445661.536269",
        "client_msg_id": "ae32d75d-92b8-4a04-a12b-1ef8b5a12fd3",
        "text": "Is there anyway to run the loop at the end of <https:\/\/github.com\/betcode-org\/betfair\/blob\/master\/examples\/examplehistoricdata.py|https:\/\/github.com\/betcode-org\/betfair\/blob\/master\/examples\/examplehistoricdata.py> in parallel to speed up download. I tried using joblib but there isn't much difference.\n\nThe original loop looks like this:\n```for file in file_list:\n    print(file)\n    download = trading.historic.download_file(file_path=path)\n    print(download)```",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "ab1918814707",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-07-31\/3867647231206_ab191881470773932048_72.jpg",
            "first_name": "Vincent",
            "real_name": "Vincent Lim",
            "display_name": "Guy Incognito",
            "team": "T4G9NBD2M",
            "name": "nelsonmathsspecialist",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "id": 1,
                "footer_icon": "https:\/\/slack.github.com\/static\/img\/favicon-neutral.png",
                "color": "24292f",
                "bot_id": "B021ZJYSBMW",
                "app_unfurl_url": "https:\/\/github.com\/betcode-org\/betfair\/blob\/master\/examples\/examplehistoricdata.py",
                "is_app_unfurl": true,
                "app_id": "A01BP7R4KNY",
                "fallback": "<https:\/\/github.com\/betcode-org\/betfair\/blob\/master\/examples\/examplehistoricdata.py | examplehistoricdata.py>",
                "text": "```\nimport logging\n\nimport betfairlightweight\n\n\"\"\"\nHistoric is the API endpoint that can be used to\ndownload data betfair provide.\n\n<https:\/\/historicdata.betfair.com\/#\/apidocs>\n\"\"\"\n\n# setup logging\nlogging.basicConfig(level=<http:\/\/logging.INFO|logging.INFO>)  # change to DEBUG to see log all updates\n\n# create trading instance\ntrading = betfairlightweight.APIClient(\"username\", \"password\", app_key=\"appKey\")\n\n# login\ntrading.login()\n\n# get my data\nmy_data = trading.historic.get_my_data()\nfor i in my_data:\n    print(i)\n\n# get collection options (allows filtering)\ncollection_options = trading.historic.get_collection_options(\n    \"Horse Racing\", \"Basic Plan\", 1, 3, 2017, 1, 3, 2017\n)\nprint(collection_options)\n\n# get advance basket data size\nbasket_size = trading.historic.get_data_size(\n    \"Horse Racing\", \"Basic Plan\", 1, 3, 2017, 1, 3, 2017\n)\nprint(basket_size)\n\n# get file list\nfile_list = trading.historic.get_file_list(\n    \"Horse Racing\",\n    \"Basic Plan\",\n    from_day=1,\n    from_month=3,\n    from_year=2017,\n    to_day=31,\n    to_month=3,\n    to_year=2017,\n    market_types_collection=[\"WIN\", \"PLACE\"],\n    countries_collection=[\"GB\", \"IE\"],\n    file_type_collection=[\"M\"],\n)\nprint(file_list)\n\n# download the files\nfor file in file_list:\n    print(file)\n    download = trading.historic.download_file(file_path=file)\n    print(download)\n\n```",
                "title": "<https:\/\/github.com\/betcode-org\/betfair\/blob\/master\/examples\/examplehistoricdata.py | examplehistoricdata.py>",
                "footer": "<https:\/\/github.com\/betcode-org\/betfair|betcode-org\/betfair>",
                "mrkdwn_in": [
                    "text"
                ]
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "B3Wf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is there anyway to run the loop at the end of "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/betcode-org\/betfair\/blob\/master\/examples\/examplehistoricdata.py",
                                "text": "https:\/\/github.com\/betcode-org\/betfair\/blob\/master\/examples\/examplehistoricdata.py"
                            },
                            {
                                "type": "text",
                                "text": " in parallel to speed up download. I tried using joblib but there isn't much difference.\n\nThe original loop looks like this:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "for file in file_list:\n    print(file)\n    download = trading.historic.download_file(file_path=path)\n    print(download)"
                            }
                        ],
                        "border": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "UPMUFSGCR",
        "type": "message",
        "ts": "1667458746.040919",
        "edited": {
            "user": "UPMUFSGCR",
            "ts": "1667458757.000000"
        },
        "client_msg_id": "e20eb92b-8f0b-4591-bfd0-ca40c6537848",
        "text": "Asyncio?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "31c0bb5a442c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-28\/812386967189_31c0bb5a442c5b8d2c61_72.png",
            "first_name": "Jon",
            "real_name": "Jon Jon Jon Jon Jon Jon Jon Jon",
            "display_name": "Jonjonjon",
            "team": "T4G9NBD2M",
            "name": "fcmisc",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1u02D",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Asyncio?"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]