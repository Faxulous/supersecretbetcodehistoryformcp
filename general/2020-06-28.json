[
    {
        "user": "URJ3S00BX",
        "type": "message",
        "ts": "1593341424.108500",
        "client_msg_id": "38b8e844-b135-4727-9f25-71cdc4c10fe3",
        "text": "<@U4H19D1D2> is BFL compatible with AWS Lambda? I've uploaded BFL as a package into AWS Layers but I'm getting the following error.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf233830eb55",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f233830eb55edc6eade0df2e458b0ee8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0000-72.png",
            "first_name": "Francis",
            "real_name": "Francis Taylor",
            "display_name": "fjt1973",
            "team": "T4G9NBD2M",
            "name": "francis_taylor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BbC=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U4H19D1D2"
                            },
                            {
                                "type": "text",
                                "text": " is BFL compatible with AWS Lambda? I've uploaded BFL as a package into AWS Layers but I'm getting the following error."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "URJ3S00BX",
        "type": "message",
        "ts": "1593341430.108700",
        "client_msg_id": "ff83f815-7c44-4f6c-b724-1d5dbfbbe356",
        "text": "Exception: join() argument must be str or bytes, not 'tuple'\nTraceback (most recent call last):\n  File \"\/var\/task\/lambda_function.py\", line 37, in lambda_handler\n    trading.login()\n  File \"\/opt\/python\/lib\/python3.7\/site-packages\/betfairlightweight\/endpoints\/login.py\", line 31, in __call__\n    self.url, session=session\n  File \"\/opt\/python\/lib\/python3.7\/site-packages\/betfairlightweight\/endpoints\/login.py\", line 53, in request\n    raise APIError(None, exception=e)",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf233830eb55",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f233830eb55edc6eade0df2e458b0ee8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0000-72.png",
            "first_name": "Francis",
            "real_name": "Francis Taylor",
            "display_name": "fjt1973",
            "team": "T4G9NBD2M",
            "name": "francis_taylor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593341430.108700",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1593343176.109100",
        "reply_users": [
            "U01661QJJTV"
        ],
        "replies": [
            {
                "user": "U01661QJJTV",
                "ts": "1593343176.109100"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9WS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Exception: join() argument must be str or bytes, not 'tuple'\nTraceback (most recent call last):\n  File \"\/var\/task\/lambda_function.py\", line 37, in lambda_handler\n    trading.login()\n  File \"\/opt\/python\/lib\/python3.7\/site-packages\/betfairlightweight\/endpoints\/login.py\", line 31, in __call__\n    self.url, session=session\n  File \"\/opt\/python\/lib\/python3.7\/site-packages\/betfairlightweight\/endpoints\/login.py\", line 53, in request\n    raise APIError(None, exception=e)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01661QJJTV",
        "type": "message",
        "ts": "1593343127.109000",
        "client_msg_id": "687917fb-ac91-4ab8-a877-349b8e7ea4f1",
        "text": "Hi guys :slightly_smiling_face:",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "09265f28fc64",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-05\/1223195521283_09265f28fc64d740e6a9_72.png",
            "first_name": "",
            "real_name": "sartux",
            "display_name": "sartux",
            "team": "T4G9NBD2M",
            "name": "sartuxtips",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "r7g",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi guys "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01661QJJTV",
        "type": "message",
        "ts": "1593343176.109100",
        "client_msg_id": "522070e5-655f-4ea0-a670-50b7043946ae",
        "text": "could you publish what the status method gives you?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "09265f28fc64",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-05\/1223195521283_09265f28fc64d740e6a9_72.png",
            "first_name": "",
            "real_name": "sartux",
            "display_name": "sartux",
            "team": "T4G9NBD2M",
            "name": "sartuxtips",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593341430.108700",
        "parent_user_id": "URJ3S00BX",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FEuD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "could you publish what the status method gives you?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1593344405.109400",
        "client_msg_id": "c71a7b22-2c56-426d-a303-1a45c8700cee",
        "text": "Welcome",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jJc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Welcome"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1593344424.109900",
        "client_msg_id": "BB09F5C2-2BFD-4668-99E5-294D380EB20F",
        "text": "Yeah I use it in lambda, for the full traceback?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593344424.109900",
        "reply_count": 3,
        "reply_users_count": 2,
        "latest_reply": "1593370246.133600",
        "reply_users": [
            "URJ3S00BX",
            "U4H19D1D2"
        ],
        "replies": [
            {
                "user": "URJ3S00BX",
                "ts": "1593345713.110200"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1593364743.127700"
            },
            {
                "user": "URJ3S00BX",
                "ts": "1593370246.133600"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1593370359.983317",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "M1hD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah I use it in lambda, for the full traceback?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01661QJJTV",
        "type": "message",
        "ts": "1593345038.110100",
        "client_msg_id": "3f8c910d-cf3a-4df1-9344-05166ecb0c8d",
        "text": "I'm having several difficulties in making a cash out function, can someone help me?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "09265f28fc64",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-05\/1223195521283_09265f28fc64d740e6a9_72.png",
            "first_name": "",
            "real_name": "sartux",
            "display_name": "sartux",
            "team": "T4G9NBD2M",
            "name": "sartuxtips",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593345038.110100",
        "reply_count": 42,
        "reply_users_count": 4,
        "latest_reply": "1593613465.202400",
        "reply_users": [
            "UBS7QANF3",
            "U01661QJJTV",
            "UFTBRB3F1",
            "U0155J92A7Q"
        ],
        "replies": [
            {
                "user": "UBS7QANF3",
                "ts": "1593350574.120400"
            },
            {
                "user": "U01661QJJTV",
                "ts": "1593353663.120600"
            },
            {
                "user": "U01661QJJTV",
                "ts": "1593355092.120800"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1593356456.121000"
            },
            {
                "user": "U01661QJJTV",
                "ts": "1593371564.138400"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1593371971.139000"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1593371974.139300"
            },
            {
                "user": "U01661QJJTV",
                "ts": "1593372463.139600"
            },
            {
                "user": "U01661QJJTV",
                "ts": "1593372563.139800"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1593372593.140300"
            },
            {
                "user": "U01661QJJTV",
                "ts": "1593372867.140500"
            },
            {
                "user": "U01661QJJTV",
                "ts": "1593372973.140800"
            },
            {
                "user": "UFTBRB3F1",
                "ts": "1593381982.141300"
            },
            {
                "user": "U01661QJJTV",
                "ts": "1593415437.141600"
            },
            {
                "user": "U0155J92A7Q",
                "ts": "1593419279.141800"
            },
            {
                "user": "U0155J92A7Q",
                "ts": "1593419326.142000"
            },
            {
                "user": "U0155J92A7Q",
                "ts": "1593419336.142200"
            },
            {
                "user": "U01661QJJTV",
                "ts": "1593420489.142400"
            },
            {
                "user": "U01661QJJTV",
                "ts": "1593421597.142600"
            },
            {
                "user": "U01661QJJTV",
                "ts": "1593421600.142800"
            },
            {
                "user": "U01661QJJTV",
                "ts": "1593422609.143000"
            },
            {
                "user": "U01661QJJTV",
                "ts": "1593423958.143200"
            },
            {
                "user": "U01661QJJTV",
                "ts": "1593506332.150200"
            },
            {
                "user": "U0155J92A7Q",
                "ts": "1593506562.150400"
            },
            {
                "user": "U0155J92A7Q",
                "ts": "1593506581.150600"
            },
            {
                "user": "U0155J92A7Q",
                "ts": "1593506696.151200"
            },
            {
                "user": "U01661QJJTV",
                "ts": "1593507094.151400"
            },
            {
                "user": "U01661QJJTV",
                "ts": "1593509262.151600"
            },
            {
                "user": "U01661QJJTV",
                "ts": "1593510465.151900"
            },
            {
                "user": "U0155J92A7Q",
                "ts": "1593512289.152300"
            },
            {
                "user": "U01661QJJTV",
                "ts": "1593514004.152500"
            },
            {
                "user": "U01661QJJTV",
                "ts": "1593514196.152700"
            },
            {
                "user": "U0155J92A7Q",
                "ts": "1593525287.167900"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1593525358.169200"
            },
            {
                "user": "U01661QJJTV",
                "ts": "1593544249.180000"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1593544314.180600"
            },
            {
                "user": "U01661QJJTV",
                "ts": "1593592355.198700"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1593602730.199400"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1593602945.199600"
            },
            {
                "user": "U01661QJJTV",
                "ts": "1593608840.199900"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1593609211.200100"
            },
            {
                "user": "U01661QJJTV",
                "ts": "1593613465.202400"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1593613465.202400",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "r0S",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm having several difficulties in making a cash out function, can someone help me?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "URJ3S00BX",
        "type": "message",
        "ts": "1593345713.110200",
        "client_msg_id": "f6a5b28e-efe8-4209-bc8b-49e89e109907",
        "text": "So this is my handler, very basic to return the balalce of my account.\n\ndef lambda_handler(event, context):\n    # TODO implement\n    trading = betfairlightweight.APIClient(username=my_username,\n                                       password=my_password,\n                                       app_key=my_app_key,\n                                       certs=certs_path)\n\n    trading.login()\n    account_funds = trading.account.get_account_funds()\n    balance = account_funds.available_to_bet_balance\n    return balance\n    #return {\n    #    'statusCode': 200,\n    #    'body': json.dumps('Hello from Lambda!')\n    #}\n\nAnd this is the execution results\n\nResponse:\n{\n  \"errorMessage\": \"None \\nParams: None \\nException: join() argument must be str or bytes, not 'tuple'\",\n  \"errorType\": \"APIError\",\n  \"stackTrace\": [\n    \"  File \\\"\/var\/task\/lambda_function.py\\\", line 33, in lambda_handler\\n    trading.login()\\n\",\n    \"  File \\\"\/opt\/python\/lib\/python3.7\/site-packages\/betfairlightweight\/endpoints\/login.py\\\", line 31, in __call__\\n    self.url, session=session\\n\",\n    \"  File \\\"\/opt\/python\/lib\/python3.7\/site-packages\/betfairlightweight\/endpoints\/login.py\\\", line 53, in request\\n    raise APIError(None, exception=e)\\n\"\n  ]\n}\n\nRequest ID:\n\"f4b6780c-fb3a-485f-881d-3fc75f1cfddd\"\n\nFunction Logs:\nSTART RequestId: f4b6780c-fb3a-485f-881d-3fc75f1cfddd Version: $LATEST\n[ERROR] APIError: None\nParams: None\nException: join() argument must be str or bytes, not 'tuple'\nTraceback (most recent call last):\n  File \"\/var\/task\/lambda_function.py\", line 33, in lambda_handler\n    trading.login()\n  File \"\/opt\/python\/lib\/python3.7\/site-packages\/betfairlightweight\/endpoints\/login.py\", line 31, in __call__\n    self.url, session=session\n  File \"\/opt\/python\/lib\/python3.7\/site-packages\/betfairlightweight\/endpoints\/login.py\", line 53, in request\n    raise APIError(None, exception=e)\nEND RequestId: f4b6780c-fb3a-485f-881d-3fc75f1cfddd\nREPORT RequestId: f4b6780c-fb3a-485f-881d-3fc75f1cfddd\tDuration: 19.17 ms\tBilled Duration: 100 ms\tMemory Size: 128 MB\tMax Memory Used: 85 MB\tInit Duration: 782.62 ms",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf233830eb55",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f233830eb55edc6eade0df2e458b0ee8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0000-72.png",
            "first_name": "Francis",
            "real_name": "Francis Taylor",
            "display_name": "fjt1973",
            "team": "T4G9NBD2M",
            "name": "francis_taylor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593344424.109900",
        "parent_user_id": "U4H19D1D2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MTM+i",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So this is my handler, very basic to return the balalce of my account.\n\ndef lambda_handler(event, context):\n    # TODO implement\n    trading = betfairlightweight.APIClient(username=my_username,\n                                       password=my_password,\n                                       app_key=my_app_key,\n                                       certs=certs_path)\n\n    trading.login()\n    account_funds = trading.account.get_account_funds()\n    balance = account_funds.available_to_bet_balance\n    return balance\n    #return {\n    #    'statusCode': 200,\n    #    'body': json.dumps('Hello from Lambda!')\n    #}\n\nAnd this is the execution results\n\nResponse:\n{\n  \"errorMessage\": \"None \\nParams: None \\nException: join() argument must be str or bytes, not 'tuple'\",\n  \"errorType\": \"APIError\",\n  \"stackTrace\": [\n    \"  File \\\"\/var\/task\/lambda_function.py\\\", line 33, in lambda_handler\\n    trading.login()\\n\",\n    \"  File \\\"\/opt\/python\/lib\/python3.7\/site-packages\/betfairlightweight\/endpoints\/login.py\\\", line 31, in __call__\\n    self.url, session=session\\n\",\n    \"  File \\\"\/opt\/python\/lib\/python3.7\/site-packages\/betfairlightweight\/endpoints\/login.py\\\", line 53, in request\\n    raise APIError(None, exception=e)\\n\"\n  ]\n}\n\nRequest ID:\n\"f4b6780c-fb3a-485f-881d-3fc75f1cfddd\"\n\nFunction Logs:\nSTART RequestId: f4b6780c-fb3a-485f-881d-3fc75f1cfddd Version: $LATEST\n[ERROR] APIError: None\nParams: None\nException: join() argument must be str or bytes, not 'tuple'\nTraceback (most recent call last):\n  File \"\/var\/task\/lambda_function.py\", line 33, in lambda_handler\n    trading.login()\n  File \"\/opt\/python\/lib\/python3.7\/site-packages\/betfairlightweight\/endpoints\/login.py\", line 31, in __call__\n    self.url, session=session\n  File \"\/opt\/python\/lib\/python3.7\/site-packages\/betfairlightweight\/endpoints\/login.py\", line 53, in request\n    raise APIError(None, exception=e)\nEND RequestId: f4b6780c-fb3a-485f-881d-3fc75f1cfddd\nREPORT RequestId: f4b6780c-fb3a-485f-881d-3fc75f1cfddd\tDuration: 19.17 ms\tBilled Duration: 100 ms\tMemory Size: 128 MB\tMax Memory Used: 85 MB\tInit Duration: 782.62 ms"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUE6E1LA1",
        "type": "message",
        "ts": "1593348972.111700",
        "client_msg_id": "05e20f83-19d3-4c7f-9d57-a24ecaaaa543",
        "text": "Does anyone know if it is possible to get the venue going info over the API? It gets displayed on racing summary on the main Betfair home page (exchange) so wondering if this is a timeform thing or if this can get pulled from the race update API ?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf53cae45edd",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f53cae45edd7f7b67bbe98819597612e.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "D C",
            "display_name": "D C",
            "team": "T4G9NBD2M",
            "name": "oddsvantage",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9Ug",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Does anyone know if it is possible to get the venue going info over the API? It gets displayed on racing summary on the main Betfair home page (exchange) so wondering if this is a timeform thing or if this can get pulled from the race update API ?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1593349019.112100",
        "client_msg_id": "3B63A2C0-DE28-4DA6-8302-C7195E3728BE",
        "text": "Yeah it’s in the market definition in streaming ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JmbyK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah it’s in the market definition in streaming "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1593349026.112400",
        "client_msg_id": "EC6D47FC-D313-4291-ADA2-7B689963B269",
        "text": "Event venue I think?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FCQOi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Event venue I think?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUE6E1LA1",
        "type": "message",
        "ts": "1593349151.112600",
        "client_msg_id": "c3dd2fc9-6ab1-48fb-94b4-6f5b2fc9a001",
        "text": "Thanks",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf53cae45edd",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f53cae45edd7f7b67bbe98819597612e.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "D C",
            "display_name": "D C",
            "team": "T4G9NBD2M",
            "name": "oddsvantage",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "U8zW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1593349641.113000",
        "client_msg_id": "C9BCBE2E-B709-4F16-BBE1-D8561B0610E9",
        "text": "Yeah it’s in there live but not historic",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hfS+d",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah it’s in there live but not historic"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUE6E1LA1",
        "type": "message",
        "ts": "1593349722.113900",
        "client_msg_id": "10feb651-384e-4e06-a2f9-140fdceed740",
        "text": "So you should get it when you first subscribe assuming you ask for market definition? Does it update if the going changes or is that asking too much?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf53cae45edd",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f53cae45edd7f7b67bbe98819597612e.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "D C",
            "display_name": "D C",
            "team": "T4G9NBD2M",
            "name": "oddsvantage",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uTdc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So you should get it when you first subscribe assuming you ask for market definition? Does it update if the going changes or is that asking too much?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1593349826.114500",
        "client_msg_id": "DEE13034-148B-46EE-8200-22BC2EC1D2B8",
        "text": "Oh the going... I thought you were just asking for the venue",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ULC8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh the going... I thought you were just asking for the venue"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1593349837.114900",
        "client_msg_id": "C3069820-B448-4F87-B219-3A4F376FB628",
        "text": "Get it from the race card",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Dnt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Get it from the race card"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUE6E1LA1",
        "type": "message",
        "ts": "1593349874.115600",
        "client_msg_id": "af6e01eb-be7c-4826-922c-2491f387bc77",
        "text": "Sorry yeah maybe I should have been clearer. How do you get it from the race card? I know there is a different API for race status (going down, at the post etc) - is it part of that API ?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf53cae45edd",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f53cae45edd7f7b67bbe98819597612e.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "D C",
            "display_name": "D C",
            "team": "T4G9NBD2M",
            "name": "oddsvantage",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+grbd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sorry yeah maybe I should have been clearer. How do you get it from the race card? I know there is a different API for race status (going down, at the post etc) - is it part of that API ?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1593349984.116600",
        "client_msg_id": "DFD573E3-276F-4540-A901-4EBEF3FE6C7B",
        "text": "That’s the race status API, different to the race card endpoint ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "M+E8C",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That’s the race status API, different to the race card endpoint "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1593350020.117100",
        "client_msg_id": "5577FE3E-9263-4DD5-814D-4986A984E167",
        "text": "<https:\/\/github.com\/liampauling\/betfair\/blob\/master\/betfairlightweight\/endpoints\/racecard.py|https:\/\/github.com\/liampauling\/betfair\/blob\/master\/betfairlightweight\/endpoints\/racecard.py>",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "fallback": "[liampauling\/betfair] betfairlightweight\/endpoints\/racecard.py",
                "text": "```\nimport re\nimport time\nimport requests\nfrom typing import Union, List\n\nfrom ..exceptions import APIError, RaceCardError, InvalidResponse\nfrom ..utils import check_status_code\nfrom .baseendpoint import BaseEndpoint\nfrom .. import resources\nfrom ..compat import json\n\n\nclass RaceCard(BaseEndpoint):\n    \"\"\"\n    RaceCard operations.\n    \"\"\"\n\n    app_key = None\n\n    def login(self, session: requests.Session = None) -&gt; None:\n        \"\"\"\n        Parses app key from betfair exchange site.\n\n        :param requests.session session: Requests session object\n        \"\"\"\n        session = session or self.client.session\n        try:\n            response = session.get(self.login_url)\n        except requests.ConnectionError as e:\n            raise APIError(None, self.login_url, None, e)\n        except Exception as e:\n            raise APIError(None, self.login_url, None, e)\n        app_key = re.findall(\n            r'''\"appKey\":\\s\"(.*?)\"''', response.content.decode(\"utf-8\")\n        )\n        if app_key:\n            self.app_key = app_key[0]\n        else:\n            raise RaceCardError(\"Unable to find appKey\")\n\n    def get_race_card(\n        self,\n        market_ids: list,\n        data_entries: str = None,\n        session: requests.Session = None,\n        lightweight: bool = False,\n    ) -&gt; Union[list, List[resources.RaceCard]]:\n        \"\"\"\n        Returns a list of race cards based on market ids provided.\n\n        :param list market_ids: The filter to select desired markets\n        :param str data_entries: Data to be returned\n        :param requests.session session: Requests session object\n        :param bool lightweight: If True will return dict not a resource\n\n        :rtype: list[resources.RaceCard]\n        \"\"\"\n        if not self.app_key:\n            raise RaceCardError(\n                \"You need to login before requesting a race_card\\n\"\n                \"APIClient.race_card.login()\"\n            )\n        params = self.create_race_card_req(market_ids, data_entries)\n        (response, response_json, elapsed_time) = self.request(\n            \"raceCard\", params=params, session=session\n        )\n        return self.process_response(\n            response, response_json, resources.RaceCard, elapsed_time, lightweight\n        )\n\n    def get_race_result(\n        self,\n        market_ids: list,\n        data_entries: str = None,\n        session: requests.Session = None,\n        lightweight: bool = True,\n    ) -&gt; list:\n        \"\"\"\n        Returns a list of race results based on event ids provided.\n\n        :param list market_ids: The filter to select desired events\n        :param str data_entries: Data to be returned\n        :param requests.session session: Requests session object\n        :param bool lightweight: If True will return dict not a resource\n\n        :rtype: list[resources.RaceResult]\n        \"\"\"\n        if not self.app_key:\n            raise RaceCardError(\n                \"You need to login before requesting a race_card\\n\"\n                \"APIClient.race_card.login()\"\n            )\n        params = self.create_race_result_req(market_ids, data_entries)\n        (response, response_json, elapsed_time) = self.request(\n            \"raceResults\", params=params, session=session\n        )\n        return self.process_response(\n            response, response_json, None, elapsed_time, lightweight\n        )\n\n    def request(\n        self, method: str = None, params: dict = None, session: requests.Session = None\n    ) -&gt; (dict, float):\n        session = session or self.client.session\n        time_sent = time.time()\n        url = \"%s%s\" % (self.url, method)\n        try:\n            response = session.get(url, params=params, headers=self.headers)\n        except requests.ConnectionError as e:\n            raise APIError(None, method, params, e)\n        except Exception as e:\n            raise APIError(None, method, params, e)\n        elapsed_time = time.time() - time_sent\n\n        check_status_code(response)\n        try:\n            response_json = json.loads(response.content.decode(\"utf-8\"))\n        except ValueError:\n            raise InvalidResponse(response.text)\n\n        return response, response_json, elapsed_time\n\n    @staticmethod\n    def create_race_card_req(market_ids: list, data_entries: str) -&gt; dict:\n        if not data_entries:\n            data_entries = \"RACE, TIMEFORM_DATA, RUNNERS, RUNNER_DETAILS\"\n        return {\"dataEntries\": data_entries, \"marketId\": \",\".join(market_ids)}\n\n    @staticmethod\n    def create_race_result_req(market_ids: list, data_entries: str) -&gt; dict:\n        if not data_entries:\n            data_entries = \"RUNNERS, MARKETS, PRICES, RACE, COURSE\"\n        return {\n            \"dataEntries\": data_entries,\n            \"marketId\": \",\".join(market_ids),\n            \"sortBy\": \"DATE_DESC\",\n        }\n\n    @property\n    def headers(self) -&gt; dict:\n        return {\n            \"Connection\": \"keep-alive\",\n            \"Content-Type\": \"application\/json\",\n            \"X-Application\": self.app_key,\n        }\n\n    @property\n    def login_url(self) -&gt; str:\n        return \"<https:\/\/www.betfair.com\/exchange\/plus\/>\"\n\n    @property\n    def url(self) -&gt; str:\n        return \"<https:\/\/www.betfair.com\/rest\/v2\/>\"\n\n```",
                "title": "betfairlightweight\/endpoints\/racecard.py",
                "footer": "<https:\/\/github.com\/liampauling\/betfair|liampauling\/betfair>",
                "id": 1,
                "title_link": "https:\/\/github.com\/liampauling\/betfair\/blob\/master\/betfairlightweight\/endpoints\/racecard.py",
                "footer_icon": "https:\/\/github.githubassets.com\/favicon.ico",
                "color": "24292f",
                "mrkdwn_in": [
                    "text"
                ],
                "bot_id": "B01144Z0734",
                "app_unfurl_url": "https:\/\/github.com\/liampauling\/betfair\/blob\/master\/betfairlightweight\/endpoints\/racecard.py",
                "is_app_unfurl": true
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CTxZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/liampauling\/betfair\/blob\/master\/betfairlightweight\/endpoints\/racecard.py",
                                "text": "https:\/\/github.com\/liampauling\/betfair\/blob\/master\/betfairlightweight\/endpoints\/racecard.py"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUE6E1LA1",
        "type": "message",
        "ts": "1593350024.117500",
        "client_msg_id": "743db437-81e5-4498-9f15-fbcbb18ddb5a",
        "text": "Hmm ok so what is the race card endpoint? Sorry for being dense but I have not heard of that one yet",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf53cae45edd",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f53cae45edd7f7b67bbe98819597612e.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "D C",
            "display_name": "D C",
            "team": "T4G9NBD2M",
            "name": "oddsvantage",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gSFhQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hmm ok so what is the race card endpoint? Sorry for being dense but I have not heard of that one yet"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1593350029.117800",
        "client_msg_id": "BF98EDB4-0792-4813-A36D-4AC0358F243B",
        "text": "It’s undocumented but very useful",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LxFgR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It’s undocumented but very useful"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUE6E1LA1",
        "type": "message",
        "ts": "1593350056.118200",
        "client_msg_id": "c36597f8-c633-40e4-a6bb-fdb4c0c76055",
        "text": "Is this another API provided by betfair?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf53cae45edd",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f53cae45edd7f7b67bbe98819597612e.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "D C",
            "display_name": "D C",
            "team": "T4G9NBD2M",
            "name": "oddsvantage",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=c2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is this another API provided by betfair?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1593350085.118600",
        "edited": {
            "user": "UBS7QANF3",
            "ts": "1593350103.000000"
        },
        "client_msg_id": "0C0800DE-AEA2-442E-82FA-2BD05184846B",
        "text": "It’s an “internal” endpoint used by the Betfair website\/mobile app",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Viz3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It’s an “internal” endpoint used by the Betfair website\/mobile app"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUE6E1LA1",
        "type": "message",
        "ts": "1593350113.119100",
        "client_msg_id": "b687ce46-8fd3-4538-9aa4-1b1665516f26",
        "text": "OK thanks. Ill look at that python and convert it to C++. Many thanks",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf53cae45edd",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f53cae45edd7f7b67bbe98819597612e.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "D C",
            "display_name": "D C",
            "team": "T4G9NBD2M",
            "name": "oddsvantage",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1b0W",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "OK thanks. Ill look at that python and convert it to C++. Many thanks"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1593350574.120400",
        "client_msg_id": "A1E4231F-3E4E-48A4-B81A-0325B520F6C1",
        "text": "Sorry you didn’t get any replies to this yet, there has been a lot of chat about this recently. I think <@U013MLED3V1> and <@U0155J92A7Q> were involved. Can you guys help?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593345038.110100",
        "parent_user_id": "U01661QJJTV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "un=H+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sorry you didn’t get any replies to this yet, there has been a lot of chat about this recently. I think "
                            },
                            {
                                "type": "user",
                                "user_id": "U013MLED3V1"
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "user",
                                "user_id": "U0155J92A7Q"
                            },
                            {
                                "type": "text",
                                "text": " were involved. Can you guys help?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01661QJJTV",
        "type": "message",
        "ts": "1593353663.120600",
        "client_msg_id": "b2cd6e00-7cb8-4cfd-af9b-5882b8871bac",
        "text": "I'm wasting time on something that will definitely be a banal.\nin part with\ntrading.betting.list_current_orders () .__ dict__\nI get the dictionary of all open orders.\n\nmy intention would be to take the size and initial odds to calculate the exit.\n\ntherefore in fact a for loop with all the orders that, when it arrives at the market (example 1.XXXXXXX), takes the data calculates the size and executes the opposite bet.\n\nthe problem is very simple, I cannot cycle the elements obtained from trading.betting.list_current_orders () .__ dict__  using them as an array",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "09265f28fc64",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-05\/1223195521283_09265f28fc64d740e6a9_72.png",
            "first_name": "",
            "real_name": "sartux",
            "display_name": "sartux",
            "team": "T4G9NBD2M",
            "name": "sartuxtips",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593345038.110100",
        "parent_user_id": "U01661QJJTV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qfBd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm wasting time on something that will definitely be a banal.\nin part with\ntrading.betting.list_current_orders () .__ dict__\nI get the dictionary of all open orders.\n\nmy intention would be to take the size and initial odds to calculate the exit.\n\ntherefore in fact a for loop with all the orders that, when it arrives at the market (example 1.XXXXXXX), takes the data calculates the size and executes the opposite bet.\n\nthe problem is very simple, I cannot cycle the elements obtained from trading.betting.list_current_orders () .__ dict__  using them as an array"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01661QJJTV",
        "type": "message",
        "ts": "1593355092.120800",
        "client_msg_id": "25d8cd6b-c6b6-4c4f-ad5e-21039e798881",
        "text": "In documentation example, I am unable to transform the _data into an array and therefore I cannot read the odds and the size\n\n```trading.betting.list_current_orders(customer_strategy_refs=['back_the_fav']).__dict__\nOut[311]:\n{'_data': {'currentOrders': [{'averagePriceMatched': 0.0,\n    'betId': '142384852665',\n    'bspLiability': 0.0,\n    'customerStrategyRef': 'back_the_fav',\n    'handicap': 0.0,\n    'marketId': '1.150038686',\n    'orderType': 'LIMIT',\n    'persistenceType': 'LAPSE',\n    'placedDate': '2018-10-26T00:46:46.000Z',\n    'priceSize': {'price': 7.0, 'size': 5.0},\n    'regulatorCode': 'MALTA LOTTERIES AND GAMBLING AUTHORITY',\n    'selectionId': 21283271,\n    'side': 'BACK',\n    'sizeCancelled': 0.0,\n    'sizeLapsed': 0.0,\n    'sizeMatched': 0.0,\n    'sizeRemaining': 5.0,\n    'sizeVoided': 0.0,\n    'status': 'EXECUTABLE'}],\n  'moreAvailable': False},\n '_datetime_created': datetime.datetime(2018, 10, 26, 2, 14, 56, 84036),\n '_datetime_updated': datetime.datetime(2018, 10, 26, 2, 14, 56, 84036),\n 'elapsed_time': 1.327456,\n 'more_available': False,\n 'orders': [&lt;betfairlightweight.resources.bettingresources.CurrentOrder at 0x23e0e7acd30&gt;],\n 'publish_time': None,\n 'streaming_unique_id': None,\n 'streaming_update': None}```\n",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "09265f28fc64",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-05\/1223195521283_09265f28fc64d740e6a9_72.png",
            "first_name": "",
            "real_name": "sartux",
            "display_name": "sartux",
            "team": "T4G9NBD2M",
            "name": "sartuxtips",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593345038.110100",
        "parent_user_id": "U01661QJJTV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hRj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In documentation example, I am unable to transform the _data into an array and therefore I cannot read the odds and the size\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "trading.betting.list_current_orders(customer_strategy_refs=['back_the_fav']).__dict__\nOut[311]:\n{'_data': {'currentOrders': [{'averagePriceMatched': 0.0,\n    'betId': '142384852665',\n    'bspLiability': 0.0,\n    'customerStrategyRef': 'back_the_fav',\n    'handicap': 0.0,\n    'marketId': '1.150038686',\n    'orderType': 'LIMIT',\n    'persistenceType': 'LAPSE',\n    'placedDate': '2018-10-26T00:46:46.000Z',\n    'priceSize': {'price': 7.0, 'size': 5.0},\n    'regulatorCode': 'MALTA LOTTERIES AND GAMBLING AUTHORITY',\n    'selectionId': 21283271,\n    'side': 'BACK',\n    'sizeCancelled': 0.0,\n    'sizeLapsed': 0.0,\n    'sizeMatched': 0.0,\n    'sizeRemaining': 5.0,\n    'sizeVoided': 0.0,\n    'status': 'EXECUTABLE'}],\n  'moreAvailable': False},\n '_datetime_created': datetime.datetime(2018, 10, 26, 2, 14, 56, 84036),\n '_datetime_updated': datetime.datetime(2018, 10, 26, 2, 14, 56, 84036),\n 'elapsed_time': 1.327456,\n 'more_available': False,\n 'orders': [<betfairlightweight.resources.bettingresources.CurrentOrder at 0x23e0e7acd30>],\n 'publish_time': None,\n 'streaming_unique_id': None,\n 'streaming_update': None}"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": []
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1593356456.121000",
        "client_msg_id": "dbdc0f5d-5dcb-4e90-bc63-f012df2949bc",
        "text": "1. Don't use `___dict___`, set the `lightweight` argument of `list_current_orders` to `True` if you want to get a `dict` back\n2. Why can't you read the odds and size? e.g.\n```for order in x['_data']['currentOrders']:\n    price = order['priceSize']['price']\n    size = order['priceSize']['size']```",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593345038.110100",
        "parent_user_id": "U01661QJJTV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ayt",
                "elements": [
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Don't use "
                                    },
                                    {
                                        "type": "text",
                                        "text": "__",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": "dict_",
                                        "style": {
                                            "italic": true,
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": "_",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": ", set the "
                                    },
                                    {
                                        "type": "text",
                                        "text": "lightweight",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " argument of "
                                    },
                                    {
                                        "type": "text",
                                        "text": "list_current_orders",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " to "
                                    },
                                    {
                                        "type": "text",
                                        "text": "True",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " if you want to get a "
                                    },
                                    {
                                        "type": "text",
                                        "text": "dict",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " back"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Why can't you read the odds and size? e.g."
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "for order in x['_data']['currentOrders']:\n    price = order['priceSize']['price']\n    size = order['priceSize']['size']"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFTBRB3F1",
        "type": "message",
        "ts": "1593357580.124300",
        "client_msg_id": "b800df1b-2297-469a-8d1a-12630576e361",
        "text": "When using replace_orders, the order appears to be replaced with the same customer_order_ref (i.e. if I check afterwards I can see that), however the cancel_orders and place_orders reports that are returned during the replace call always show the order ref as None.\n\nObviously that's easy enough to work around, but is that intentional behaviour (i.e. it shouldn't return it) or is that a bug?\n\nAs a side point, is there any way to change the customer order ref during the replace call?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g771e110be94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a771e110be945b86bede9d5c1bb551e3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Newbie99",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "vjmehra",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gaqf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "When using replace_orders, the order appears to be replaced with the same customer_order_ref (i.e. if I check afterwards I can see that), however the cancel_orders and place_orders reports that are returned during the replace call always show the order ref as None.\n\nObviously that's easy enough to work around, but is that intentional behaviour (i.e. it shouldn't return it) or is that a bug?\n\nAs a side point, is there any way to change the customer order ref during the replace call?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1593360904.125500",
        "client_msg_id": "EA7B67CF-4E74-435B-8069-C6D9FCEA5A07",
        "text": "Yeah this a betfair ‘feature’ replace orders uses the same reference, which is a real pain as it is technically a cancel and a new place ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GsS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah this a betfair ‘feature’ replace orders uses the same reference, which is a real pain as it is technically a cancel and a new place "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFTBRB3F1",
        "type": "message",
        "ts": "1593361009.125900",
        "client_msg_id": "fbb99c35-f481-4adc-8161-6a53bda38499",
        "text": "Ah well, it is what it is! Thanks for clarifying",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g771e110be94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a771e110be945b86bede9d5c1bb551e3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Newbie99",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "vjmehra",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hBb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah well, it is what it is! Thanks for clarifying"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1593364743.127700",
        "client_msg_id": "7CCA6D76-146D-4652-B416-5549077BC8E8",
        "text": "Bit confused by this tbh, it looks like it’s coming from requests but I am not sure why, does the lambda function have access to the internet? Can you try a requests.get to google or similar? ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593344424.109900",
        "parent_user_id": "U4H19D1D2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QZF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Bit confused by this tbh, it looks like it’s coming from requests but I am not sure why, does the lambda function have access to the internet? Can you try a requests.get to google or similar? "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0155J92A7Q",
        "type": "message",
        "ts": "1593369943.129100",
        "client_msg_id": "2b5ad0e5-5205-403a-8ead-52c62b713817",
        "text": "Hey guys, does anyone know what is \/usr\/bin\/fail2ban-server ?? I had problems with Python scripts using a lot of RAM memory and I have found out it is actually because of some executions of this....",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gde8c5d51af5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/de8c5d51af54a5ac7b501f416ddb262c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "",
            "real_name": "Jorge",
            "display_name": "Jorge",
            "team": "T4G9NBD2M",
            "name": "jgarciam95",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "a9L\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hey guys, does anyone know what is \/usr\/bin\/fail2ban-server ?? I had problems with Python scripts using a lot of RAM memory and I have found out it is actually because of some executions of this...."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1593370000.129700",
        "client_msg_id": "6a2b4ae4-54e6-4dcf-9419-96f492274825",
        "text": "fail2ban is a program that bans IP addresses that make repeated failed login attempts",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CdV+4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "fail2ban is a program that bans IP addresses that make repeated failed login attempts"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0155J92A7Q",
        "type": "message",
        "ts": "1593370094.131100",
        "client_msg_id": "8316c3d9-1dd6-465b-ac22-12ab9f995a01",
        "text": "Aha, and why would I have 5 processes running *python \/usr\/bin\/fail2ban-server -xf start* in my server?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gde8c5d51af5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/de8c5d51af54a5ac7b501f416ddb262c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "",
            "real_name": "Jorge",
            "display_name": "Jorge",
            "team": "T4G9NBD2M",
            "name": "jgarciam95",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "V7k",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Aha, and why would I have 5 processes running "
                            },
                            {
                                "type": "text",
                                "text": "python \/usr\/bin\/fail2ban-server -xf start ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "in my server?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1593370122.131900",
        "client_msg_id": "e3858f2d-94fe-419c-9318-9a293e355310",
        "text": "Where is this server hosted?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lssbO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Where is this server hosted?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0155J92A7Q",
        "type": "message",
        "ts": "1593370169.132400",
        "client_msg_id": "fc1c6335-a517-48dd-8302-ff94ee611bc2",
        "text": "Netherlands",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gde8c5d51af5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/de8c5d51af54a5ac7b501f416ddb262c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "",
            "real_name": "Jorge",
            "display_name": "Jorge",
            "team": "T4G9NBD2M",
            "name": "jgarciam95",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RJ9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Netherlands"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1593370185.132700",
        "client_msg_id": "42237e79-d58d-45ce-ab35-5eed67dc3d49",
        "text": "I mean is it in a cloud service like AWS?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rU+u",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I mean is it in a cloud service like AWS?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0155J92A7Q",
        "type": "message",
        "ts": "1593370243.133500",
        "client_msg_id": "c9114cca-f99a-4f29-9889-447be80ce061",
        "text": "It's a cloud service, a VPC",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gde8c5d51af5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/de8c5d51af54a5ac7b501f416ddb262c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "",
            "real_name": "Jorge",
            "display_name": "Jorge",
            "team": "T4G9NBD2M",
            "name": "jgarciam95",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HQN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's a cloud service, a VPC"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "URJ3S00BX",
        "type": "message",
        "ts": "1593370246.133600",
        "client_msg_id": "b83516f9-2d0a-4cba-bbc5-1336f4be2ec4",
        "text": "Thanks for commenting.. I'll try uploading the libraries with my code as package to the function as opposed to using layers for my libraries. AWS is just something I've just starting to look at.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf233830eb55",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f233830eb55edc6eade0df2e458b0ee8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0000-72.png",
            "first_name": "Francis",
            "real_name": "Francis Taylor",
            "display_name": "fjt1973",
            "team": "T4G9NBD2M",
            "name": "francis_taylor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593344424.109900",
        "parent_user_id": "U4H19D1D2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "y96",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for commenting.. I'll try uploading the libraries with my code as package to the function as opposed to using layers for my libraries. AWS is just something I've just starting to look at."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1593370250.133800",
        "client_msg_id": "3f46f694-165d-4c18-9bfe-1f48dc21655c",
        "text": "If you don't have some kind of firewall in front of the server then you will have all kinds of attempts to get into the box",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6wge",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If you don't have some kind of firewall in front of the server then you will have all kinds of attempts to get into the box"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0155J92A7Q",
        "type": "message",
        "ts": "1593370310.134600",
        "client_msg_id": "152d8645-c1cc-48af-85dc-307a66270446",
        "text": "Ah so is it a security problem that I am getting people to try to connect to my VPC? I don't use AWS, it's a smaller provider",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gde8c5d51af5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/de8c5d51af54a5ac7b501f416ddb262c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "",
            "real_name": "Jorge",
            "display_name": "Jorge",
            "team": "T4G9NBD2M",
            "name": "jgarciam95",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZEMVT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah so is it a security problem that I am getting people to try to connect to my VPC? I don't use AWS, it's a smaller provider"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1593370325.135000",
        "client_msg_id": "7d91d3d0-7e34-4845-bc0e-734ddbbcd848",
        "text": "Yes, exactly",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zNl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes, exactly"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0155J92A7Q",
        "type": "message",
        "ts": "1593370400.135900",
        "client_msg_id": "2a2b28e6-bcd4-4f3d-b966-5b70c33794e3",
        "text": "Okay thanks! Should I ask the provider to set up a Firewall or can I do it in the Linux console?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gde8c5d51af5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/de8c5d51af54a5ac7b501f416ddb262c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "",
            "real_name": "Jorge",
            "display_name": "Jorge",
            "team": "T4G9NBD2M",
            "name": "jgarciam95",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+g9mD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Okay thanks! Should I ask the provider to set up a Firewall or can I do it in the Linux console?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1593370419.136100",
        "client_msg_id": "8a402205-eacb-4039-bbb6-74d86fa799af",
        "text": "Using fail2ban is good practice; as to why there are 5 processes, I can't say whether that is normal or not and whether it might reflect the number of attempts to get into the box",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jGbfj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Using fail2ban is good practice; as to why there are 5 processes, I can't say whether that is normal or not and whether it might reflect the number of attempts to get into the box"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0159ENQVBP"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1593370472.136900",
        "client_msg_id": "bbd0c3d7-dcdc-46e5-97af-be93c419b001",
        "text": "I don't know what kind of capabilities your host provides but for example on AWS you can have a security policy that only allows access to the box from certain IP addresses",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Lll3B",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't know what kind of capabilities your host provides but for example on AWS you can have a security policy that only allows access to the box from certain IP addresses"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U4H19D1D2",
                    "U0155J92A7Q"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1593370565.137500",
        "edited": {
            "user": "UBS7QANF3",
            "ts": "1593370590.000000"
        },
        "client_msg_id": "02d1a590-23cc-42dc-b25a-9cf9503bd69f",
        "text": "Basically you want a way of applying the IP filtering before the traffic even reaches the box to prevent it from having to waste CPU cycles dealing with it",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "n+FI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Basically you want a way of applying the IP filtering before the traffic even reaches the box to prevent it from having to waste CPU cycles dealing with it"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0155J92A7Q",
        "type": "message",
        "ts": "1593370644.138100",
        "client_msg_id": "1ca3cc5f-4e4e-40ea-b863-82cbe42ae9f8",
        "text": "I see, thanks so much! It is really killing my RAM",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gde8c5d51af5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/de8c5d51af54a5ac7b501f416ddb262c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "",
            "real_name": "Jorge",
            "display_name": "Jorge",
            "team": "T4G9NBD2M",
            "name": "jgarciam95",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hs4w",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I see, thanks so much! It is really killing my RAM"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01661QJJTV",
        "type": "message",
        "ts": "1593371564.138400",
        "client_msg_id": "d048f450-d1d7-45a1-a793-263058223a62",
        "text": "```td = trading.betting.list_current_orders(lightweight=True)\n\nfor i,dd in td['currentOrders']:\n    print(dd['marketId'])```\nWhere is the error?\nValueError: too many values to unpack (expected 2)",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "09265f28fc64",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-05\/1223195521283_09265f28fc64d740e6a9_72.png",
            "first_name": "",
            "real_name": "sartux",
            "display_name": "sartux",
            "team": "T4G9NBD2M",
            "name": "sartuxtips",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593345038.110100",
        "parent_user_id": "U01661QJJTV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "22Ov",
                "elements": [
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "td = trading.betting.list_current_orders(lightweight=True)\n\nfor i,dd in td['currentOrders']:\n    print(dd['marketId'])"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Where is the error?\nValueError: too many values to unpack (expected 2)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1593371971.139000",
        "client_msg_id": "81470ECA-34A9-44AD-B726-D74B7993D2ED",
        "text": "i, dd ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593345038.110100",
        "parent_user_id": "U01661QJJTV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+w7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i, dd "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1593371974.139300",
        "edited": {
            "user": "UBS7QANF3",
            "ts": "1593371981.000000"
        },
        "client_msg_id": "98078C6E-E1E8-4A98-B752-171E79D82D0C",
        "text": "What is i?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593345038.110100",
        "parent_user_id": "U01661QJJTV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fWLC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What is i?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01661QJJTV",
        "type": "message",
        "ts": "1593372463.139600",
        "client_msg_id": "6e23fbde-2d82-4d42-8db4-47483d1a5fd1",
        "text": "index and value",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "09265f28fc64",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-05\/1223195521283_09265f28fc64d740e6a9_72.png",
            "first_name": "",
            "real_name": "sartux",
            "display_name": "sartux",
            "team": "T4G9NBD2M",
            "name": "sartuxtips",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593345038.110100",
        "parent_user_id": "U01661QJJTV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/Hhu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "index and value"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01661QJJTV",
        "type": "message",
        "ts": "1593372563.139800",
        "client_msg_id": "cabdcf95-f7bf-45fa-b015-95853c864082",
        "text": "my bad ... now work thx",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "09265f28fc64",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-05\/1223195521283_09265f28fc64d740e6a9_72.png",
            "first_name": "",
            "real_name": "sartux",
            "display_name": "sartux",
            "team": "T4G9NBD2M",
            "name": "sartuxtips",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593345038.110100",
        "parent_user_id": "U01661QJJTV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "B86\/B",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "my bad ... now work thx"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1593372593.140300",
        "client_msg_id": "4ACF5F82-1319-448F-A43C-4C11D5AB6451",
        "text": "Use enumerate if you want index and value",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593345038.110100",
        "parent_user_id": "U01661QJJTV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tdG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Use enumerate if you want index and value"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U01661QJJTV"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U01661QJJTV",
        "type": "message",
        "ts": "1593372867.140500",
        "client_msg_id": "2cc73039-347f-4298-abf7-18f772df3e2d",
        "text": "```td = trading.betting.list_current_orders(lightweight=True)\n\nfor d in td['currentOrders']:\n    print(d['marketId'])\n    price = d['priceSize']['price']\n    size = d['priceSize']['size']```\nnow is ok... you know the cash out formula?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "09265f28fc64",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-05\/1223195521283_09265f28fc64d740e6a9_72.png",
            "first_name": "",
            "real_name": "sartux",
            "display_name": "sartux",
            "team": "T4G9NBD2M",
            "name": "sartuxtips",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593345038.110100",
        "parent_user_id": "U01661QJJTV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LCcm",
                "elements": [
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "td = trading.betting.list_current_orders(lightweight=True)\n\nfor d in td['currentOrders']:\n    print(d['marketId'])\n    price = d['priceSize']['price']\n    size = d['priceSize']['size']"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "now is ok... you know the cash out formula?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01661QJJTV",
        "type": "message",
        "ts": "1593372973.140800",
        "client_msg_id": "18b5c608-e672-41d2-b61d-116b69ea8f67",
        "text": "lay amount = backed amount + (back profit \/ lay odds)\n\nis correct?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "09265f28fc64",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-05\/1223195521283_09265f28fc64d740e6a9_72.png",
            "first_name": "",
            "real_name": "sartux",
            "display_name": "sartux",
            "team": "T4G9NBD2M",
            "name": "sartuxtips",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593345038.110100",
        "parent_user_id": "U01661QJJTV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nmsQ\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "lay amount = backed amount + (back profit \/ lay odds)\n\nis correct?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01661QJJTV",
        "type": "message",
        "ts": "1593381599.141200",
        "client_msg_id": "bff0b600-a939-466b-99cf-dbbb62510145",
        "text": "do a check on the cycles you use, surely you can optimize the code by avoiding reading the same data several times.\nhelp yourself using a database or simply text files and above all decrease the number of lines when you do the for, a technique could be to use a lot of filters",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "09265f28fc64",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-05\/1223195521283_09265f28fc64d740e6a9_72.png",
            "first_name": "",
            "real_name": "sartux",
            "display_name": "sartux",
            "team": "T4G9NBD2M",
            "name": "sartuxtips",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rji2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "do a check on the cycles you use, surely you can optimize the code by avoiding reading the same data several times.\nhelp yourself using a database or simply text files and above all decrease the number of lines when you do the for, a technique could be to use a lot of filters"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFTBRB3F1",
        "type": "message",
        "ts": "1593381982.141300",
        "client_msg_id": "707320ed-8a9a-42ce-a216-8053f1f42c06",
        "text": "Its not as simple as that, in that there is are multiple ways to 'cash out' depending on exactly what you're looking to do. There has been a bit of chat about being able to place an API call to the actual Betfair cash out (private) API, but its not in the docs, so there isn't too much info on it (other than a bit on this chat a few days ago).\n\nIt may be worth having a quick search as you can see some of the recent chats about cash out logic and then hopefully someone will have attempted the same approach as you and will be able to help.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g771e110be94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a771e110be945b86bede9d5c1bb551e3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Newbie99",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "vjmehra",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593345038.110100",
        "parent_user_id": "U01661QJJTV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sSEOS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Its not as simple as that, in that there is are multiple ways to 'cash out' depending on exactly what you're looking to do. There has been a bit of chat about being able to place an API call to the actual Betfair cash out (private) API, but its not in the docs, so there isn't too much info on it (other than a bit on this chat a few days ago).\n\nIt may be worth having a quick search as you can see some of the recent chats about cash out logic and then hopefully someone will have attempted the same approach as you and will be able to help."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]