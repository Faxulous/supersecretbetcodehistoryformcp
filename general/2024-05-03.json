[
    {
        "user": "U06NPFY7Q1L",
        "type": "message",
        "ts": "1714740941.660439",
        "edited": {
            "user": "U06NPFY7Q1L",
            "ts": "1714740945.000000"
        },
        "client_msg_id": "95823ae0-e75d-4b5b-b487-b4bdb128a131",
        "text": "hi, when we create a trade I understand that we need to pass an instance of a strategy class, and then later we can access the orders unique to that strategy using blotter.strategy_orders and similar, however my question is what aspect of the class exactly determines this uniqueness - is it the memory location of the class, the name of the class, the hash of the class, or have i misunderstood the scenario? in short, I want to run multiple instances of flumine and selectively reference orders between the instances, but I'm struggling to work out how I can achieve that",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g39bdb83cd6b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/39bdb83cd6ba8ef8c65bd51a740032ea.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Bruno",
            "real_name": "Bruno Edwards",
            "display_name": "Bruno",
            "team": "T4G9NBD2M",
            "name": "bruno",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1714740941.660439",
        "reply_count": 23,
        "reply_users_count": 4,
        "latest_reply": "1714812768.674429",
        "reply_users": [
            "U06NPFY7Q1L",
            "U4H19D1D2",
            "U02RN7YDRQ9",
            "U0128E7BEHW"
        ],
        "replies": [
            {
                "user": "U06NPFY7Q1L",
                "ts": "1714741421.672859"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1714743257.274359"
            },
            {
                "user": "U06NPFY7Q1L",
                "ts": "1714743399.964329"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1714743416.425509"
            },
            {
                "user": "U06NPFY7Q1L",
                "ts": "1714743541.369629"
            },
            {
                "user": "U06NPFY7Q1L",
                "ts": "1714743556.175839"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1714743558.179969"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1714743567.650429"
            },
            {
                "user": "U06NPFY7Q1L",
                "ts": "1714743582.619099"
            },
            {
                "user": "U06NPFY7Q1L",
                "ts": "1714745481.205729"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1714745849.267029"
            },
            {
                "user": "U06NPFY7Q1L",
                "ts": "1714745897.062929"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1714749478.957659"
            },
            {
                "user": "U02RN7YDRQ9",
                "ts": "1714749651.432549"
            },
            {
                "user": "U06NPFY7Q1L",
                "ts": "1714750378.471899"
            },
            {
                "user": "U02RN7YDRQ9",
                "ts": "1714751579.613469"
            },
            {
                "user": "U06NPFY7Q1L",
                "ts": "1714752279.814069"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1714757176.526109"
            },
            {
                "user": "U06NPFY7Q1L",
                "ts": "1714757241.258909"
            },
            {
                "user": "U0128E7BEHW",
                "ts": "1714758215.228349"
            },
            {
                "user": "U06NPFY7Q1L",
                "ts": "1714758269.022479"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1714759590.800699"
            },
            {
                "user": "U02RN7YDRQ9",
                "ts": "1714812768.674429"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1714812768.674429",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DBwdo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "hi, when we create a trade I understand that we need to pass an instance of a strategy class, and then later we can access the orders unique to that strategy using blotter.strategy_orders and similar, however my question is what aspect of the class exactly determines this uniqueness - is it the memory location of the class, the name of the class, the hash of the class, or have i misunderstood the scenario? in short, I want to run multiple instances of flumine and selectively reference orders between the instances, but I'm struggling to work out how I can achieve that"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U06NPFY7Q1L",
        "type": "message",
        "ts": "1714741421.672859",
        "client_msg_id": "dd73f316-6a27-4d8b-97e7-5a9562f8040f",
        "text": "when I ran two strategies with the same name, it seemed they could see each others' orders, whereas once I changed the name of the classes this seemed to stop. is this related to strategy.name_hash?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g39bdb83cd6b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/39bdb83cd6ba8ef8c65bd51a740032ea.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Bruno",
            "real_name": "Bruno Edwards",
            "display_name": "Bruno",
            "team": "T4G9NBD2M",
            "name": "bruno",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1714740941.660439",
        "parent_user_id": "U06NPFY7Q1L",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eqgYb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "when I ran two strategies with the same name, it seemed they could see each others' orders, whereas once I changed the name of the classes this seemed to stop. is this related to strategy.name_hash?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1714743257.274359",
        "client_msg_id": "7857f2f7-a35c-4ed9-a204-faa905417652",
        "text": "the instances will filter based on the hostname, you change this in the config",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1714740941.660439",
        "parent_user_id": "U06NPFY7Q1L",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "owxFf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the instances will filter based on the hostname, you change this in the config"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U06NPFY7Q1L",
        "type": "message",
        "ts": "1714743399.964329",
        "client_msg_id": "752D5D5C-BD41-47F7-8BE9-512D0ECA5A47",
        "text": "is this for `blotter.client_orders` or `blotter.strategy_orders`?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g39bdb83cd6b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/39bdb83cd6ba8ef8c65bd51a740032ea.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Bruno",
            "real_name": "Bruno Edwards",
            "display_name": "Bruno",
            "team": "T4G9NBD2M",
            "name": "bruno",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1714740941.660439",
        "parent_user_id": "U06NPFY7Q1L",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qCZsd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "is this for "
                            },
                            {
                                "type": "text",
                                "text": "blotter.client_orders",
                                "style": {
                                    "bold": false,
                                    "italic": false,
                                    "strike": false,
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " or "
                            },
                            {
                                "type": "text",
                                "text": "blotter.strategy_orders",
                                "style": {
                                    "bold": false,
                                    "italic": false,
                                    "strike": false,
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1714743416.425509",
        "client_msg_id": "aa31e543-e48d-4f05-b829-a9de6d0d4770",
        "text": "everything",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1714740941.660439",
        "parent_user_id": "U06NPFY7Q1L",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ad4Zm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "everything"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U06NPFY7Q1L",
        "type": "message",
        "ts": "1714743541.369629",
        "client_msg_id": "309419BE-D61A-40A7-AA76-894406B56922",
        "text": "ok cool, so when I had 2 seperate instances of flumine running on the same machinec were their orders visible to each other through blotter.strategy_orders because the class names were the same?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g39bdb83cd6b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/39bdb83cd6ba8ef8c65bd51a740032ea.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Bruno",
            "real_name": "Bruno Edwards",
            "display_name": "Bruno",
            "team": "T4G9NBD2M",
            "name": "bruno",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1714740941.660439",
        "parent_user_id": "U06NPFY7Q1L",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "C32eR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "ok cool, so when I had 2 seperate instances of flumine running on the same machinec were their orders visible to each other through blotter.strategy_orders because the class names were the same?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U06NPFY7Q1L",
        "type": "message",
        "ts": "1714743556.175839",
        "client_msg_id": "98923644-29A7-4CD8-9B3D-2D479E56CCB6",
        "text": "because the name_hashes were the same?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g39bdb83cd6b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/39bdb83cd6ba8ef8c65bd51a740032ea.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Bruno",
            "real_name": "Bruno Edwards",
            "display_name": "Bruno",
            "team": "T4G9NBD2M",
            "name": "bruno",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1714740941.660439",
        "parent_user_id": "U06NPFY7Q1L",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pEDvw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "because the name_hashes were the same?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1714743558.179969",
        "client_msg_id": "52cbe609-340f-4426-b6c7-5db15b878d87",
        "text": "no",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1714740941.660439",
        "parent_user_id": "U06NPFY7Q1L",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "H6wa6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "no"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1714743567.650429",
        "client_msg_id": "60108198-5f1f-4a1e-8d57-e10e15bb3d3f",
        "text": "because of the hostname as mentioned above",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1714740941.660439",
        "parent_user_id": "U06NPFY7Q1L",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "psOl3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "because of the hostname as mentioned above"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U06NPFY7Q1L",
        "type": "message",
        "ts": "1714743582.619099",
        "client_msg_id": "C8C5E562-C084-47C7-9438-565DED363269",
        "text": "ok thanks",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g39bdb83cd6b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/39bdb83cd6ba8ef8c65bd51a740032ea.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Bruno",
            "real_name": "Bruno Edwards",
            "display_name": "Bruno",
            "team": "T4G9NBD2M",
            "name": "bruno",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1714740941.660439",
        "parent_user_id": "U06NPFY7Q1L",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "x6Reg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "ok thanks"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U06NPFY7Q1L",
        "type": "message",
        "ts": "1714745481.205729",
        "client_msg_id": "ba0026cc-0e73-4580-8647-0a1965b8e93b",
        "text": "Hi Liam,\n\nI think you may have misunderstood my question a bit, perhaps I did not make myself very clear.\n\nplease consider this MWE\n\n```filter=streaming_market_filter(\n        event_type_ids=[\"7\"],\n        market_types=[\"WIN\"],\n    )\n\nclass ML_strategy(BaseStrategy):\n    pass\nfakestrat=ML_strategy(market_filter=filter)\n\nclass BlotterWatcher(BaseStrategy):\n    def start(self):\n        print('BlotterWatcher started')\n    def check_market_book(self, market, market_book):\n        # process_market_book only executed if this returns True\n        if market_book.status != \"CLOSED\":\n            return True\n    def process_market_book(self, market, market_book):\n        self_orders=market.blotter.strategy_orders(strategy=self)\n        fakestrat_orders=market.blotter.strategy_orders(strategy=fakestrat)\n        if self_orders:\n            print('Self orders:',self_orders)\n        if fakestrat_orders:\n            print('Fakestrat orders:',fakestrat_orders)\n\nstrategy=BlotterWatcher(market_filter=filter)\nframework.add_strategy(strategy)\nframework.add_strategy(fakestrat)\nframework.run()```\nI have a strategy, _also called ML_strategy,_ running _in another process_.\n\nthis \"blotter watch script\" only prints out orders from fakestrat, not from self. contrary to what you said, I believe this is because the strategies share a class name, and the hostname is not the answer to my question. many thanks for your speedy reply and thank you for making an attempt to answer my question.\n\nMany Thanks,\n\nBruno",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g39bdb83cd6b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/39bdb83cd6ba8ef8c65bd51a740032ea.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Bruno",
            "real_name": "Bruno Edwards",
            "display_name": "Bruno",
            "team": "T4G9NBD2M",
            "name": "bruno",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1714740941.660439",
        "parent_user_id": "U06NPFY7Q1L",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eg5Zx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi Liam,\n\nI think you may have misunderstood my question a bit, perhaps I did not make myself very clear.\n\nplease consider this MWE\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "filter=streaming_market_filter(\n        event_type_ids=[\"7\"],\n        market_types=[\"WIN\"],\n    )\n\nclass ML_strategy(BaseStrategy):\n    pass\nfakestrat=ML_strategy(market_filter=filter)\n\nclass BlotterWatcher(BaseStrategy):\n    def start(self):\n        print('BlotterWatcher started')\n    def check_market_book(self, market, market_book):\n        # process_market_book only executed if this returns True\n        if market_book.status != \"CLOSED\":\n            return True\n    def process_market_book(self, market, market_book):\n        self_orders=market.blotter.strategy_orders(strategy=self)\n        fakestrat_orders=market.blotter.strategy_orders(strategy=fakestrat)\n        if self_orders:\n            print('Self orders:',self_orders)\n        if fakestrat_orders:\n            print('Fakestrat orders:',fakestrat_orders)\n\nstrategy=BlotterWatcher(market_filter=filter)\nframework.add_strategy(strategy)\nframework.add_strategy(fakestrat)\nframework.run()"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nI have a strategy, "
                            },
                            {
                                "type": "text",
                                "text": "also called ML_strategy,",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " running "
                            },
                            {
                                "type": "text",
                                "text": "in another process",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ".\n\nthis \"blotter watch script\" only prints out orders from fakestrat, not from self. contrary to what you said, I believe this is because the strategies share a class name, and the hostname is not the answer to my question. many thanks for your speedy reply and thank you for making an attempt to answer my question.\n\nMany Thanks,\n\nBruno"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1714745849.267029",
        "client_msg_id": "7729BECB-306A-4AD9-8041-D762F6FF2564",
        "text": "Yeah I don’t understand the question tbh ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1714740941.660439",
        "parent_user_id": "U06NPFY7Q1L",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bInD0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah I "
                            },
                            {
                                "type": "text",
                                "text": "don’t"
                            },
                            {
                                "type": "text",
                                "text": " understand the question tbh "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U06NPFY7Q1L",
        "type": "message",
        "ts": "1714745897.062929",
        "client_msg_id": "781aff76-0780-4d11-bce8-085e1c2e3503",
        "text": "<https:\/\/betcode-org.slack.com\/archives\/C4HL6EZTQ\/p1714743541369629?thread_ts=1714740941.660439&amp;cid=C4HL6EZTQ>",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g39bdb83cd6b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/39bdb83cd6ba8ef8c65bd51a740032ea.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Bruno",
            "real_name": "Bruno Edwards",
            "display_name": "Bruno",
            "team": "T4G9NBD2M",
            "name": "bruno",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1714740941.660439",
        "parent_user_id": "U06NPFY7Q1L",
        "attachments": [
            {
                "from_url": "https:\/\/betcode-org.slack.com\/archives\/C4HL6EZTQ\/p1714743541369629?thread_ts=1714740941.660439&amp;cid=C4HL6EZTQ",
                "ts": "1714743541.369629",
                "author_id": "U06NPFY7Q1L",
                "channel_id": "C4HL6EZTQ",
                "channel_team": "T4G9NBD2M",
                "is_msg_unfurl": true,
                "is_reply_unfurl": true,
                "message_blocks": [
                    {
                        "team": "T4G9NBD2M",
                        "channel": "C4HL6EZTQ",
                        "ts": "1714743541.369629",
                        "message": {
                            "blocks": [
                                {
                                    "type": "rich_text",
                                    "block_id": "C32eR",
                                    "elements": [
                                        {
                                            "type": "rich_text_section",
                                            "elements": [
                                                {
                                                    "type": "text",
                                                    "text": "ok cool, so when I had 2 seperate instances of flumine running on the same machinec were their orders visible to each other through blotter.strategy_orders because the class names were the same?"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "id": 1,
                "original_url": "https:\/\/betcode-org.slack.com\/archives\/C4HL6EZTQ\/p1714743541369629?thread_ts=1714740941.660439&amp;cid=C4HL6EZTQ",
                "fallback": "[May 3rd, 2024 6:39 AM] bruno: ok cool, so when I had 2 seperate instances of flumine running on the same machinec were their orders visible to each other through blotter.strategy_orders because the class names were the same?",
                "text": "ok cool, so when I had 2 seperate instances of flumine running on the same machinec were their orders visible to each other through blotter.strategy_orders because the class names were the same?",
                "author_name": "Bruno Edwards",
                "author_link": "https:\/\/betcode-org.slack.com\/team\/U06NPFY7Q1L",
                "author_icon": "https:\/\/secure.gravatar.com\/avatar\/39bdb83cd6ba8ef8c65bd51a740032ea.jpg?s=48&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-48.png",
                "author_subname": "Bruno Edwards",
                "mrkdwn_in": [
                    "text"
                ],
                "footer": "Thread in Slack conversation"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OMxqT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/betcode-org.slack.com\/archives\/C4HL6EZTQ\/p1714743541369629?thread_ts=1714740941.660439&cid=C4HL6EZTQ"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1714749478.957659",
        "client_msg_id": "1BBE0FC3-CFFE-4335-A6D2-C52D858C05F8",
        "text": "Same answer, what’s your full code? ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1714740941.660439",
        "parent_user_id": "U06NPFY7Q1L",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Lh1KL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Same answer, "
                            },
                            {
                                "type": "text",
                                "text": "what’s"
                            },
                            {
                                "type": "text",
                                "text": " your full code? "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02RN7YDRQ9",
        "type": "message",
        "ts": "1714749651.432549",
        "client_msg_id": "bd3adad5-dd13-4e9c-99d6-b2022f21e229",
        "text": "self_orders is local variable to BlotterWatcher.process_market_book() not global - but that may only be in the way you prepared the sample code",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "ge46f1f8b708",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e46f1f8b708a630e3191de7b2c42b1d1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "edblock",
            "real_name": "edblock",
            "display_name": "foxwood",
            "team": "T4G9NBD2M",
            "name": "eanb",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1714740941.660439",
        "parent_user_id": "U06NPFY7Q1L",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8OFFJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "self_orders is local variable to BlotterWatcher.process_market_book() not global - but that may only be in the way you prepared the sample code"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U06NPFY7Q1L",
        "type": "message",
        "ts": "1714750378.471899",
        "client_msg_id": "cbe524d6-9b82-4286-afe5-f8fa59c38ecf",
        "text": "self_orders is not defined in the global scope, it is only defined locally.\nstrategy_selection_orders returns orders when I pass it the fake strategy, but not the blotterwatch strategy. I believe this is because the strategy is also called ML_strategy in the other process.\n```from flumine import Flumine, clients, BaseStrategy\nimport logging\nimport betfairlightweight\nfrom credentials import username, password, app_key\nfrom default_config import *\nfrom config import *\nimport os\n# from subprocess import Popen\nfrom betfairlightweight.filters import streaming_market_filter\n\nlogging.basicConfig(filename='strategy.log', level=<http:\/\/logging.INFO|logging.INFO>, format='%(asctime)s:%(levelname)s:%(message)s')\ntrading = betfairlightweight.APIClient(username, password, app_key, \".\/certs\")\nclient = clients.BetfairClient(trading)\n\nbought_markets = []\n# max_markets=1\n\nframework = Flumine(client=client)\n\nclass ML_strategy(BaseStrategy):\n    pass\n\n\nclass BlotterWatcher(BaseStrategy):\n    def start(self):\n        print('BlotterWatcher started')\n    def check_market_book(self, market, market_book):\n        # process_market_book only executed if this returns True\n        if market_book.status != \"CLOSED\":\n            return True\n    def process_market_book(self, market, market_book):\n        self_orders=market.blotter.strategy_orders(strategy=self)\n        fakestrat_orders=market.blotter.strategy_orders(strategy=fakestrat)\n        if self_orders:\n            print('Self orders:',self_orders)\n        if fakestrat_orders:\n            print('Fakestrat orders:',fakestrat_orders)\n\nfilter=streaming_market_filter(\n        event_type_ids=[\"7\"],\n        market_types=[\"WIN\"],\n    )\n\nstrategy = BlotterWatcher(market_filter=filter)\nfakestrat=ML_strategy(market_filter=filter)\nframework.add_strategy(strategy)\nframework.add_strategy(fakestrat)\nframework.run()```",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g39bdb83cd6b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/39bdb83cd6ba8ef8c65bd51a740032ea.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Bruno",
            "real_name": "Bruno Edwards",
            "display_name": "Bruno",
            "team": "T4G9NBD2M",
            "name": "bruno",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1714740941.660439",
        "parent_user_id": "U06NPFY7Q1L",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YwHV0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "self_orders is not defined in the global scope, it is only defined locally.\nstrategy_selection_orders returns orders when I pass it the fake strategy, but not the blotterwatch strategy. I believe this is because the strategy is also called ML_strategy in the other process.\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "from flumine import Flumine, clients, BaseStrategy\nimport logging\nimport betfairlightweight\nfrom credentials import username, password, app_key\nfrom default_config import *\nfrom config import *\nimport os\n# from subprocess import Popen\nfrom betfairlightweight.filters import streaming_market_filter\n\nlogging.basicConfig(filename='strategy.log', level=logging.INFO, format='%(asctime)s:%(levelname)s:%(message)s')\ntrading = betfairlightweight.APIClient(username, password, app_key, \".\/certs\")\nclient = clients.BetfairClient(trading)\n\nbought_markets = []\n# max_markets=1\n\nframework = Flumine(client=client)\n\nclass ML_strategy(BaseStrategy):\n    pass\n\n\nclass BlotterWatcher(BaseStrategy):\n    def start(self):\n        print('BlotterWatcher started')\n    def check_market_book(self, market, market_book):\n        # process_market_book only executed if this returns True\n        if market_book.status != \"CLOSED\":\n            return True\n    def process_market_book(self, market, market_book):\n        self_orders=market.blotter.strategy_orders(strategy=self)\n        fakestrat_orders=market.blotter.strategy_orders(strategy=fakestrat)\n        if self_orders:\n            print('Self orders:',self_orders)\n        if fakestrat_orders:\n            print('Fakestrat orders:',fakestrat_orders)\n\nfilter=streaming_market_filter(\n        event_type_ids=[\"7\"],\n        market_types=[\"WIN\"],\n    )\n\nstrategy = BlotterWatcher(market_filter=filter)\nfakestrat=ML_strategy(market_filter=filter)\nframework.add_strategy(strategy)\nframework.add_strategy(fakestrat)\nframework.run()"
                            }
                        ],
                        "border": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "U02RN7YDRQ9",
        "type": "message",
        "ts": "1714751579.613469",
        "client_msg_id": "e3def788-eaa0-4f84-9ae1-5607c1c3ac63",
        "text": "slack formatting made it seem that \"fakestrat=\" was in global scope since it managed to get that to the left edge lol",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "ge46f1f8b708",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e46f1f8b708a630e3191de7b2c42b1d1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "edblock",
            "real_name": "edblock",
            "display_name": "foxwood",
            "team": "T4G9NBD2M",
            "name": "eanb",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1714740941.660439",
        "parent_user_id": "U06NPFY7Q1L",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YFPHz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "slack formatting made it seem that \"fakestrat=\" was in global scope since it managed to get that to the left edge lol"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U06NPFY7Q1L",
        "type": "message",
        "ts": "1714752279.814069",
        "client_msg_id": "D59C0687-43A3-4C3C-ABC6-EFB200E16732",
        "text": "lol",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g39bdb83cd6b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/39bdb83cd6ba8ef8c65bd51a740032ea.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Bruno",
            "real_name": "Bruno Edwards",
            "display_name": "Bruno",
            "team": "T4G9NBD2M",
            "name": "bruno",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1714740941.660439",
        "parent_user_id": "U06NPFY7Q1L",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/8Qq8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "lol"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGV299K6H",
        "type": "message",
        "ts": "1714756598.872809",
        "edited": {
            "user": "UGV299K6H",
            "ts": "1714756622.000000"
        },
        "client_msg_id": "a6d5a8c1-2aad-4c10-86a7-b4d21677f9f4",
        "text": "I would just do AvB at market level and see how you go. There's no single rule for execution, but broadly speaking it depends on your edge. If you have plenty then you usually take, if  your edge is thin then you offer.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g3a262a3cfba",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b3a262a3cfba292c18acf5777f65908a.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0006-72.png",
            "first_name": "Michael",
            "real_name": "Michael C",
            "display_name": "Michael",
            "team": "T4G9NBD2M",
            "name": "michael",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1714653489.145669",
        "parent_user_id": "U053KV09FKP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qAYyp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I would just do AvB at market level and see how you go. There's no single rule for execution, but broadly speaking it depends on your edge. If you have plenty then you usually take, if  your edge is thin then you offer."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1714757176.526109",
        "edited": {
            "user": "U4H19D1D2",
            "ts": "1714757186.000000"
        },
        "client_msg_id": "4695301F-A13D-4621-917E-A7772B733EF8",
        "text": "I don’t see any code changing the hostname in the config ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1714740941.660439",
        "parent_user_id": "U06NPFY7Q1L",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "i7IpC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don’t see any code changing the hostname in the config "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U06NPFY7Q1L",
        "type": "message",
        "ts": "1714757241.258909",
        "client_msg_id": "BE36B312-6D3D-429F-BB88-65129F7C5371",
        "text": "correct.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g39bdb83cd6b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/39bdb83cd6ba8ef8c65bd51a740032ea.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Bruno",
            "real_name": "Bruno Edwards",
            "display_name": "Bruno",
            "team": "T4G9NBD2M",
            "name": "bruno",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1714740941.660439",
        "parent_user_id": "U06NPFY7Q1L",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sbJvN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "correct."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0128E7BEHW",
        "type": "message",
        "ts": "1714758215.228349",
        "client_msg_id": "cd082e52-3da5-4772-8386-17043862293b",
        "text": "change customer_strategy_ref in flumine.config and your processes will only see their own orders (because they specify the strategy ref when subscribing to the order stream)",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb57a2bdd15a",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b57a2bdd15acccdb845ce257f38940cc.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Dave",
            "real_name": "Dave R",
            "display_name": "Dave",
            "team": "T4G9NBD2M",
            "name": "d7m",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1714740941.660439",
        "parent_user_id": "U06NPFY7Q1L",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "p6QkM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "change customer_strategy_ref in flumine.config and your processes will only see their own orders (because they specify the strategy ref when subscribing to the order stream)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U06NPFY7Q1L",
        "type": "message",
        "ts": "1714758269.022479",
        "client_msg_id": "3F942D63-832B-4C08-9877-F83C0DFA7088",
        "text": "my goal is for them to be selectively visible. my question is what determines the visibility - I think it’s the (hash of the) supplied strategy class name",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g39bdb83cd6b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/39bdb83cd6ba8ef8c65bd51a740032ea.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Bruno",
            "real_name": "Bruno Edwards",
            "display_name": "Bruno",
            "team": "T4G9NBD2M",
            "name": "bruno",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1714740941.660439",
        "parent_user_id": "U06NPFY7Q1L",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Xk0no",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "my goal is for them to be selectively visible. my question is what determines the visibility - I think it’s the (hash of the) supplied strategy class name"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1714759590.800699",
        "client_msg_id": "A73C7095-36B4-476D-8253-054CE5B98AF2",
        "text": "Just look at the code, it’s the class object itself but the market.blotter has everything so you can write your own lookup in one line if you want it to be a string or hash etc ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1714740941.660439",
        "parent_user_id": "U06NPFY7Q1L",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5Nt\/T",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Just look at the code, "
                            },
                            {
                                "type": "text",
                                "text": "it’s"
                            },
                            {
                                "type": "text",
                                "text": " the class object itself but the market.blotter has everything so you can write your own lookup in one line if you want it to be a string or hash etc "
                            }
                        ]
                    }
                ]
            }
        ]
    }
]