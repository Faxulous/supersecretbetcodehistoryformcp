[
    {
        "user": "U04V95S1G4E",
        "type": "message",
        "ts": "1680201116.719949",
        "edited": {
            "user": "U04V95S1G4E",
            "ts": "1680201259.000000"
        },
        "client_msg_id": "8d12507f-9cda-4ada-8a81-da99b8834e03",
        "text": "Hey guys, random question (relatively new to python).\n\nWent through the betfairlightweight source to try and see if there was any implementation to use proxies with the API connection - I don't think this is the case.\nReason I am asking is because my development VPS is located in the US but I'm in the UK. All API calls unfortunately route through US IP address which betfair doesn't allow.\n\nI was hoping I could implement a proxy to all the requests calls, but seems like I'd have to edit the original source code for this (and therefore miss out on future updates to the package etc...)\n\nHas anyone come accross this issue? - Probably controversial as it could be used to circumvent Betfair rules of access I suppose?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "1a09652c26a9",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-03-23\/5001808379042_1a09652c26a9d9556541_72.jpg",
            "first_name": "Jesus",
            "real_name": "Jesus Perdomo",
            "display_name": "Jesus Perdomo",
            "team": "T4G9NBD2M",
            "name": "jesusaperdomo",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1680201116.719949",
        "reply_count": 4,
        "reply_users_count": 3,
        "latest_reply": "1686072121.653259",
        "reply_users": [
            "UBS7QANF3",
            "U04V95S1G4E",
            "U02GGCCLTKM"
        ],
        "replies": [
            {
                "user": "UBS7QANF3",
                "ts": "1680201424.077829"
            },
            {
                "user": "U04V95S1G4E",
                "ts": "1680201685.619499"
            },
            {
                "user": "U04V95S1G4E",
                "ts": "1680206703.478909"
            },
            {
                "user": "U02GGCCLTKM",
                "ts": "1686072121.653259"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MV2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hey guys, random question (relatively new to python).\n\nWent through the betfairlightweight source to try and see if there was any implementation to use proxies with the API connection - I don't think this is the case.\nReason I am asking is because my development VPS is located in the US but I'm in the UK. All API calls unfortunately route through US IP address which betfair doesn't allow.\n\nI was hoping I could implement a proxy to all the requests calls, but seems like I'd have to edit the original source code for this (and therefore miss out on future updates to the package etc...)\n\nHas anyone come accross this issue? - Probably controversial as it could be used to circumvent Betfair rules of access I suppose?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1680201424.077829",
        "client_msg_id": "C55C8299-9D26-461C-804A-7F7FBF06E733",
        "text": "Create a requests Session and pass it to the constructor of your api client",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1680201116.719949",
        "parent_user_id": "U04V95S1G4E",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jB02",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Create a requests Session and pass it to the constructor of your api client"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "raised_hands",
                "users": [
                    "U04V95S1G4E"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U04V95S1G4E",
        "type": "message",
        "ts": "1680201685.619499",
        "client_msg_id": "e5c234fa-8e11-4414-ae10-4692fe653286",
        "text": "Gonna give that a try - don't know why I didn't think of that (indeed, the APIclient endpoint takes a session param)",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "1a09652c26a9",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-03-23\/5001808379042_1a09652c26a9d9556541_72.jpg",
            "first_name": "Jesus",
            "real_name": "Jesus Perdomo",
            "display_name": "Jesus Perdomo",
            "team": "T4G9NBD2M",
            "name": "jesusaperdomo",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1680201116.719949",
        "parent_user_id": "U04V95S1G4E",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qBKPe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Gonna give that a try - don't know why I didn't think of that (indeed, the APIclient endpoint takes a session param)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U04V95S1G4E",
        "type": "message",
        "ts": "1680206703.478909",
        "client_msg_id": "9beb60f9-22b3-4bd8-8a05-198789d547ae",
        "text": "Have given it a go now - seems like the SSL cert for non-interactive login doesn't play nice with a proxy. I keep getting SSL errors when trying to login unfortunately :disappointed:\n\nWas worth a try",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "1a09652c26a9",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-03-23\/5001808379042_1a09652c26a9d9556541_72.jpg",
            "first_name": "Jesus",
            "real_name": "Jesus Perdomo",
            "display_name": "Jesus Perdomo",
            "team": "T4G9NBD2M",
            "name": "jesusaperdomo",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1680201116.719949",
        "parent_user_id": "U04V95S1G4E",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Uzrc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Have given it a go now - seems like the SSL cert for non-interactive login doesn't play nice with a proxy. I keep getting SSL errors when trying to login unfortunately "
                            },
                            {
                                "type": "emoji",
                                "name": "disappointed",
                                "unicode": "1f61e"
                            },
                            {
                                "type": "text",
                                "text": "\n\nWas worth a try"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03N4QBJ0TV",
        "type": "message",
        "ts": "1680214945.646269",
        "edited": {
            "user": "U03N4QBJ0TV",
            "ts": "1680215536.000000"
        },
        "client_msg_id": "3c7d5d38-5376-4666-8252-12944dbb3de6",
        "text": "This might sound like a dumb question but what does the market_book.total_matched and runner.total_matched (for runner in market_book.runners) measure?\n\nI would have thought the first measures the total volume traded on the market and the second the total volume traded on a given runner. I am getting zero for the market_book.total_matched when backtesting and getting very low numbers for the runner total matched figures (that go up and down!). I am backtesting on Pro data not recorded data, uncertain if that makes a difference. See code and logs attached.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g2c8538b47ad",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2c8538b47ad4bed6facbb148134bb486.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "Trex44",
            "real_name": "Trex44",
            "display_name": "Trex44",
            "team": "T4G9NBD2M",
            "name": "c.s.mpharm",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1680214945.646269",
        "reply_count": 4,
        "reply_users_count": 2,
        "latest_reply": "1680248437.972109",
        "reply_users": [
            "U03N4QBJ0TV",
            "UBS7QANF3"
        ],
        "replies": [
            {
                "user": "U03N4QBJ0TV",
                "ts": "1680214968.546809"
            },
            {
                "user": "U03N4QBJ0TV",
                "ts": "1680215002.370309"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1680246149.583389"
            },
            {
                "user": "U03N4QBJ0TV",
                "ts": "1680248437.972109"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BbiV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This might sound like a dumb question but what does the market_book.total_matched and runner.total_matched (for runner in market_book.runners) measure?\n\nI would have thought the first measures the total volume traded on the market and the second the total volume traded on a given runner. I am getting zero for the market_book.total_matched when backtesting and getting very low numbers for the runner total matched figures (that go up and down!). I am backtesting on Pro data not recorded data, uncertain if that makes a difference. See code and logs attached."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03N4QBJ0TV",
        "type": "message",
        "ts": "1680214968.546809",
        "client_msg_id": "b95710cd-f78f-451b-b66f-36972a7c6fbe",
        "text": "```from collections import OrderedDict\nfrom flumine import BaseStrategy\nfrom flumine.order.trade import Trade\nfrom flumine.order.order import OrderStatus\nfrom flumine.order.ordertype import LimitOrder\nfrom flumine.utils import get_price\nimport numpy as np\n\n\nclass LowestLayer(BaseStrategy):\n \n    def check_market_book(self, market, market_book):\n        if market_book.status == \"OPEN\" and not market_book.inplay and 0 &lt; market.seconds_to_start &lt; 0.2:\n            print('----------------------------------------------')\n            print(f'Seconds to start = {market.seconds_to_start}')\n            print(f'market_book.total matched = {market_book.total_matched}')\n            print(f'[r.total_matched for r in market_book.runners] = {[r.total_matched for r in market_book.runners]}')\n            print(\n                f'sum([r.total_matched for r in market_book.runners]) = {sum([r.total_matched for r in market_book.runners])}')\n            return True```",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g2c8538b47ad",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2c8538b47ad4bed6facbb148134bb486.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "Trex44",
            "real_name": "Trex44",
            "display_name": "Trex44",
            "team": "T4G9NBD2M",
            "name": "c.s.mpharm",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1680214945.646269",
        "parent_user_id": "U03N4QBJ0TV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nZW",
                "elements": [
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "from collections import OrderedDict\nfrom flumine import BaseStrategy\nfrom flumine.order.trade import Trade\nfrom flumine.order.order import OrderStatus\nfrom flumine.order.ordertype import LimitOrder\nfrom flumine.utils import get_price\nimport numpy as np\n\n\nclass LowestLayer(BaseStrategy):\n \n    def check_market_book(self, market, market_book):\n        if market_book.status == \"OPEN\" and not market_book.inplay and 0 < market.seconds_to_start < 0.2:\n            print('----------------------------------------------')\n            print(f'Seconds to start = {market.seconds_to_start}')\n            print(f'market_book.total matched = {market_book.total_matched}')\n            print(f'[r.total_matched for r in market_book.runners] = {[r.total_matched for r in market_book.runners]}')\n            print(\n                f'sum([r.total_matched for r in market_book.runners]) = {sum([r.total_matched for r in market_book.runners])}')\n            return True"
                            }
                        ],
                        "border": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "U03N4QBJ0TV",
        "type": "message",
        "ts": "1680215002.370309",
        "client_msg_id": "8089f679-af6e-4410-84ae-b7f2687bec40",
        "text": "```{\"asctime\": \"2023-03-30 22:09:29,717\", \"levelname\": \"INFO\", \"message\": \"Client added\", \"username\": \"6bb3cddd\", \"exchange\": \"Simulated\", \"betting_client\": null, \"current_transaction_count_total\": null, \"transaction_count_total\": null, \"trading_controls\": [], \"order_stream\": true, \"best_price_execution\": true, \"paper_trade\": false}\n{\"asctime\": \"2023-03-30 22:09:29,717\", \"levelname\": \"INFO\", \"message\": \"Adding market middleware &lt;flumine.markets.middleware.SimulatedMiddleware object at 0x7f68114aa380&gt;\"}\n{\"asctime\": \"2023-03-30 22:09:29,718\", \"levelname\": \"INFO\", \"message\": \"Adding client control MAX_TRANSACTION_COUNT\"}\n{\"asctime\": \"2023-03-30 22:09:29,718\", \"levelname\": \"INFO\", \"message\": \"Adding trading control ORDER_VALIDATION\"}\n{\"asctime\": \"2023-03-30 22:09:29,718\", \"levelname\": \"INFO\", \"message\": \"Adding trading control MARKET_VALIDATION\"}\n{\"asctime\": \"2023-03-30 22:09:29,718\", \"levelname\": \"INFO\", \"message\": \"Adding trading control STRATEGY_EXPOSURE\"}\n{\"asctime\": \"2023-03-30 22:09:29,718\", \"levelname\": \"INFO\", \"message\": \"Adding strategy LowestLayer\"}\n{\"asctime\": \"2023-03-30 22:09:29,719\", \"levelname\": \"INFO\", \"message\": \"Creating new HistoricalStream (1000) for strategy LowestLayer\", \"strategy\": \"LowestLayer\", \"stream_id\": 1000, \"market_filter\": \"\/home\/ubuntu\/Python_projects\/tmp\/races\/1.161864856\", \"event_id\": \"29441541\", \"event_processing\": false}\n{\"asctime\": \"2023-03-30 22:09:29,719\", \"levelname\": \"INFO\", \"message\": \"Starting flumine\", \"clients\": {\"Betfair\": {}, \"Simulated\": {\"6bb3cddd\": {\"username\": \"6bb3cddd\", \"exchange\": \"Simulated\", \"betting_client\": null, \"current_transaction_count_total\": 0, \"transaction_count_total\": 0, \"trading_controls\": [\"&lt;flumine.controls.clientcontrols.MaxTransactionCount object at 0x7f68114aa590&gt;\"], \"order_stream\": true, \"best_price_execution\": true, \"paper_trade\": false}}, \"BetConnect\": {}}, \"markets\": {\"market_count\": 0, \"open_market_count\": 0}, \"streams\": [\"&lt;HistoricalStream(HistoricalStream, initial daemon)&gt;\"], \"logging_controls\": [], \"threads\": [\"&lt;_MainThread(MainThread, started 140085059739648)&gt;\"]}\n{\"asctime\": \"2023-03-30 22:09:29,719\", \"levelname\": \"INFO\", \"message\": \"Client login\", \"username\": \"6bb3cddd\", \"exchange\": \"Simulated\", \"betting_client\": null, \"current_transaction_count_total\": 0, \"transaction_count_total\": 0, \"trading_controls\": [\"&lt;flumine.controls.clientcontrols.MaxTransactionCount object at 0x7f68114aa590&gt;\"], \"order_stream\": true, \"best_price_execution\": true, \"paper_trade\": false}\n{\"asctime\": \"2023-03-30 22:09:29,720\", \"levelname\": \"INFO\", \"message\": \"Client update account details\", \"username\": \"6bb3cddd\", \"exchange\": \"Simulated\", \"betting_client\": null, \"current_transaction_count_total\": 0, \"transaction_count_total\": 0, \"trading_controls\": [\"&lt;flumine.controls.clientcontrols.MaxTransactionCount object at 0x7f68114aa590&gt;\"], \"order_stream\": true, \"best_price_execution\": true, \"paper_trade\": false}\n{\"asctime\": \"2023-03-30 22:09:29,720\", \"levelname\": \"INFO\", \"message\": \"Starting historical market '\/home\/ubuntu\/Python_projects\/tmp\/races\/1.161864856'\", \"market\": \"\/home\/ubuntu\/Python_projects\/tmp\/races\/1.161864856\"}\n{\"asctime\": \"2023-03-30 22:09:29,720\", \"levelname\": \"INFO\", \"message\": \"[Register: 1000]: marketSubscription\"}\n{\"asctime\": \"2023-03-30 22:09:29,720\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: \\\"MarketStream\\\" created\"}\n{\"asctime\": \"2023-03-30 22:09:29,720\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.161864856 added, 1 markets in cache\"}\n{\"asctime\": \"2023-03-30 22:09:29,722\", \"levelname\": \"INFO\", \"message\": \"Adding: 1.161864856 to markets\"}\n{\"asctime\": \"2023-03-30 22:09:29,728\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.161864856 added, 1 markets in cache\"}\n{\"asctime\": \"2023-03-30 22:09:29,731\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.161864856 added, 1 markets in cache\"}\n{\"asctime\": \"2023-03-30 22:09:29,732\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.161864856 added, 1 markets in cache\"}\n{\"asctime\": \"2023-03-30 22:09:29,733\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.161864856 added, 1 markets in cache\"}\n{\"asctime\": \"2023-03-30 22:09:29,734\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.161864856 added, 1 markets in cache\"}\n{\"asctime\": \"2023-03-30 22:09:29,735\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.161864856 added, 1 markets in cache\"}\n{\"asctime\": \"2023-03-30 22:09:29,736\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.161864856 added, 1 markets in cache\"}\n{\"asctime\": \"2023-03-30 22:09:29,754\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.161864856 added, 1 markets in cache\"}\n{\"asctime\": \"2023-03-30 22:09:29,759\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.161864856 added, 1 markets in cache\"}\n{\"asctime\": \"2023-03-30 22:09:29,785\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.161864856 added, 1 markets in cache\"}\n{\"asctime\": \"2023-03-30 22:09:29,822\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.161864856 added, 1 markets in cache\"}\n{\"asctime\": \"2023-03-30 22:09:29,917\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.161864856 added, 1 markets in cache\"}\n{\"asctime\": \"2023-03-30 22:09:29,952\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.161864856 added, 1 markets in cache\"}\n{\"asctime\": \"2023-03-30 22:09:30,040\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.161864856 added, 1 markets in cache\"}\n{\"asctime\": \"2023-03-30 22:09:30,083\", \"levelname\": \"WARNING\", \"message\": \"Runner 12077917 (13.81) removed from market 1.161864856\"}\n{\"asctime\": \"2023-03-30 22:09:30,154\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.161864856 added, 1 markets in cache\"}\n{\"asctime\": \"2023-03-30 22:09:30,480\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.161864856 added, 1 markets in cache\"}\n{\"asctime\": \"2023-03-30 22:09:30,529\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.161864856 added, 1 markets in cache\"}\n{\"asctime\": \"2023-03-30 22:09:30,648\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.161864856 added, 1 markets in cache\"}\n----------------------------------------------\nSeconds to start = 0.176\nmarket_book.total matched = 0\n[r.total_matched for r in market_book.runners] = [24835.62, 3965.73, 2802.5, 593.19, 29.79, 153.78, 0]\nsum([r.total_matched for r in market_book.runners]) = 32380.609999999997\n----------------------------------------------\nSeconds to start = 0.063\nmarket_book.total matched = 0\n[r.total_matched for r in market_book.runners] = [24835.62, 4521.7, 2802.5, 593.19, 29.79, 153.78, 0]\nsum([r.total_matched for r in market_book.runners]) = 32936.579999999994\n----------------------------------------------\nSeconds to start = 0.003\nmarket_book.total matched = 0\n[r.total_matched for r in market_book.runners] = [24835.62, 4521.7, 2802.5, 593.19, 29.79, 45.97, 0]\nsum([r.total_matched for r in market_book.runners]) = 32828.77\n{\"asctime\": \"2023-03-30 22:09:33,018\", \"levelname\": \"INFO\", \"message\": \"Market 1.161864856 closed\", \"market_id\": \"1.161864856\", \"event_id\": \"29441541\", \"event_type_id\": \"7\", \"event_name\": \"Sedge 29th Aug\", \"market_type\": \"WIN\", \"market_start_datetime\": \"2019-08-29 18:20:00\", \"country_code\": \"GB\", \"venue\": \"Sedgefield\", \"race_type\": null, \"orders_cleared\": [], \"market_cleared\": [], \"closed\": true}\n{\"asctime\": \"2023-03-30 22:09:33,019\", \"levelname\": \"INFO\", \"message\": \"Market cleared\", \"market_id\": \"1.161864856\", \"order_count\": 0, \"clients\": {\"Betfair\": {}, \"Simulated\": {\"6bb3cddd\": {\"username\": \"6bb3cddd\", \"exchange\": \"Simulated\", \"betting_client\": null, \"current_transaction_count_total\": 0, \"transaction_count_total\": 0, \"trading_controls\": [\"&lt;flumine.controls.clientcontrols.MaxTransactionCount object at 0x7f68114aa590&gt;\"], \"order_stream\": true, \"best_price_execution\": true, \"paper_trade\": false}}, \"BetConnect\": {}}, \"markets\": {\"market_count\": 1, \"open_market_count\": 0}, \"streams\": [\"&lt;HistoricalStream(HistoricalStream, initial daemon)&gt;\"], \"logging_controls\": [], \"threads\": [\"&lt;_MainThread(MainThread, started 140085059739648)&gt;\"]}\n{\"asctime\": \"2023-03-30 22:09:33,019\", \"levelname\": \"INFO\", \"message\": \"Market level cleared\", \"market_id\": \"1.161864856\", \"profit\": 0, \"bet_count\": 0}\n{\"asctime\": \"2023-03-30 22:09:33,019\", \"levelname\": \"INFO\", \"message\": \"Market closed\", \"market_id\": \"1.161864856\", \"clients\": {\"Betfair\": {}, \"Simulated\": {\"6bb3cddd\": {\"username\": \"6bb3cddd\", \"exchange\": \"Simulated\", \"betting_client\": null, \"current_transaction_count_total\": 0, \"transaction_count_total\": 0, \"trading_controls\": [\"&lt;flumine.controls.clientcontrols.MaxTransactionCount object at 0x7f68114aa590&gt;\"], \"order_stream\": true, \"best_price_execution\": true, \"paper_trade\": false}}, \"BetConnect\": {}}, \"markets\": {\"market_count\": 1, \"open_market_count\": 0}, \"streams\": [\"&lt;HistoricalStream(HistoricalStream, initial daemon)&gt;\"], \"logging_controls\": [], \"threads\": [\"&lt;_MainThread(MainThread, started 140085059739648)&gt;\"]}\n{\"asctime\": \"2023-03-30 22:09:33,020\", \"levelname\": \"INFO\", \"message\": \"Removing market 1.161864856\", \"clients\": {\"Betfair\": {}, \"Simulated\": {\"6bb3cddd\": {\"username\": \"6bb3cddd\", \"exchange\": \"Simulated\", \"betting_client\": null, \"current_transaction_count_total\": 0, \"transaction_count_total\": 0, \"trading_controls\": [\"&lt;flumine.controls.clientcontrols.MaxTransactionCount object at 0x7f68114aa590&gt;\"], \"order_stream\": true, \"best_price_execution\": true, \"paper_trade\": false}}, \"BetConnect\": {}}, \"markets\": {\"market_count\": 1, \"open_market_count\": 0}, \"streams\": [\"&lt;HistoricalStream(HistoricalStream, initial daemon)&gt;\"], \"logging_controls\": [], \"threads\": [\"&lt;_MainThread(MainThread, started 140085059739648)&gt;\"]}\n{\"asctime\": \"2023-03-30 22:09:33,020\", \"levelname\": \"INFO\", \"message\": \"Completed historical market '\/home\/ubuntu\/Python_projects\/tmp\/races\/1.161864856'\"}\n{\"asctime\": \"2023-03-30 22:09:33,020\", \"levelname\": \"INFO\", \"message\": \"Simulation complete\"}\n{\"asctime\": \"2023-03-30 22:09:33,020\", \"levelname\": \"INFO\", \"message\": \"Shutting down Execution (SimulatedExecution)\"}\n{\"asctime\": \"2023-03-30 22:09:33,020\", \"levelname\": \"INFO\", \"message\": \"Shutting down Execution (BetfairExecution)\"}\n{\"asctime\": \"2023-03-30 22:09:33,020\", \"levelname\": \"INFO\", \"message\": \"Client logout\", \"username\": \"6bb3cddd\", \"exchange\": \"Simulated\", \"betting_client\": null, \"current_transaction_count_total\": 0, \"transaction_count_total\": 0, \"trading_controls\": [\"&lt;flumine.controls.clientcontrols.MaxTransactionCount object at 0x7f68114aa590&gt;\"], \"order_stream\": true, \"best_price_execution\": true, \"paper_trade\": false}\n{\"asctime\": \"2023-03-30 22:09:33,021\", \"levelname\": \"INFO\", \"message\": \"Exiting flumine\", \"clients\": {\"Betfair\": {}, \"Simulated\": {\"6bb3cddd\": {\"username\": \"6bb3cddd\", \"exchange\": \"Simulated\", \"betting_client\": null, \"current_transaction_count_total\": 0, \"transaction_count_total\": 0, \"trading_controls\": [\"&lt;flumine.controls.clientcontrols.MaxTransactionCount object at 0x7f68114aa590&gt;\"], \"order_stream\": true, \"best_price_execution\": true, \"paper_trade\": false}}, \"BetConnect\": {}}, \"markets\": {\"market_count\": 1, \"open_market_count\": 0}, \"streams\": [\"&lt;HistoricalStream(HistoricalStream, initial daemon)&gt;\"], \"logging_controls\": [], \"threads\": [\"&lt;_MainThread(MainThread, started 140085059739648)&gt;\"]}\ntime in mins = 0.05507066069791714\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\nProfit: 0.00\ntotal = 0 \n max = 0 \n min = 0```",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g2c8538b47ad",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2c8538b47ad4bed6facbb148134bb486.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "Trex44",
            "real_name": "Trex44",
            "display_name": "Trex44",
            "team": "T4G9NBD2M",
            "name": "c.s.mpharm",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1680214945.646269",
        "parent_user_id": "U03N4QBJ0TV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yxf",
                "elements": [
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "{\"asctime\": \"2023-03-30 22:09:29,717\", \"levelname\": \"INFO\", \"message\": \"Client added\", \"username\": \"6bb3cddd\", \"exchange\": \"Simulated\", \"betting_client\": null, \"current_transaction_count_total\": null, \"transaction_count_total\": null, \"trading_controls\": [], \"order_stream\": true, \"best_price_execution\": true, \"paper_trade\": false}\n{\"asctime\": \"2023-03-30 22:09:29,717\", \"levelname\": \"INFO\", \"message\": \"Adding market middleware <flumine.markets.middleware.SimulatedMiddleware object at 0x7f68114aa380>\"}\n{\"asctime\": \"2023-03-30 22:09:29,718\", \"levelname\": \"INFO\", \"message\": \"Adding client control MAX_TRANSACTION_COUNT\"}\n{\"asctime\": \"2023-03-30 22:09:29,718\", \"levelname\": \"INFO\", \"message\": \"Adding trading control ORDER_VALIDATION\"}\n{\"asctime\": \"2023-03-30 22:09:29,718\", \"levelname\": \"INFO\", \"message\": \"Adding trading control MARKET_VALIDATION\"}\n{\"asctime\": \"2023-03-30 22:09:29,718\", \"levelname\": \"INFO\", \"message\": \"Adding trading control STRATEGY_EXPOSURE\"}\n{\"asctime\": \"2023-03-30 22:09:29,718\", \"levelname\": \"INFO\", \"message\": \"Adding strategy LowestLayer\"}\n{\"asctime\": \"2023-03-30 22:09:29,719\", \"levelname\": \"INFO\", \"message\": \"Creating new HistoricalStream (1000) for strategy LowestLayer\", \"strategy\": \"LowestLayer\", \"stream_id\": 1000, \"market_filter\": \"\/home\/ubuntu\/Python_projects\/tmp\/races\/1.161864856\", \"event_id\": \"29441541\", \"event_processing\": false}\n{\"asctime\": \"2023-03-30 22:09:29,719\", \"levelname\": \"INFO\", \"message\": \"Starting flumine\", \"clients\": {\"Betfair\": {}, \"Simulated\": {\"6bb3cddd\": {\"username\": \"6bb3cddd\", \"exchange\": \"Simulated\", \"betting_client\": null, \"current_transaction_count_total\": 0, \"transaction_count_total\": 0, \"trading_controls\": [\"<flumine.controls.clientcontrols.MaxTransactionCount object at 0x7f68114aa590>\"], \"order_stream\": true, \"best_price_execution\": true, \"paper_trade\": false}}, \"BetConnect\": {}}, \"markets\": {\"market_count\": 0, \"open_market_count\": 0}, \"streams\": [\"<HistoricalStream(HistoricalStream, initial daemon)>\"], \"logging_controls\": [], \"threads\": [\"<_MainThread(MainThread, started 140085059739648)>\"]}\n{\"asctime\": \"2023-03-30 22:09:29,719\", \"levelname\": \"INFO\", \"message\": \"Client login\", \"username\": \"6bb3cddd\", \"exchange\": \"Simulated\", \"betting_client\": null, \"current_transaction_count_total\": 0, \"transaction_count_total\": 0, \"trading_controls\": [\"<flumine.controls.clientcontrols.MaxTransactionCount object at 0x7f68114aa590>\"], \"order_stream\": true, \"best_price_execution\": true, \"paper_trade\": false}\n{\"asctime\": \"2023-03-30 22:09:29,720\", \"levelname\": \"INFO\", \"message\": \"Client update account details\", \"username\": \"6bb3cddd\", \"exchange\": \"Simulated\", \"betting_client\": null, \"current_transaction_count_total\": 0, \"transaction_count_total\": 0, \"trading_controls\": [\"<flumine.controls.clientcontrols.MaxTransactionCount object at 0x7f68114aa590>\"], \"order_stream\": true, \"best_price_execution\": true, \"paper_trade\": false}\n{\"asctime\": \"2023-03-30 22:09:29,720\", \"levelname\": \"INFO\", \"message\": \"Starting historical market '\/home\/ubuntu\/Python_projects\/tmp\/races\/1.161864856'\", \"market\": \"\/home\/ubuntu\/Python_projects\/tmp\/races\/1.161864856\"}\n{\"asctime\": \"2023-03-30 22:09:29,720\", \"levelname\": \"INFO\", \"message\": \"[Register: 1000]: marketSubscription\"}\n{\"asctime\": \"2023-03-30 22:09:29,720\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: \\\"MarketStream\\\" created\"}\n{\"asctime\": \"2023-03-30 22:09:29,720\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.161864856 added, 1 markets in cache\"}\n{\"asctime\": \"2023-03-30 22:09:29,722\", \"levelname\": \"INFO\", \"message\": \"Adding: 1.161864856 to markets\"}\n{\"asctime\": \"2023-03-30 22:09:29,728\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.161864856 added, 1 markets in cache\"}\n{\"asctime\": \"2023-03-30 22:09:29,731\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.161864856 added, 1 markets in cache\"}\n{\"asctime\": \"2023-03-30 22:09:29,732\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.161864856 added, 1 markets in cache\"}\n{\"asctime\": \"2023-03-30 22:09:29,733\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.161864856 added, 1 markets in cache\"}\n{\"asctime\": \"2023-03-30 22:09:29,734\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.161864856 added, 1 markets in cache\"}\n{\"asctime\": \"2023-03-30 22:09:29,735\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.161864856 added, 1 markets in cache\"}\n{\"asctime\": \"2023-03-30 22:09:29,736\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.161864856 added, 1 markets in cache\"}\n{\"asctime\": \"2023-03-30 22:09:29,754\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.161864856 added, 1 markets in cache\"}\n{\"asctime\": \"2023-03-30 22:09:29,759\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.161864856 added, 1 markets in cache\"}\n{\"asctime\": \"2023-03-30 22:09:29,785\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.161864856 added, 1 markets in cache\"}\n{\"asctime\": \"2023-03-30 22:09:29,822\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.161864856 added, 1 markets in cache\"}\n{\"asctime\": \"2023-03-30 22:09:29,917\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.161864856 added, 1 markets in cache\"}\n{\"asctime\": \"2023-03-30 22:09:29,952\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.161864856 added, 1 markets in cache\"}\n{\"asctime\": \"2023-03-30 22:09:30,040\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.161864856 added, 1 markets in cache\"}\n{\"asctime\": \"2023-03-30 22:09:30,083\", \"levelname\": \"WARNING\", \"message\": \"Runner 12077917 (13.81) removed from market 1.161864856\"}\n{\"asctime\": \"2023-03-30 22:09:30,154\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.161864856 added, 1 markets in cache\"}\n{\"asctime\": \"2023-03-30 22:09:30,480\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.161864856 added, 1 markets in cache\"}\n{\"asctime\": \"2023-03-30 22:09:30,529\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.161864856 added, 1 markets in cache\"}\n{\"asctime\": \"2023-03-30 22:09:30,648\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.161864856 added, 1 markets in cache\"}\n----------------------------------------------\nSeconds to start = 0.176\nmarket_book.total matched = 0\n[r.total_matched for r in market_book.runners] = [24835.62, 3965.73, 2802.5, 593.19, 29.79, 153.78, 0]\nsum([r.total_matched for r in market_book.runners]) = 32380.609999999997\n----------------------------------------------\nSeconds to start = 0.063\nmarket_book.total matched = 0\n[r.total_matched for r in market_book.runners] = [24835.62, 4521.7, 2802.5, 593.19, 29.79, 153.78, 0]\nsum([r.total_matched for r in market_book.runners]) = 32936.579999999994\n----------------------------------------------\nSeconds to start = 0.003\nmarket_book.total matched = 0\n[r.total_matched for r in market_book.runners] = [24835.62, 4521.7, 2802.5, 593.19, 29.79, 45.97, 0]\nsum([r.total_matched for r in market_book.runners]) = 32828.77\n{\"asctime\": \"2023-03-30 22:09:33,018\", \"levelname\": \"INFO\", \"message\": \"Market 1.161864856 closed\", \"market_id\": \"1.161864856\", \"event_id\": \"29441541\", \"event_type_id\": \"7\", \"event_name\": \"Sedge 29th Aug\", \"market_type\": \"WIN\", \"market_start_datetime\": \"2019-08-29 18:20:00\", \"country_code\": \"GB\", \"venue\": \"Sedgefield\", \"race_type\": null, \"orders_cleared\": [], \"market_cleared\": [], \"closed\": true}\n{\"asctime\": \"2023-03-30 22:09:33,019\", \"levelname\": \"INFO\", \"message\": \"Market cleared\", \"market_id\": \"1.161864856\", \"order_count\": 0, \"clients\": {\"Betfair\": {}, \"Simulated\": {\"6bb3cddd\": {\"username\": \"6bb3cddd\", \"exchange\": \"Simulated\", \"betting_client\": null, \"current_transaction_count_total\": 0, \"transaction_count_total\": 0, \"trading_controls\": [\"<flumine.controls.clientcontrols.MaxTransactionCount object at 0x7f68114aa590>\"], \"order_stream\": true, \"best_price_execution\": true, \"paper_trade\": false}}, \"BetConnect\": {}}, \"markets\": {\"market_count\": 1, \"open_market_count\": 0}, \"streams\": [\"<HistoricalStream(HistoricalStream, initial daemon)>\"], \"logging_controls\": [], \"threads\": [\"<_MainThread(MainThread, started 140085059739648)>\"]}\n{\"asctime\": \"2023-03-30 22:09:33,019\", \"levelname\": \"INFO\", \"message\": \"Market level cleared\", \"market_id\": \"1.161864856\", \"profit\": 0, \"bet_count\": 0}\n{\"asctime\": \"2023-03-30 22:09:33,019\", \"levelname\": \"INFO\", \"message\": \"Market closed\", \"market_id\": \"1.161864856\", \"clients\": {\"Betfair\": {}, \"Simulated\": {\"6bb3cddd\": {\"username\": \"6bb3cddd\", \"exchange\": \"Simulated\", \"betting_client\": null, \"current_transaction_count_total\": 0, \"transaction_count_total\": 0, \"trading_controls\": [\"<flumine.controls.clientcontrols.MaxTransactionCount object at 0x7f68114aa590>\"], \"order_stream\": true, \"best_price_execution\": true, \"paper_trade\": false}}, \"BetConnect\": {}}, \"markets\": {\"market_count\": 1, \"open_market_count\": 0}, \"streams\": [\"<HistoricalStream(HistoricalStream, initial daemon)>\"], \"logging_controls\": [], \"threads\": [\"<_MainThread(MainThread, started 140085059739648)>\"]}\n{\"asctime\": \"2023-03-30 22:09:33,020\", \"levelname\": \"INFO\", \"message\": \"Removing market 1.161864856\", \"clients\": {\"Betfair\": {}, \"Simulated\": {\"6bb3cddd\": {\"username\": \"6bb3cddd\", \"exchange\": \"Simulated\", \"betting_client\": null, \"current_transaction_count_total\": 0, \"transaction_count_total\": 0, \"trading_controls\": [\"<flumine.controls.clientcontrols.MaxTransactionCount object at 0x7f68114aa590>\"], \"order_stream\": true, \"best_price_execution\": true, \"paper_trade\": false}}, \"BetConnect\": {}}, \"markets\": {\"market_count\": 1, \"open_market_count\": 0}, \"streams\": [\"<HistoricalStream(HistoricalStream, initial daemon)>\"], \"logging_controls\": [], \"threads\": [\"<_MainThread(MainThread, started 140085059739648)>\"]}\n{\"asctime\": \"2023-03-30 22:09:33,020\", \"levelname\": \"INFO\", \"message\": \"Completed historical market '\/home\/ubuntu\/Python_projects\/tmp\/races\/1.161864856'\"}\n{\"asctime\": \"2023-03-30 22:09:33,020\", \"levelname\": \"INFO\", \"message\": \"Simulation complete\"}\n{\"asctime\": \"2023-03-30 22:09:33,020\", \"levelname\": \"INFO\", \"message\": \"Shutting down Execution (SimulatedExecution)\"}\n{\"asctime\": \"2023-03-30 22:09:33,020\", \"levelname\": \"INFO\", \"message\": \"Shutting down Execution (BetfairExecution)\"}\n{\"asctime\": \"2023-03-30 22:09:33,020\", \"levelname\": \"INFO\", \"message\": \"Client logout\", \"username\": \"6bb3cddd\", \"exchange\": \"Simulated\", \"betting_client\": null, \"current_transaction_count_total\": 0, \"transaction_count_total\": 0, \"trading_controls\": [\"<flumine.controls.clientcontrols.MaxTransactionCount object at 0x7f68114aa590>\"], \"order_stream\": true, \"best_price_execution\": true, \"paper_trade\": false}\n{\"asctime\": \"2023-03-30 22:09:33,021\", \"levelname\": \"INFO\", \"message\": \"Exiting flumine\", \"clients\": {\"Betfair\": {}, \"Simulated\": {\"6bb3cddd\": {\"username\": \"6bb3cddd\", \"exchange\": \"Simulated\", \"betting_client\": null, \"current_transaction_count_total\": 0, \"transaction_count_total\": 0, \"trading_controls\": [\"<flumine.controls.clientcontrols.MaxTransactionCount object at 0x7f68114aa590>\"], \"order_stream\": true, \"best_price_execution\": true, \"paper_trade\": false}}, \"BetConnect\": {}}, \"markets\": {\"market_count\": 1, \"open_market_count\": 0}, \"streams\": [\"<HistoricalStream(HistoricalStream, initial daemon)>\"], \"logging_controls\": [], \"threads\": [\"<_MainThread(MainThread, started 140085059739648)>\"]}\ntime in mins = 0.05507066069791714\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nProfit: 0.00\ntotal = 0 \n max = 0 \n min = 0"
                            }
                        ],
                        "border": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "U03N4QBJ0TV",
        "type": "message",
        "ts": "1680243045.575339",
        "client_msg_id": "35cd2e94-0408-45b1-b9f0-a88c518f2ae1",
        "text": "Hey I was looking to do this to but was implementing the computation in the strategy class. What are the benefits\/reasons for implementing it in the middleware ?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g2c8538b47ad",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2c8538b47ad4bed6facbb148134bb486.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "Trex44",
            "real_name": "Trex44",
            "display_name": "Trex44",
            "team": "T4G9NBD2M",
            "name": "c.s.mpharm",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1679858003.936109",
        "parent_user_id": "U01AH6Q3GUV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YiNU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hey I was looking to do this to but was implementing the computation in the strategy class. What are the benefits\/reasons for implementing it in the middleware ?"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]