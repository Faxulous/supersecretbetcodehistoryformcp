[
    {
        "user": "UFTBRB3F1",
        "type": "message",
        "ts": "1570125678.221200",
        "text": "I'm having a similar issue, but I'm hoping its because I don't understand exactly what the async parameter does!\n\nIf I cancel an order, I get the Success message back and temporarily store the updated order details locally.\n\nHowever if I receive a streaming update fractionally after the cancel success message comes back it contains the old order details, which then over writes my local risk calcs...obviously causing plenty of problems!\n\nI saw below the async parameter was mentioned, which I have set as follows:\n\n```order_stream.start(async_=True)\nmarket_stream.start(async_=True)```\n\nIf I take out the async_=True then it just seems to hang and never gets past that point in the code.\n\nSo, is there something obvious I'm missing here, as I'm a bit confused?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g771e110be94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a771e110be945b86bede9d5c1bb551e3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Newbie99",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "vjmehra",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "fallback": "[September 27th, 2019 3:55 PM] maurice: Unless you use the async parameter then your order is in the book when your call to placeOrders returns.\n\nThe only reason a streaming price update received after that would not include your order would be if you had some latency in receiving the updates. ",
                "ts": "1569596156.170600",
                "author_id": "UBS7QANF3",
                "author_subname": "Maurice Berk",
                "channel_id": "C4HL6EZTQ",
                "is_msg_unfurl": true,
                "text": "Unless you use the async parameter then your order is in the book when your call to placeOrders returns.\n\nThe only reason a streaming price update received after that would not include your order would be if you had some latency in receiving the updates. ",
                "author_name": "Maurice Berk",
                "author_link": "https:\/\/betfairlightweight.slack.com\/team\/UBS7QANF3",
                "author_icon": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=48&d=https%3A%2F%2Fa.slack-edge.com%2F80588%2Fimg%2Favatars%2Fuser_shapes%2Fava_0011-48.png",
                "mrkdwn_in": [
                    "text"
                ],
                "color": "D0D0D0",
                "from_url": "https:\/\/betfairlightweight.slack.com\/archives\/C4HL6EZTQ\/p1569596156170600",
                "is_share": true,
                "footer": "Slack conversation"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sm1a",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm having a similar issue, but I'm hoping its because I don't understand exactly what the async parameter does!\n\nIf I cancel an order, I get the Success message back and temporarily store the updated order details locally.\n\nHowever if I receive a streaming update fractionally after the cancel success message comes back it contains the old order details, which then over writes my local risk calcs...obviously causing plenty of problems!\n\nI saw below the async parameter was mentioned, which I have set as follows:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "order_stream.start(async_=True)\nmarket_stream.start(async_=True)"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nIf I take out the async_=True then it just seems to hang and never gets past that point in the code.\n\nSo, is there something obvious I'm missing here, as I'm a bit confused?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN1497LJC",
        "type": "message",
        "ts": "1570141650.223100",
        "client_msg_id": "f2c427ae-a1a9-4a44-bab3-8948ef4261db",
        "text": "<@UFTBRB3F1>. There is a published time on the order and market book data. Could that help? I plan on testing those this weekend.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "ga740a9a5a57",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/1a740a9a5a57633755157e17ebe96b27.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0018-72.png",
            "first_name": "",
            "real_name": "JonJonJon",
            "display_name": "JonJonJon",
            "team": "T4G9NBD2M",
            "name": "edgetrading2",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "c6sRp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UFTBRB3F1"
                            },
                            {
                                "type": "text",
                                "text": ". There is a published time on the order and market book data. Could that help? I plan on testing those this weekend."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN1497LJC",
        "type": "message",
        "ts": "1570142874.226700",
        "client_msg_id": "b8cba391-afac-4a73-9007-689749ad8493",
        "text": "<@UFTBRB3F1> regarding why it hangs if you take out, look at <https:\/\/github.com\/liampauling\/betfair\/blob\/master\/betfairlightweight\/streaming\/betfairstream.py>. The code shows that async is False by default, and that the code will enter a loop that keepa going until the socket closes.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "ga740a9a5a57",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/1a740a9a5a57633755157e17ebe96b27.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0018-72.png",
            "first_name": "",
            "real_name": "JonJonJon",
            "display_name": "JonJonJon",
            "team": "T4G9NBD2M",
            "name": "edgetrading2",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "liampauling\/betfair",
                "title_link": "https:\/\/github.com\/liampauling\/betfair\/blob\/master\/betfairlightweight\/streaming\/betfairstream.py",
                "text": "Lightweight python wrapper for Betfair API-NG (with streaming) - liampauling\/betfair",
                "fallback": "GitHub: liampauling\/betfair",
                "thumb_url": "https:\/\/avatars2.githubusercontent.com\/u\/12016537?s=400&v=4",
                "from_url": "https:\/\/github.com\/liampauling\/betfair\/blob\/master\/betfairlightweight\/streaming\/betfairstream.py",
                "thumb_width": 392,
                "thumb_height": 392,
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/github.png",
                "id": 1,
                "original_url": "https:\/\/github.com\/liampauling\/betfair\/blob\/master\/betfairlightweight\/streaming\/betfairstream.py"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8ENhN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UFTBRB3F1"
                            },
                            {
                                "type": "text",
                                "text": " regarding why it hangs if you take out, look at "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/liampauling\/betfair\/blob\/master\/betfairlightweight\/streaming\/betfairstream.py"
                            },
                            {
                                "type": "text",
                                "text": ". The code shows that async is False by default, and that the code will enter a loop that keepa going until the socket closes."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]