[
    {
        "user": "U013K4VNB6D",
        "type": "message",
        "ts": "1668943794.573219",
        "client_msg_id": "7c1c58b6-a316-41f2-9fff-932d7a96074b",
        "text": "Hi\n\nI'd like to make is so that, when I run back tests using the multiprocessor code at <https:\/\/betcode-org.github.io\/flumine\/performance\/>, the orders in each process's blotter are written to a spreadsheet when that process has completed running.\n\nWould that be possible, and if so where would I put the a call to the spreadsheet-generating function?\n\nThanks\n\nJeff",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf188478b89f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f188478b89f4a5e2c5af9eafa0433712.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "",
            "real_name": "Jeff Waters",
            "display_name": "Jeff Waters",
            "team": "T4G9NBD2M",
            "name": "watersjg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "from_url": "https:\/\/betcode-org.github.io\/flumine\/performance\/",
                "service_icon": "https:\/\/betcode-org.github.io\/flumine\/images\/logo.png",
                "id": 1,
                "original_url": "https:\/\/betcode-org.github.io\/flumine\/performance\/",
                "fallback": "Performance - flumine",
                "text": "Betting trading framework",
                "title": "Performance - flumine",
                "title_link": "https:\/\/betcode-org.github.io\/flumine\/performance\/",
                "service_name": "betcode-org.github.io"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ce4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi\n\nI'd like to make is so that, when I run back tests using the multiprocessor code at "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/betcode-org.github.io\/flumine\/performance\/"
                            },
                            {
                                "type": "text",
                                "text": ", the orders in each process's blotter are written to a spreadsheet when that process has completed running.\n\nWould that be possible, and if so where would I put the a call to the spreadsheet-generating function?\n\nThanks\n\nJeff"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UPMUFSGCR",
        "type": "message",
        "ts": "1668947711.377809",
        "client_msg_id": "157e1f81-fe01-407f-9fb6-5ad070f8bfc1",
        "text": "Might have issues if they all want to write to the same spreadsheet.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "31c0bb5a442c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-28\/812386967189_31c0bb5a442c5b8d2c61_72.png",
            "first_name": "Jon",
            "real_name": "Jon Jon Jon Jon Jon Jon Jon Jon",
            "display_name": "Jonjonjon",
            "team": "T4G9NBD2M",
            "name": "fcmisc",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GVYrc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Might have issues if they all want to write to the same spreadsheet."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013K4VNB6D",
        "type": "message",
        "ts": "1668948111.866779",
        "edited": {
            "user": "U013K4VNB6D",
            "ts": "1668948271.000000"
        },
        "client_msg_id": "ef013aa0-474d-4f74-87b9-fb900c3538a9",
        "text": "Thanks <@UPMUFSGCR>\n\nI appreciate that. I was thinking of having a separate separate CSV file for each process, and writing some code to concatenate all the files in the containing folder.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf188478b89f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f188478b89f4a5e2c5af9eafa0433712.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "",
            "real_name": "Jeff Waters",
            "display_name": "Jeff Waters",
            "team": "T4G9NBD2M",
            "name": "watersjg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1668948111.866779",
        "reply_count": 3,
        "reply_users_count": 2,
        "latest_reply": "1668953667.614079",
        "reply_users": [
            "U4H19D1D2",
            "UPMUFSGCR"
        ],
        "replies": [
            {
                "user": "U4H19D1D2",
                "ts": "1668949318.457429"
            },
            {
                "user": "UPMUFSGCR",
                "ts": "1668950971.014249"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1668953667.614079"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1668953667.614079",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rDC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks "
                            },
                            {
                                "type": "user",
                                "user_id": "UPMUFSGCR"
                            },
                            {
                                "type": "text",
                                "text": "\n\nI appreciate that. I was thinking of having a separate separate CSV file for each process, and writing some code to concatenate all the files in the containing folder."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01C12ZEADQ",
        "type": "message",
        "ts": "1668948123.879629",
        "client_msg_id": "72a8a334-d061-4868-bc69-c19c34234b20",
        "text": "log it with json logging, and then post-process the logs?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "e3b7687b0ef8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-10-06\/1432945617648_e3b7687b0ef86e4f28b8_72.png",
            "first_name": "Alessio",
            "real_name": "Alessio",
            "display_name": "Alessio",
            "team": "T4G9NBD2M",
            "name": "alessio",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MnjD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "log it with json logging, and then post-process the logs?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013K4VNB6D",
        "type": "message",
        "ts": "1668948210.550389",
        "client_msg_id": "487a9149-9e7c-4d7c-8877-dc97f3438b03",
        "text": "Thanks <@U01C12ZEADQ>. I wasn't aware I could do that. I'll look into that.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf188478b89f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f188478b89f4a5e2c5af9eafa0433712.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "",
            "real_name": "Jeff Waters",
            "display_name": "Jeff Waters",
            "team": "T4G9NBD2M",
            "name": "watersjg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "U6ab",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks "
                            },
                            {
                                "type": "user",
                                "user_id": "U01C12ZEADQ"
                            },
                            {
                                "type": "text",
                                "text": ". I wasn't aware I could do that. I'll look into that."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1668949318.457429",
        "client_msg_id": "7b464516-9344-4004-a852-09909376bf1d",
        "text": "This is exactly what I do, filename is a concatenation of a run_id and process_id in a tmp directory",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1668948111.866779",
        "parent_user_id": "U013K4VNB6D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XnaB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is exactly what I do, filename is a concatenation of a run_id and process_id in a tmp directory"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U013K4VNB6D"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UPMUFSGCR",
        "type": "message",
        "ts": "1668950971.014249",
        "client_msg_id": "6aea1cbd-3f52-4a0e-9413-c745609e1e69",
        "text": "Yes that is what I do too. Though there can be annoying difficulties with concatenating too much as Pandas is not good at it..someone here probably has a good way to do it.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "31c0bb5a442c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-28\/812386967189_31c0bb5a442c5b8d2c61_72.png",
            "first_name": "Jon",
            "real_name": "Jon Jon Jon Jon Jon Jon Jon Jon",
            "display_name": "Jonjonjon",
            "team": "T4G9NBD2M",
            "name": "fcmisc",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1668948111.866779",
        "parent_user_id": "U013K4VNB6D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "z7V",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes that is what I do too. Though there can be annoying difficulties with concatenating too much as Pandas is not good at it..someone here probably has a good way to do it."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U013K4VNB6D"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1668953667.614079",
        "client_msg_id": "6cfcf564-6be9-4e71-b8fe-3abef3ba4606",
        "text": "I just read\/write to a big file then process through pandas",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1668948111.866779",
        "parent_user_id": "U013K4VNB6D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kN2s",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I just read\/write to a big file then process through pandas"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U013K4VNB6D"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U04980ZT6UX",
        "type": "message",
        "ts": "1668958116.628079",
        "client_msg_id": "2018c499-ee5f-4277-a894-e6e237e581b9",
        "text": "<@U4H19D1D2> Sorry, let me make it more clear:\n\nWhen using the `_create_order_from_current()` (see in the middleware example <https:\/\/github.com\/betcode-org\/flumine\/blob\/47af44b2173cf9d6b32fd9daef22dae510adea3f\/examples\/middleware\/orders.py#L45>), I get None in `strategy = self.flumine.strategies.hashes.get(strategy_name_hash)`\nThis entails that none of my previous orders gets created when the program restarts, as I get the error :\n{\"asctime\": \"2022-11-20 15:23:35,051\", \"levelname\": \"WARNING\", \"message\": \"OrdersMiddleware: Strategy not available to create order 138876445504398400\", \"bet_id\": \"287696652099\", \"market_id\": \"1.197093506\", \"customer_strategy_ref\": \"menoci\", \"customer_order_ref\": \"5458cb00631fc-138876445504398400\", \"strategy_name\": \"None\", \"client_username\": \"<mailto:xxxxx@gmail.com|xxxxx@gmail.com>\"}",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb1b2f82a1a4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b1b2f82a1a49a547cbc7487b48805187.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "AI",
            "real_name": "AI Trader",
            "display_name": "AI Trader",
            "team": "T4G9NBD2M",
            "name": "menocineto",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1668921355.212219",
        "parent_user_id": "U04980ZT6UX",
        "attachments": [
            {
                "id": 1,
                "footer_icon": "https:\/\/slack.github.com\/static\/img\/favicon-neutral.png",
                "color": "24292f",
                "bot_id": "B021ZJYSBMW",
                "app_unfurl_url": "https:\/\/github.com\/betcode-org\/flumine\/blob\/47af44b2173cf9d6b32fd9daef22dae510adea3f\/examples\/middleware\/orders.py#L45",
                "is_app_unfurl": true,
                "app_id": "A01BP7R4KNY",
                "fallback": "<https:\/\/github.com\/betcode-org\/flumine\/blob\/47af44b2173cf9d6b32fd9daef22dae510adea3f\/examples\/middleware\/orders.py | orders.py>",
                "text": "```\n    def _create_order_from_current(self, client, current_order, market):\n```",
                "title": "<https:\/\/github.com\/betcode-org\/flumine\/blob\/47af44b2173cf9d6b32fd9daef22dae510adea3f\/examples\/middleware\/orders.py | orders.py>",
                "footer": "<https:\/\/github.com\/betcode-org\/flumine|betcode-org\/flumine>",
                "mrkdwn_in": [
                    "text"
                ]
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EOK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U4H19D1D2"
                            },
                            {
                                "type": "text",
                                "text": " Sorry, let me make it more clear:\n\nWhen using the "
                            },
                            {
                                "type": "text",
                                "text": "_create_order_from_current()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " (see in the middleware example "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/betcode-org\/flumine\/blob\/47af44b2173cf9d6b32fd9daef22dae510adea3f\/examples\/middleware\/orders.py#L45"
                            },
                            {
                                "type": "text",
                                "text": "), I get None in "
                            },
                            {
                                "type": "text",
                                "text": "strategy = self.flumine.strategies.hashes.get(strategy_name_hash)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\nThis entails that none of my previous orders gets created when the program restarts, as I get the error :\n{\"asctime\": \"2022-11-20 15:23:35,051\", \"levelname\": \"WARNING\", \"message\": \"OrdersMiddleware: Strategy not available to create order 138876445504398400\", \"bet_id\": \"287696652099\", \"market_id\": \"1.197093506\", \"customer_strategy_ref\": \"menoci\", \"customer_order_ref\": \"5458cb00631fc-138876445504398400\", \"strategy_name\": \"None\", \"client_username\": \""
                            },
                            {
                                "type": "link",
                                "url": "mailto:xxxxx@gmail.com",
                                "text": "xxxxx@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": "\"}"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013PLN93AT",
        "type": "message",
        "ts": "1668985893.556049",
        "edited": {
            "user": "U013PLN93AT",
            "ts": "1668986114.000000"
        },
        "client_msg_id": "4aca0a68-eed2-4dee-9545-67bdeed8208e",
        "text": "Hi all,\nI have a greyhound bot which I've been running for a few months using bflw and a self-made scheduler, which starts the bot 5 mins before each race. I would like to port the strategy to flumine. However, flumine expects me to initialise the strategy object with a coarse filter which would subscribe to all greyhound markets at once, but this gets me over the 200 markets per connection limit on most days. What is the best way to go about this? I am only interested in market updates 5 min before the off since there is virtually no activity beforehand, so it seems a waste of subscriptions to spend them on markets which are overwhelmingly inactive.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g1e2aa0b687e",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/1e2aa0b687e3d4f68c7123a0791e9b2a.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "",
            "real_name": "mzaja",
            "display_name": "mzaja",
            "team": "T4G9NBD2M",
            "name": "mzaja0",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1668985893.556049",
        "reply_count": 3,
        "reply_users_count": 2,
        "latest_reply": "1669027865.587079",
        "reply_users": [
            "U4H19D1D2",
            "U013PLN93AT"
        ],
        "replies": [
            {
                "user": "U4H19D1D2",
                "ts": "1669014163.572149"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1669014178.529449"
            },
            {
                "user": "U013PLN93AT",
                "ts": "1669027865.587079"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1669027865.587079",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Vl2S",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi all,\nI have a greyhound bot which I've been running for a few months using bflw and a self-made scheduler, which starts the bot 5 mins before each race. I would like to port the strategy to flumine. However, flumine expects me to initialise the strategy object with a coarse filter which would subscribe to all greyhound markets at once, but this gets me over the 200 markets per connection limit on most days. What is the best way to go about this? I am only interested in market updates 5 min before the off since there is virtually no activity beforehand, so it seems a waste of subscriptions to spend them on markets which are overwhelmingly inactive."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U04980ZT6UX",
        "type": "message",
        "ts": "1668998146.176879",
        "client_msg_id": "7ffe662d-1866-4c92-9c3c-1ee879d017cd",
        "text": "Hi guys,\nI'm running my flumine instance in the cloud with the Middleware available in the examples for retrieving EXECUTION_COMPLETE orders whenever the program restarts. When running the same code locally, the middleware fails to retrieve the orders that were placed by the program in the cloud due to the strategy_name_hash `(current_order.customer_order_ref[:STRATEGY_NAME_HASH_LENGTH])` being different (even though the strategy name is the same both locally and in the cloud). I need help figuring out why this is happening, as  `customer_order_ref` should only depend on the strategy name? Any hints would be hugely appreciated as I have spent a lot of time trying to debug this with no success. The fact that orders only store the hash of the strategy name makes it more difficult to figure out if for some undesired reason my code is changing the strategy name.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb1b2f82a1a4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b1b2f82a1a49a547cbc7487b48805187.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "AI",
            "real_name": "AI Trader",
            "display_name": "AI Trader",
            "team": "T4G9NBD2M",
            "name": "menocineto",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1668998146.176879",
        "reply_count": 7,
        "reply_users_count": 2,
        "latest_reply": "1669255996.759649",
        "reply_users": [
            "U4H19D1D2",
            "U04980ZT6UX"
        ],
        "replies": [
            {
                "user": "U4H19D1D2",
                "ts": "1669016077.048399"
            },
            {
                "user": "U04980ZT6UX",
                "ts": "1669046032.839399"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1669046947.563979"
            },
            {
                "user": "U04980ZT6UX",
                "ts": "1669049176.309059"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1669061029.005929"
            },
            {
                "user": "U04980ZT6UX",
                "ts": "1669087892.321969"
            },
            {
                "user": "U04980ZT6UX",
                "ts": "1669255996.759649"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1669255996.759649",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0sC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi guys,\nI'm running my flumine instance in the cloud with the Middleware available in the examples for retrieving EXECUTION_COMPLETE orders whenever the program restarts. When running the same code locally, the middleware fails to retrieve the orders that were placed by the program in the cloud due to the strategy_name_hash "
                            },
                            {
                                "type": "text",
                                "text": "(current_order.customer_order_ref[:STRATEGY_NAME_HASH_LENGTH])",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " being different (even though the strategy name is the same both locally and in the cloud). I need help figuring out why this is happening, as  "
                            },
                            {
                                "type": "text",
                                "text": "customer_order_ref",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " should only depend on the strategy name? Any hints would be hugely appreciated as I have spent a lot of time trying to debug this with no success. The fact that orders only store the hash of the strategy name makes it more difficult to figure out if for some undesired reason my code is changing the strategy name."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1669014163.572149",
        "client_msg_id": "FD0F30D6-A031-4045-8315-CFCBFAEEF401",
        "text": "Ask betfair to bump your limit ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1668985893.556049",
        "parent_user_id": "U013PLN93AT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ujKOI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ask betfair to bump your limit "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1669014178.529449",
        "client_msg_id": "A056F1A2-4D60-48A8-A5AD-717B7A66714A",
        "text": "What’s being wasted? Streaming is extremely efficient ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1668985893.556049",
        "parent_user_id": "U013PLN93AT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Yv7PV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What’s"
                            },
                            {
                                "type": "text",
                                "text": " being wasted? Streaming is "
                            },
                            {
                                "type": "text",
                                "text": "extremely"
                            },
                            {
                                "type": "text",
                                "text": " efficient "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1669016077.048399",
        "client_msg_id": "3C8EE1F0-77EF-49E1-8878-85EE5977F47A",
        "text": "It will be because your hostname \/ customer_strategy_ref has changed, you can set it to a default value in the config. This is done so you can run multiple instances of flumine with separate orders ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1668998146.176879",
        "parent_user_id": "U04980ZT6UX",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8SMaO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It will be because your hostname \/ customer_strategy_ref has changed, you can set it to a default value in the config. This is done so you can run multiple instances of flumine with separate orders "
                            }
                        ]
                    }
                ]
            }
        ]
    }
]