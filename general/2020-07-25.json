[
    {
        "user": "UGV299K6H",
        "type": "message",
        "ts": "1595675749.276000",
        "client_msg_id": "72d4fba1-3cf3-423d-b17d-66b450023401",
        "text": "I don't think betfair markets have changed in any fundamental way in that time. Liquidity waxes and wains on this or that sport but basic market mechanics seem fixed to me.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g3a262a3cfba",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b3a262a3cfba292c18acf5777f65908a.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0006-72.png",
            "first_name": "Michael",
            "real_name": "Michael C",
            "display_name": "Michael",
            "team": "T4G9NBD2M",
            "name": "michael",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595441021.264100",
        "parent_user_id": "U016TGY3676",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VMmZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't think betfair markets have changed in any fundamental way in that time. Liquidity waxes and wains on this or that sport but basic market mechanics seem fixed to me."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGV299K6H",
        "type": "message",
        "ts": "1595675910.276200",
        "client_msg_id": "bff18850-f3d6-4b27-b857-161c34078ac7",
        "text": "I'm all for educated guesses too. You never know how a strategy is  going to do until you get some bets on so I just check that what I'm thinking isn't daft then give it a go.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g3a262a3cfba",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b3a262a3cfba292c18acf5777f65908a.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0006-72.png",
            "first_name": "Michael",
            "real_name": "Michael C",
            "display_name": "Michael",
            "team": "T4G9NBD2M",
            "name": "michael",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595441021.264100",
        "parent_user_id": "U016TGY3676",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uYQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm all for educated guesses too. You never know how a strategy is  going to do until you get some bets on so I just check that what I'm thinking isn't daft then give it a go."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U016TGY3676"
                ],
                "count": 1
            }
        ]
    },
    {
        "subtype": "channel_join",
        "user": "U017NPYRVHR",
        "text": "<@U017NPYRVHR> has joined the channel",
        "type": "message",
        "ts": "1595677713.276400"
    },
    {
        "user": "U017NPYRVHR",
        "type": "message",
        "ts": "1595678130.278200",
        "client_msg_id": "207563dd-1fd6-4739-8d7c-52141b09debc",
        "text": ":wave: hi everyone, got a quick question about vendor web app streaming api access ? Are we meant to create a connection for each user ? They seem to mandate on behalf of user headers for the connection session token",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g2e21e864355",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2e21e864355b38ea595c4fc699741c89.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "eduard",
            "display_name": "eduard",
            "team": "T4G9NBD2M",
            "name": "eduard.mucilianu",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BerTd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "emoji",
                                "name": "wave",
                                "unicode": "1f44b"
                            },
                            {
                                "type": "text",
                                "text": " hi everyone, got a quick question about vendor web app streaming api access ? Are we meant to create a connection for each user ? They seem to mandate on behalf of user headers for the connection session token"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U017NPYRVHR",
        "type": "message",
        "ts": "1595678192.279200",
        "client_msg_id": "afd89f70-768c-4678-b5a5-7de1591464b9",
        "text": "seems a bit overkill given that a per app distributed cache could provide odds to all users for a market rather than have N user connections for same market",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g2e21e864355",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2e21e864355b38ea595c4fc699741c89.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "eduard",
            "display_name": "eduard",
            "team": "T4G9NBD2M",
            "name": "eduard.mucilianu",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PES",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "seems a bit overkill given that a per app distributed cache could provide odds to all users for a market rather than have N user connections for same market"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0155J92A7Q",
        "type": "message",
        "ts": "1595691257.280100",
        "edited": {
            "user": "U0155J92A7Q",
            "ts": "1595691374.000000"
        },
        "client_msg_id": "adb470b0-17b9-4991-87ae-6d57433dbe5a",
        "text": "Hi guys! How do you querie for the marketStartTime? Is it possible to get this information with a call to listMarketBook endpoint? I want my strategy to finish some minutes before the market goes \"inplay\" as I have the feeling that odds get worse when it does, but sometimes marketStartTime can be changing",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gde8c5d51af5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/de8c5d51af54a5ac7b501f416ddb262c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "",
            "real_name": "Jorge",
            "display_name": "Jorge",
            "team": "T4G9NBD2M",
            "name": "jgarciam95",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oyOh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi guys! How do you querie for the marketStartTime? Is it possible to get this information with a call to listMarketBook endpoint? I want my strategy to finish some minutes before the market goes \"inplay\" as I have the feeling that odds get worse when it does, but sometimes marketStartTime can be changing"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1595691450.281200",
        "client_msg_id": "21DFC7A8-68E5-4801-9F87-294D4040D18A",
        "text": "Itâ€™s in the marketCatalogue or in the marketBook.market_definition (streaming only) <https:\/\/github.com\/liampauling\/betfair\/blob\/737e17f8d864c8bfae0a995f69a13b9550f1e78d\/examples\/exampleone.py#L45|https:\/\/github.com\/liampauling\/betfair\/blob\/737e17f8d864c8bfae0a995f69a13b9550f1e78d\/examples\/exampleone.py#L45>",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "fallback": "[liampauling\/betfair] examples\/exampleone.py:45",
                "text": "```\n            market_catalogue.market_start_time,\n```",
                "title": "examples\/exampleone.py:45",
                "footer": "<https:\/\/github.com\/liampauling\/betfair|liampauling\/betfair>",
                "id": 1,
                "title_link": "https:\/\/github.com\/liampauling\/betfair\/blob\/737e17f8d864c8bfae0a995f69a13b9550f1e78d\/examples\/exampleone.py#L45",
                "footer_icon": "https:\/\/github.githubassets.com\/favicon.ico",
                "color": "24292f",
                "mrkdwn_in": [
                    "text"
                ],
                "bot_id": "B01144Z0734",
                "app_unfurl_url": "https:\/\/github.com\/liampauling\/betfair\/blob\/737e17f8d864c8bfae0a995f69a13b9550f1e78d\/examples\/exampleone.py#L45",
                "is_app_unfurl": true
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "imF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Itâ€™s in the marketCatalogue or in the marketBook.market_definition (streaming only) "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/liampauling\/betfair\/blob\/737e17f8d864c8bfae0a995f69a13b9550f1e78d\/examples\/exampleone.py#L45",
                                "text": "https:\/\/github.com\/liampauling\/betfair\/blob\/737e17f8d864c8bfae0a995f69a13b9550f1e78d\/examples\/exampleone.py#L45"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0155J92A7Q",
        "type": "message",
        "ts": "1595691723.282300",
        "client_msg_id": "83673e66-42fc-41f6-9b95-231513ec8e04",
        "text": "I'm interested for the marketBook one, how can I get it to display market_definition? I am currently not using streaming but my own endpoint calls",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gde8c5d51af5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/de8c5d51af54a5ac7b501f416ddb262c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "",
            "real_name": "Jorge",
            "display_name": "Jorge",
            "team": "T4G9NBD2M",
            "name": "jgarciam95",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "j0ZB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm interested for the marketBook one, how can I get it to display market_definition? I am currently not using streaming but my own endpoint calls"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1595691942.282700",
        "client_msg_id": "c7c04e6e-ca7e-4304-aea0-f9c743ad42aa",
        "text": "The market definition is for streaming data only",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "b7es",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The market definition is for streaming data only"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0155J92A7Q",
        "type": "message",
        "ts": "1595691999.283600",
        "client_msg_id": "38f2e9e6-218a-403b-b2e7-d2515ad3b9a0",
        "text": "Aha I see, so I would need to make 2 calls per iteration in my strategy: listMarketBook for prices and listMarketCatalogue for start_time updates :L",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gde8c5d51af5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/de8c5d51af54a5ac7b501f416ddb262c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "",
            "real_name": "Jorge",
            "display_name": "Jorge",
            "team": "T4G9NBD2M",
            "name": "jgarciam95",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zkobX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Aha I see, so I would need to make 2 calls per iteration in my strategy: listMarketBook for prices and listMarketCatalogue for start_time updates :L"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1595692052.283800",
        "client_msg_id": "4d3900b0-5dd5-40bd-bfe9-73eae29eb0fd",
        "text": "Correct",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EYXnQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Correct"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1595692055.284000",
        "client_msg_id": "5c599916-fccf-4c20-bd00-b2b373e22ac0",
        "text": "Streaming is much better",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "66R",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Streaming is much better"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0155J92A7Q",
        "type": "message",
        "ts": "1595692087.284500",
        "client_msg_id": "a4dda411-6525-412c-9ef6-83189679bbfa",
        "text": "Maybe it's time for me to move to betfairlightweight and streaming:slightly_smiling_face:",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gde8c5d51af5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/de8c5d51af54a5ac7b501f416ddb262c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "",
            "real_name": "Jorge",
            "display_name": "Jorge",
            "team": "T4G9NBD2M",
            "name": "jgarciam95",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NnmX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Maybe it's time for me to move to betfairlightweight and streaming"
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1595692139.284700",
        "client_msg_id": "1C26EFB9-F2FD-40FB-91CA-F1D4093C7387",
        "text": "<https:\/\/liampauling.github.io\/betfair\/streaming\/|https:\/\/liampauling.github.io\/betfair\/streaming\/>",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "title": "Streaming - betfairlightweight",
                "title_link": "https:\/\/liampauling.github.io\/betfair\/streaming\/",
                "text": "Lightweight, super fast (uses c libraries) pythonic wrapper for Betfair API-NG.",
                "fallback": "Streaming - betfairlightweight",
                "from_url": "https:\/\/liampauling.github.io\/betfair\/streaming\/",
                "service_icon": "https:\/\/liampauling.github.io\/betfair\/assets\/images\/favicon.png",
                "service_name": "liampauling.github.io",
                "id": 1,
                "original_url": "https:\/\/liampauling.github.io\/betfair\/streaming\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "d1tJf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/liampauling.github.io\/betfair\/streaming\/",
                                "text": "https:\/\/liampauling.github.io\/betfair\/streaming\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1595692176.285000",
        "client_msg_id": "6628e9e5-3ea3-4c46-b1a1-3e530c57a6e6",
        "text": "The sooner you switch, the better",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jsD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The sooner you switch, the better"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U4H19D1D2",
                    "U0155J92A7Q"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U0155J92A7Q",
        "type": "message",
        "ts": "1595692288.286400",
        "client_msg_id": "3ff9b336-5e78-40e9-8670-ec1cdf3fdf88",
        "text": "I'm just not a big fan of threading in Python. My main concern is error handling in the daemon thread",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gde8c5d51af5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/de8c5d51af54a5ac7b501f416ddb262c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "",
            "real_name": "Jorge",
            "display_name": "Jorge",
            "team": "T4G9NBD2M",
            "name": "jgarciam95",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NgaM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm just not a big fan of threading in Python. My main concern is error handling in the daemon thread"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1595692363.286600",
        "client_msg_id": "11b06832-73f6-4530-bd82-c69d8c9e62cd",
        "text": "Here you go then: <https:\/\/github.com\/liampauling\/betfair\/blob\/master\/examples\/examplestreamingerrhandling.py>",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "fallback": "[liampauling\/betfair] examples\/examplestreamingerrhandling.py",
                "text": "```\nimport logging\nimport queue\nimport threading\nfrom tenacity import retry, wait_exponential\n\nimport betfairlightweight\nfrom betfairlightweight import StreamListener\nfrom betfairlightweight import BetfairError\nfrom betfairlightweight.filters import (\n    streaming_market_filter,\n    streaming_market_data_filter,\n)\n\n\"\"\"\nStreaming example to handle timeouts or connection errors, \nwith reconnect.\n\nCode uses 'tenacity' library for retrying.\n\nStreaming class inherits threading module to simplify start\/\nstop.\n\"\"\"\n\n# setup logging\nlogging.basicConfig(level=<http:\/\/logging.INFO|logging.INFO>)  # change to DEBUG to see log all updates\nlogger = logging.getLogger(__name__)\n\n\nclass Streaming(threading.Thread):\n    def __init__(\n        self,\n        client: betfairlightweight.APIClient,\n        market_filter: dict,\n        market_data_filter: dict,\n        conflate_ms: int = None,\n        streaming_unique_id: int = 1000,\n    ):\n        threading.Thread.__init__(self, daemon=True, name=self.__class__.__name__)\n        self.client = client\n        self.market_filter = market_filter\n        self.market_data_filter = market_data_filter\n        self.conflate_ms = conflate_ms\n        self.streaming_unique_id = streaming_unique_id\n        self.stream = None\n        self.output_queue = queue.Queue()\n        self.listener = StreamListener(output_queue=self.output_queue)\n\n    @retry(wait=wait_exponential(multiplier=1, min=2, max=20))\n    def run(self) -&gt; None:\n        <http:\/\/logger.info|logger.info>(\"Starting MarketStreaming\")\n        self.client.login()\n        self.stream = self.client.streaming.create_stream(\n            unique_id=self.streaming_unique_id, listener=self.listener\n        )\n        try:\n            self.streaming_unique_id = self.stream.subscribe_to_markets(\n                market_filter=self.market_filter,\n                market_data_filter=self.market_data_filter,\n                conflate_ms=self.conflate_ms,\n                initial_clk=self.listener.initial_clk,  # supplying these two values allows a reconnect\n                clk=self.listener.clk,\n            )\n            self.stream.start()\n        except BetfairError:\n            logger.error(\"MarketStreaming run error\", exc_info=True)\n            raise\n        except Exception:\n            logger.critical(\"MarketStreaming run error\", exc_info=True)\n            raise\n        <http:\/\/logger.info|logger.info>(\"Stopped MarketStreaming {0}\".format(self.streaming_unique_id))\n\n    def stop(self) -&gt; None:\n        if self.stream:\n            self.stream.stop()\n\n\n# create trading instance (app key must be activated for streaming)\ntrading = betfairlightweight.APIClient(\"username\", \"password\", app_key=\"appKey\")\n\n# login\ntrading.login()\n\n# create filters (GB WIN racing)\nmarket_filter = streaming_market_filter(\n    event_type_ids=[\"7\"], country_codes=[\"GB\"], market_types=[\"WIN\"]\n)\nmarket_data_filter = streaming_market_data_filter(\n    fields=[\"EX_BEST_OFFERS\", \"EX_MARKET_DEF\"], ladder_levels=3\n)\n\n# create streaming object\nstreaming = Streaming(trading, market_filter, market_data_filter)\n\n# start streaming (runs in new thread and handles any errors)\nstreaming.start()\n\n# check for updates in output queue\nwhile True:\n    market_books = streaming.output_queue.get()\n    print(market_books)\n\n    for market_book in market_books:\n        print(\n            market_book,\n            market_book.streaming_unique_id,  # unique id of stream (returned from subscribe request)\n            market_book.streaming_update,  # json update received\n            market_book.market_definition,  # streaming definition, similar to catalogue request\n            market_book.publish_time,  # betfair publish time of update\n        )\n\n```",
                "title": "examples\/examplestreamingerrhandling.py",
                "footer": "<https:\/\/github.com\/liampauling\/betfair|liampauling\/betfair>",
                "id": 1,
                "title_link": "https:\/\/github.com\/liampauling\/betfair\/blob\/master\/examples\/examplestreamingerrhandling.py",
                "footer_icon": "https:\/\/github.githubassets.com\/favicon.ico",
                "color": "24292f",
                "mrkdwn_in": [
                    "text"
                ],
                "bot_id": "B01144Z0734",
                "app_unfurl_url": "https:\/\/github.com\/liampauling\/betfair\/blob\/master\/examples\/examplestreamingerrhandling.py",
                "is_app_unfurl": true
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DX7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here you go then: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/liampauling\/betfair\/blob\/master\/examples\/examplestreamingerrhandling.py"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0155J92A7Q",
        "type": "message",
        "ts": "1595692699.287300",
        "edited": {
            "user": "U0155J92A7Q",
            "ts": "1595692731.000000"
        },
        "client_msg_id": "cf04667d-2a6d-47b6-a91b-8032ddabf72c",
        "text": "So basically in the Order Stream: *current_orders = output_queue.get()* will give me the same return as listCurrentOrders endpoint?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gde8c5d51af5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/de8c5d51af54a5ac7b501f416ddb262c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "",
            "real_name": "Jorge",
            "display_name": "Jorge",
            "team": "T4G9NBD2M",
            "name": "jgarciam95",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JP\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So basically in the Order Stream:"
                            },
                            {
                                "type": "text",
                                "text": " current_orders = output_queue.get() ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "will give me the same return as listCurrentOrders endpoint?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0155J92A7Q",
        "type": "message",
        "ts": "1595692806.288300",
        "client_msg_id": "d4e4922f-3c11-41c8-8642-87089481de2d",
        "text": "And in the Market Stream: *market_books = output_queue.get()* will give me the same return as listMarketBook endpoint?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gde8c5d51af5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/de8c5d51af54a5ac7b501f416ddb262c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "",
            "real_name": "Jorge",
            "display_name": "Jorge",
            "team": "T4G9NBD2M",
            "name": "jgarciam95",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "30h4=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And in the Market Stream: "
                            },
                            {
                                "type": "text",
                                "text": "market_books = output_queue.get() ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "will give me the same return as listMarketBook endpoint?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1595693252.289400",
        "client_msg_id": "07C42A36-EDD8-4884-ADB9-4DAAF53DF1C4",
        "text": "Yep, there are some nuances with current orders and the market book has extra stuff like the definition, worth reading the bf + bflw docs ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FMn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yep, there are some nuances with current orders and the market book has extra stuff like the definition, worth reading the bf + bflw docs "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U017FQEPV1U",
        "type": "message",
        "ts": "1595723727.302900",
        "client_msg_id": "41963f36-e69e-4246-9b8d-eeb6bd25e6b9",
        "text": "howdy all, what is the general consensus, when placing an order to do it async and subscribe to the orders streaming feed, or synchronously and wait for reply?  And infact anyone done any work on response times between streaming order responses vs the api ng endpoints return times?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gc5e9f194eb1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c5e9f194eb1ababcca14bbc25c327548.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "qwerty.nat",
            "display_name": "qwerty.nat",
            "team": "T4G9NBD2M",
            "name": "qwerty.nat",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "j+ach",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "howdy all, what is the general consensus, when placing an order to do it async and subscribe to the orders streaming feed, or synchronously and wait for reply?  And infact anyone done any work on response times between streaming order responses vs the api ng endpoints return times?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U016535QCJ2",
        "type": "message",
        "ts": "1595725968.304900",
        "client_msg_id": "146c098b-c3f0-47e8-999e-d4ce835fc167",
        "text": "My view is that it's a lot better to just use the streaming as it has all the bets in one place and doesn't rely on A) waiting for a bets response, and B) parsing the bets response. The only issue you can have is that when you initially subscribe it doesn't return your current matched orders",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "048f61bdc189",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-01\/1216267094995_048f61bdc189acecaafc_72.jpg",
            "first_name": "Misha",
            "real_name": "Misha Charrett",
            "display_name": "Misha",
            "team": "T4G9NBD2M",
            "name": "misha",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "88q",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My view is that it's a lot better to just use the streaming as it has all the bets in one place and doesn't rely on A) waiting for a bets response, and B) parsing the bets response. The only issue you can have is that when you initially subscribe it doesn't return your current matched orders"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U016535QCJ2",
        "type": "message",
        "ts": "1595726063.305900",
        "client_msg_id": "2feec8bb-f111-45de-ac0d-672dfbda2c9e",
        "text": "Especially in that if your bet is unmatched you would have to continuously poll to see when it matches if you don't use the stream",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "048f61bdc189",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-01\/1216267094995_048f61bdc189acecaafc_72.jpg",
            "first_name": "Misha",
            "real_name": "Misha Charrett",
            "display_name": "Misha",
            "team": "T4G9NBD2M",
            "name": "misha",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "H3T",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Especially in that if your bet is unmatched you would have to continuously poll to see when it matches if you don't use the stream"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]