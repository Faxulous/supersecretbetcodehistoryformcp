[
    {
        "user": "U01U24AG35W",
        "type": "message",
        "ts": "1625564755.311100",
        "client_msg_id": "d8efedf6-b8ec-4daf-9632-23a27fff5c03",
        "text": "I'm trying to understand *<https:\/\/docs.developer.betfair.com\/display\/1smk3cen4v3lu3yomq5qye0ni\/Betting+Type+Definitions|StartingPrices > &gt;*<https:\/\/docs.developer.betfair.com\/display\/1smk3cen4v3lu3yomq5qye0ni\/Betting+Type+Definitions|backStakeTaken> ('spl' key in Runner Change msg.) using the Description in the Betting API but getting nowhere.\n• The Type is a List\n• The Description says \"The total amount of back bets matched at the actual Betfair Starting Price.\"\n• This implies that there is only ever 1 &lt;PriceSize&gt; as there is only 1 BSP per runner.\nBut I assume that to not be the case as the type is List AND betfairlightweight uses the same Available.update() method that is used for processing say ExchangePrices &gt; availableToBack  ('atb' key) which is definitely a list.\n\nCan someone please de-befuddle me.\nThanks",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "d12d00b0e337",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-04-05\/1930559079267_d12d00b0e33706cb4bbd_72.png",
            "first_name": "Thomas",
            "real_name": "Thomas Jakubauskas",
            "display_name": "ThomasJ",
            "team": "T4G9NBD2M",
            "name": "thomasaj05",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1625564755.311100",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1625634206.322600",
        "reply_users": [
            "UUUAJQZ5J"
        ],
        "replies": [
            {
                "user": "UUUAJQZ5J",
                "ts": "1625634206.322600"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lXHW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm trying to understand "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/docs.developer.betfair.com\/display\/1smk3cen4v3lu3yomq5qye0ni\/Betting+Type+Definitions",
                                "text": "StartingPrices > ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/docs.developer.betfair.com\/display\/1smk3cen4v3lu3yomq5qye0ni\/Betting+Type+Definitions",
                                "text": "backStakeTaken"
                            },
                            {
                                "type": "text",
                                "text": " ('spl' key in Runner Change msg.) using the Description in the Betting API but getting nowhere.\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "The Type is a List"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "The Description says \"The total amount of back bets matched at the actual Betfair Starting Price.\""
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "This implies that there is only ever 1 <PriceSize> as there is only 1 BSP per runner."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "But I assume that to not be the case as the type is List AND betfairlightweight uses the same Available.update() method that is used for processing say ExchangePrices > availableToBack  ('atb' key) which is definitely a list.\n\nCan someone please de-befuddle me.\nThanks"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "Cache just matches the data structure betfair provide, agreed that it probably doesn't make sense",
        "files": [
            {
                "id": "F026ZA36PQW",
                "mode": "hidden_by_limit"
            },
            {
                "id": "F027C8QPDL4",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U4H19D1D2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aOR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Cache just matches the data structure betfair provide, agreed that it probably doesn't make sense"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1625565837.311700"
    },
    {
        "user": "U01U24AG35W",
        "type": "message",
        "ts": "1625566834.313900",
        "edited": {
            "user": "U01U24AG35W",
            "ts": "1625566915.000000"
        },
        "client_msg_id": "8274e921-9a21-4357-a36b-b780614cb549",
        "text": "Thanks Liam. Just so I am 100% sure.\nClass RunnerBookSP self.back_stake_taken = [PriceSize(**i) for i in _backStakeTaken_] will only ever at most contain 1 element in the List?\n\nBTW your effort in creating BFLW and maintaining it is simply amazing. Thank you.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "d12d00b0e337",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-04-05\/1930559079267_d12d00b0e33706cb4bbd_72.png",
            "first_name": "Thomas",
            "real_name": "Thomas Jakubauskas",
            "display_name": "ThomasJ",
            "team": "T4G9NBD2M",
            "name": "thomasaj05",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tbsC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks Liam. Just so I am 100% sure.\nClass RunnerBookSP self.back_stake_taken = [PriceSize(**i) for i in "
                            },
                            {
                                "type": "text",
                                "text": "backStakeTaken",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "] will only ever at most contain 1 element in the List?\n\nBTW your effort in creating BFLW and maintaining it is simply amazing. Thank you."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1625567001.315100",
        "client_msg_id": "618f53de-ff26-4f20-bd70-b1be8855910f",
        "text": "theoretically, assuming non runner removals are handled correctly (which they should be), out of interest why are you looking this deep? Found a problem?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yEOor",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "theoretically, assuming non runner removals are handled correctly (which they should be), out of interest why are you looking this deep? Found a problem?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNQGKT0CR",
        "type": "message",
        "ts": "1625567182.315800",
        "client_msg_id": "1C1074D8-4617-4B89-9B13-86D3C8AEC561",
        "text": "It could contain &gt;1 element pre race going in play though I think ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g51b5871ab46",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/51b5871ab46e5ef289d9e90376cacaab.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "AP",
            "real_name": "AP",
            "display_name": "AP",
            "team": "T4G9NBD2M",
            "name": "ant.papa22",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dplL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It could contain >1 element pre race going in play though I think "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNQGKT0CR",
        "type": "message",
        "ts": "1625567354.317400",
        "client_msg_id": "09B84706-297F-4C01-853A-E62C95BA0612",
        "text": "Before the SP is reconciled ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g51b5871ab46",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/51b5871ab46e5ef289d9e90376cacaab.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "AP",
            "real_name": "AP",
            "display_name": "AP",
            "team": "T4G9NBD2M",
            "name": "ant.papa22",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xn=Ag",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Before the SP is reconciled "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "yeah you are correct, looks like the field is used for pending orders as I guess they are execution complete at this point",
        "files": [
            {
                "id": "F027VRNDDB2",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U4H19D1D2",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6Dx\/n",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "yeah you are correct, looks like the field is used for pending orders as I guess they are execution complete at this point"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1625567508.318800"
    },
    {
        "user": "U01U24AG35W",
        "type": "message",
        "ts": "1625567531.319000",
        "edited": {
            "user": "U01U24AG35W",
            "ts": "1625568300.000000"
        },
        "client_msg_id": "1ff4f4e1-48b6-4481-b3dc-e6af1a7b0531",
        "text": "<@U4H19D1D2> No problem. I'm going over some <https:\/\/betfair-datascientists.github.io\/historicData\/jsonToCsvTutorial\/#complete-code|code> provided by Betfair in Oz that uses parts of BFLW to read historical data and new code to process it and write CSV. There is a section in the new code that seems to use 'spb' and 'spl' to calculate \"calculating SP traded vol as smaller of back_stake_taken or (lay_liability_taken \/ (BSP - 1))\" which I cannot fathom.\nThis is performed using Final market. The code was written by a BF employee so I guess it must have some significance.\n\nFor info the specific code in question is...\n\n`# returning smaller of two numbers where min not 0`\n`_def_ min_gr0(_a_: float, _b_: float) -&gt; float:`\n    `if _a_ &lt;= 0:`\n        `return _b_`\n    `if _b_ &lt;= 0:`\n        `return _a_`\n\n    `return min(_a_, _b_)`\n\n`postplay_traded = [ (`\n            `r.last_price_traded,`\n            `r.ex.traded_volume,`\n            `# calculating SP traded vol as smaller of back_stake_taken or (lay_liability_taken \/ (BSP - 1))`        \n            `min_gr0(`\n                `next((pv.size for pv in r.sp.back_stake_taken if pv.size &gt; 0), 0),`\n                `next((pv.size for pv in r.sp.lay_liability_taken if pv.size &gt; 0), 0)  \/ ((r.sp.actual_sp if type(r.sp.actual_sp) is float else 0) - 1)`\n            `)`\n        `) for r in postplay_market.runners ]`",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "d12d00b0e337",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-04-05\/1930559079267_d12d00b0e33706cb4bbd_72.png",
            "first_name": "Thomas",
            "real_name": "Thomas Jakubauskas",
            "display_name": "ThomasJ",
            "team": "T4G9NBD2M",
            "name": "thomasaj05",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1625567531.319000",
        "reply_count": 4,
        "reply_users_count": 2,
        "latest_reply": "1625634639.324900",
        "reply_users": [
            "UBS7QANF3",
            "UUUAJQZ5J"
        ],
        "replies": [
            {
                "user": "UBS7QANF3",
                "ts": "1625632932.322300"
            },
            {
                "user": "UUUAJQZ5J",
                "ts": "1625634281.322900"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1625634595.324500"
            },
            {
                "user": "UUUAJQZ5J",
                "ts": "1625634639.324900"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1625634639.324900",
        "attachments": [
            {
                "title": "JSON to CSV in Python - The Automation Hub",
                "title_link": "https:\/\/betfair-datascientists.github.io\/historicData\/jsonToCsvTutorial\/#complete-code",
                "text": "Documentation, guides and articles on creating, developing and implementing automated betting strategies, using data analysis to inform betting models and how to interact with the Betfair API.",
                "fallback": "JSON to CSV in Python - The Automation Hub",
                "from_url": "https:\/\/betfair-datascientists.github.io\/historicData\/jsonToCsvTutorial\/#complete-code",
                "service_icon": "https:\/\/betfair-datascientists.github.io\/img\/BetfairFavicon.ico",
                "service_name": "betfair-datascientists.github.io",
                "id": 1,
                "original_url": "https:\/\/betfair-datascientists.github.io\/historicData\/jsonToCsvTutorial\/#complete-code"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ig\/HU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U4H19D1D2"
                            },
                            {
                                "type": "text",
                                "text": " No problem. I'm going over some "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/betfair-datascientists.github.io\/historicData\/jsonToCsvTutorial\/#complete-code",
                                "text": "code"
                            },
                            {
                                "type": "text",
                                "text": " provided by Betfair in Oz that uses parts of BFLW to read historical data and new code to process it and write CSV. There is a section in the new code that seems to use 'spb' and 'spl' to calculate \"calculating SP traded vol as smaller of back_stake_taken or (lay_liability_taken \/ (BSP - 1))\" which I cannot fathom.\nThis is performed using Final market. The code was written by a BF employee so I guess it must have some significance.\n\nFor info the specific code in question is...\n\n"
                            },
                            {
                                "type": "text",
                                "text": "# returning smaller of two numbers where min not 0",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "def",
                                "style": {
                                    "italic": true,
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " min_gr0(",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "a",
                                "style": {
                                    "italic": true,
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ": float, ",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "b",
                                "style": {
                                    "italic": true,
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ": float) -> float:",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "    if ",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "a",
                                "style": {
                                    "italic": true,
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " <= 0:",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "        return ",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "b",
                                "style": {
                                    "italic": true,
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "    if ",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "b",
                                "style": {
                                    "italic": true,
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " <= 0:",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "        return ",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "a",
                                "style": {
                                    "italic": true,
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            },
                            {
                                "type": "text",
                                "text": "    return min(",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "a",
                                "style": {
                                    "italic": true,
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", ",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "b",
                                "style": {
                                    "italic": true,
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ")",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            },
                            {
                                "type": "text",
                                "text": "postplay_traded = [ (",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "            r.last_price_traded,",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "            r.ex.traded_volume,",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "            # calculating SP traded vol as smaller of back_stake_taken or (lay_liability_taken \/ (BSP - 1))        ",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "            min_gr0(",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "                next((pv.size for pv in r.sp.back_stake_taken if pv.size > 0), 0),",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "                next((pv.size for pv in r.sp.lay_liability_taken if pv.size > 0), 0)  \/ ((r.sp.actual_sp if type(r.sp.actual_sp) is float else 0) - 1)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "            )",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "        ) for r in postplay_market.runners ]",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "channel_join",
        "user": "U027WDZ74QY",
        "text": "<@U027WDZ74QY> has joined the channel",
        "type": "message",
        "ts": "1625578058.320800"
    },
    {
        "user": "U012XF5CNPN",
        "type": "message",
        "ts": "1625611530.322100",
        "client_msg_id": "532D3F5C-D466-454C-BFED-AC840FF44980",
        "text": "Commission is only charged on profits. You can factor it in. There are many, many bots in there.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf0a1c4f12dc",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f0a1c4f12dc16bc00aa5abf1a75d640e.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Paul",
            "real_name": "Paul Robinson",
            "display_name": "Paul",
            "team": "T4G9NBD2M",
            "name": "paul",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1624398722.010000",
        "parent_user_id": "U01DCR5PXDY",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Qsnv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Commission is only charged on profits. You can factor it in. There are many, many bots in there."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1625632932.322300",
        "client_msg_id": "3761d667-2c74-45f3-8cc1-7d4aaf65dfe2",
        "text": "&gt; The code was written by a BF employee so I guess it must have some significance.\n:joy:",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1625567531.319000",
        "parent_user_id": "U01U24AG35W",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XbUIo",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The code was written by a BF employee so I guess it must have some significance."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "emoji",
                                "name": "joy",
                                "unicode": "1f602"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "thread_broadcast",
        "user": "UUUAJQZ5J",
        "thread_ts": "1625564755.311100",
        "root": {
            "user": "U01U24AG35W",
            "type": "message",
            "ts": "1625564755.311100",
            "client_msg_id": "d8efedf6-b8ec-4daf-9632-23a27fff5c03",
            "text": "I'm trying to understand *<https:\/\/docs.developer.betfair.com\/display\/1smk3cen4v3lu3yomq5qye0ni\/Betting+Type+Definitions|StartingPrices > &gt;*<https:\/\/docs.developer.betfair.com\/display\/1smk3cen4v3lu3yomq5qye0ni\/Betting+Type+Definitions|backStakeTaken> ('spl' key in Runner Change msg.) using the Description in the Betting API but getting nowhere.\n• The Type is a List\n• The Description says \"The total amount of back bets matched at the actual Betfair Starting Price.\"\n• This implies that there is only ever 1 &lt;PriceSize&gt; as there is only 1 BSP per runner.\nBut I assume that to not be the case as the type is List AND betfairlightweight uses the same Available.update() method that is used for processing say ExchangePrices &gt; availableToBack  ('atb' key) which is definitely a list.\n\nCan someone please de-befuddle me.\nThanks",
            "team": "T4G9NBD2M",
            "thread_ts": "1625564755.311100",
            "reply_count": 1,
            "reply_users_count": 1,
            "latest_reply": "1625634206.322600",
            "reply_users": [
                "UUUAJQZ5J"
            ],
            "replies": [
                {
                    "user": "UUUAJQZ5J",
                    "ts": "1625634206.322600"
                }
            ],
            "is_locked": false,
            "subscribed": false,
            "blocks": [
                {
                    "type": "rich_text",
                    "block_id": "lXHW",
                    "elements": [
                        {
                            "type": "rich_text_section",
                            "elements": [
                                {
                                    "type": "text",
                                    "text": "I'm trying to understand "
                                },
                                {
                                    "type": "link",
                                    "url": "https:\/\/docs.developer.betfair.com\/display\/1smk3cen4v3lu3yomq5qye0ni\/Betting+Type+Definitions",
                                    "text": "StartingPrices > ",
                                    "style": {
                                        "bold": true
                                    }
                                },
                                {
                                    "type": "link",
                                    "url": "https:\/\/docs.developer.betfair.com\/display\/1smk3cen4v3lu3yomq5qye0ni\/Betting+Type+Definitions",
                                    "text": "backStakeTaken"
                                },
                                {
                                    "type": "text",
                                    "text": " ('spl' key in Runner Change msg.) using the Description in the Betting API but getting nowhere.\n"
                                }
                            ]
                        },
                        {
                            "type": "rich_text_list",
                            "elements": [
                                {
                                    "type": "rich_text_section",
                                    "elements": [
                                        {
                                            "type": "text",
                                            "text": "The Type is a List"
                                        }
                                    ]
                                },
                                {
                                    "type": "rich_text_section",
                                    "elements": [
                                        {
                                            "type": "text",
                                            "text": "The Description says \"The total amount of back bets matched at the actual Betfair Starting Price.\""
                                        }
                                    ]
                                },
                                {
                                    "type": "rich_text_section",
                                    "elements": [
                                        {
                                            "type": "text",
                                            "text": "This implies that there is only ever 1 <PriceSize> as there is only 1 BSP per runner."
                                        }
                                    ]
                                }
                            ],
                            "style": "bullet",
                            "indent": 0
                        },
                        {
                            "type": "rich_text_section",
                            "elements": [
                                {
                                    "type": "text",
                                    "text": "But I assume that to not be the case as the type is List AND betfairlightweight uses the same Available.update() method that is used for processing say ExchangePrices > availableToBack  ('atb' key) which is definitely a list.\n\nCan someone please de-befuddle me.\nThanks"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "type": "message",
        "ts": "1625634206.322600",
        "client_msg_id": "76db5c68-9706-4ea2-ad85-6505d9439cb0",
        "text": "this array can have multiple values because pre-play it includes LIMIT_ON_CLOSE bets, with the price value of the limit. once SP is reconciled it will only have one value.",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rrl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "this array can have multiple values because pre-play it includes LIMIT_ON_CLOSE bets, with the price value of the limit. once SP is reconciled it will only have one value."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UBS7QANF3"
                ],
                "count": 1
            }
        ]
    },
    {
        "subtype": "thread_broadcast",
        "user": "UUUAJQZ5J",
        "thread_ts": "1625567531.319000",
        "root": {
            "user": "U01U24AG35W",
            "type": "message",
            "ts": "1625567531.319000",
            "edited": {
                "user": "U01U24AG35W",
                "ts": "1625568300.000000"
            },
            "client_msg_id": "1ff4f4e1-48b6-4481-b3dc-e6af1a7b0531",
            "text": "<@U4H19D1D2> No problem. I'm going over some <https:\/\/betfair-datascientists.github.io\/historicData\/jsonToCsvTutorial\/#complete-code|code> provided by Betfair in Oz that uses parts of BFLW to read historical data and new code to process it and write CSV. There is a section in the new code that seems to use 'spb' and 'spl' to calculate \"calculating SP traded vol as smaller of back_stake_taken or (lay_liability_taken \/ (BSP - 1))\" which I cannot fathom.\nThis is performed using Final market. The code was written by a BF employee so I guess it must have some significance.\n\nFor info the specific code in question is...\n\n`# returning smaller of two numbers where min not 0`\n`_def_ min_gr0(_a_: float, _b_: float) -&gt; float:`\n    `if _a_ &lt;= 0:`\n        `return _b_`\n    `if _b_ &lt;= 0:`\n        `return _a_`\n\n    `return min(_a_, _b_)`\n\n`postplay_traded = [ (`\n            `r.last_price_traded,`\n            `r.ex.traded_volume,`\n            `# calculating SP traded vol as smaller of back_stake_taken or (lay_liability_taken \/ (BSP - 1))`        \n            `min_gr0(`\n                `next((pv.size for pv in r.sp.back_stake_taken if pv.size &gt; 0), 0),`\n                `next((pv.size for pv in r.sp.lay_liability_taken if pv.size &gt; 0), 0)  \/ ((r.sp.actual_sp if type(r.sp.actual_sp) is float else 0) - 1)`\n            `)`\n        `) for r in postplay_market.runners ]`",
            "team": "T4G9NBD2M",
            "thread_ts": "1625567531.319000",
            "reply_count": 4,
            "reply_users_count": 2,
            "latest_reply": "1625634639.324900",
            "reply_users": [
                "UBS7QANF3",
                "UUUAJQZ5J"
            ],
            "replies": [
                {
                    "user": "UBS7QANF3",
                    "ts": "1625632932.322300"
                },
                {
                    "user": "UUUAJQZ5J",
                    "ts": "1625634281.322900"
                },
                {
                    "user": "UBS7QANF3",
                    "ts": "1625634595.324500"
                },
                {
                    "user": "UUUAJQZ5J",
                    "ts": "1625634639.324900"
                }
            ],
            "is_locked": false,
            "subscribed": true,
            "last_read": "1625634639.324900",
            "attachments": [
                {
                    "title": "JSON to CSV in Python - The Automation Hub",
                    "title_link": "https:\/\/betfair-datascientists.github.io\/historicData\/jsonToCsvTutorial\/#complete-code",
                    "text": "Documentation, guides and articles on creating, developing and implementing automated betting strategies, using data analysis to inform betting models and how to interact with the Betfair API.",
                    "fallback": "JSON to CSV in Python - The Automation Hub",
                    "from_url": "https:\/\/betfair-datascientists.github.io\/historicData\/jsonToCsvTutorial\/#complete-code",
                    "service_icon": "https:\/\/betfair-datascientists.github.io\/img\/BetfairFavicon.ico",
                    "service_name": "betfair-datascientists.github.io",
                    "id": 1,
                    "original_url": "https:\/\/betfair-datascientists.github.io\/historicData\/jsonToCsvTutorial\/#complete-code"
                }
            ],
            "blocks": [
                {
                    "type": "rich_text",
                    "block_id": "ig\/HU",
                    "elements": [
                        {
                            "type": "rich_text_section",
                            "elements": [
                                {
                                    "type": "user",
                                    "user_id": "U4H19D1D2"
                                },
                                {
                                    "type": "text",
                                    "text": " No problem. I'm going over some "
                                },
                                {
                                    "type": "link",
                                    "url": "https:\/\/betfair-datascientists.github.io\/historicData\/jsonToCsvTutorial\/#complete-code",
                                    "text": "code"
                                },
                                {
                                    "type": "text",
                                    "text": " provided by Betfair in Oz that uses parts of BFLW to read historical data and new code to process it and write CSV. There is a section in the new code that seems to use 'spb' and 'spl' to calculate \"calculating SP traded vol as smaller of back_stake_taken or (lay_liability_taken \/ (BSP - 1))\" which I cannot fathom.\nThis is performed using Final market. The code was written by a BF employee so I guess it must have some significance.\n\nFor info the specific code in question is...\n\n"
                                },
                                {
                                    "type": "text",
                                    "text": "# returning smaller of two numbers where min not 0",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "\n"
                                },
                                {
                                    "type": "text",
                                    "text": "def",
                                    "style": {
                                        "italic": true,
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": " min_gr0(",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "a",
                                    "style": {
                                        "italic": true,
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": ": float, ",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "b",
                                    "style": {
                                        "italic": true,
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": ": float) -> float:",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "\n"
                                },
                                {
                                    "type": "text",
                                    "text": "    if ",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "a",
                                    "style": {
                                        "italic": true,
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": " <= 0:",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "\n"
                                },
                                {
                                    "type": "text",
                                    "text": "        return ",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "b",
                                    "style": {
                                        "italic": true,
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "\n"
                                },
                                {
                                    "type": "text",
                                    "text": "    if ",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "b",
                                    "style": {
                                        "italic": true,
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": " <= 0:",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "\n"
                                },
                                {
                                    "type": "text",
                                    "text": "        return ",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "a",
                                    "style": {
                                        "italic": true,
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "\n\n"
                                },
                                {
                                    "type": "text",
                                    "text": "    return min(",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "a",
                                    "style": {
                                        "italic": true,
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": ", ",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "b",
                                    "style": {
                                        "italic": true,
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": ")",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "\n\n"
                                },
                                {
                                    "type": "text",
                                    "text": "postplay_traded = [ (",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "\n"
                                },
                                {
                                    "type": "text",
                                    "text": "            r.last_price_traded,",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "\n"
                                },
                                {
                                    "type": "text",
                                    "text": "            r.ex.traded_volume,",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "\n"
                                },
                                {
                                    "type": "text",
                                    "text": "            # calculating SP traded vol as smaller of back_stake_taken or (lay_liability_taken \/ (BSP - 1))        ",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "\n"
                                },
                                {
                                    "type": "text",
                                    "text": "            min_gr0(",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "\n"
                                },
                                {
                                    "type": "text",
                                    "text": "                next((pv.size for pv in r.sp.back_stake_taken if pv.size > 0), 0),",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "\n"
                                },
                                {
                                    "type": "text",
                                    "text": "                next((pv.size for pv in r.sp.lay_liability_taken if pv.size > 0), 0)  \/ ((r.sp.actual_sp if type(r.sp.actual_sp) is float else 0) - 1)",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "\n"
                                },
                                {
                                    "type": "text",
                                    "text": "            )",
                                    "style": {
                                        "code": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": "\n"
                                },
                                {
                                    "type": "text",
                                    "text": "        ) for r in postplay_market.runners ]",
                                    "style": {
                                        "code": true
                                    }
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "type": "message",
        "ts": "1625634281.322900",
        "client_msg_id": "4bd401ea-e0dc-491a-bc67-e9289585e9dc",
        "text": "as the afore-mentioned 'BF employee' :joy: the logic here is that there can be money matched at SP against non-SP money, therefore the back and lay portions will not always marry up to the same figure. the logic here is taking the difference of the two values and then using the smaller value, as the reminder has already been accounted for the the trd array",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "q71",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "as the afore-mentioned 'BF employee' "
                            },
                            {
                                "type": "emoji",
                                "name": "joy",
                                "unicode": "1f602"
                            },
                            {
                                "type": "text",
                                "text": " the logic here is that there can be money matched at SP against non-SP money, therefore the back and lay portions will not always marry up to the same figure. the logic here is taking the difference of the two values and then using the smaller value, as the reminder has already been accounted for the the trd array"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1625634595.324500",
        "client_msg_id": "1f629f95-3b19-475f-b4fa-fc28dd90290e",
        "text": "<@UUUAJQZ5J> did you write all of the material on there? It's an impressive resource",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1625567531.319000",
        "parent_user_id": "U01U24AG35W",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "h7gqC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UUUAJQZ5J"
                            },
                            {
                                "type": "text",
                                "text": " did you write all of the material on there? It's an impressive resource"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUUAJQZ5J",
        "type": "message",
        "ts": "1625634602.324700",
        "client_msg_id": "6dd69e62-3ceb-489d-9db1-f0c4ac1f7d13",
        "text": "there's quite a lot of complexity to how BSP works - these are the resources I find valuable in helping to understand the logic:\n• Overview: <https:\/\/docs.developer.betfair.com\/pages\/viewpage.action?pageId=4392566> \n• Detailed explanation: <https:\/\/promo.betfair.com\/betfairsp\/FAQs_theBasics.html>\n• Worked examples of the reconciliation process: <https:\/\/promo.betfair.com\/betfairsp\/FAQs_detailedWorkings.html> - particularly this one \n• How the projected odds work:  <https:\/\/promo.betfair.com\/betfairsp\/FAQs_projectedOdds.html>\n• FAQs in plain English: <https:\/\/www.betfair.com.au\/hub\/betfair-starting-price-faqs\/>",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "f82cfa28f86e",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-01-10\/2929887731124_f82cfa28f86eb8c28a2f_72.jpg",
            "first_name": "Kerrin",
            "real_name": "Kerrin Grosvenor",
            "display_name": "KG",
            "team": "T4G9NBD2M",
            "name": "kerrin.grosvenor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1625634602.324700",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1634856836.013200",
        "reply_users": [
            "U0245BMB04E",
            "UUUAJQZ5J"
        ],
        "replies": [
            {
                "user": "U0245BMB04E",
                "ts": "1634569695.359400"
            },
            {
                "user": "UUUAJQZ5J",
                "ts": "1634856836.013200"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "service_name": "Betfair",
                "title": "Betfair Starting Price FAQs | Betfair Hub | BSP",
                "title_link": "https:\/\/www.betfair.com.au\/hub\/betfair-starting-price-faqs\/",
                "text": "The Betfair Starting Price is based on bets placed by both backers and layers in any market. This article outlines everything you need to know about how to get a convenient method of getting matched at great value odds on Betfair.",
                "fallback": "Betfair: Betfair Starting Price FAQs | Betfair Hub | BSP",
                "image_url": "https:\/\/www.betfair.com.au\/hub\/wp-content\/uploads\/sites\/2\/2018\/05\/AuthorLogoHub_v2-1320x660-BSP.jpg",
                "image_width": 500,
                "image_height": 250,
                "from_url": "https:\/\/www.betfair.com.au\/hub\/betfair-starting-price-faqs\/",
                "image_bytes": 59403,
                "service_icon": "https:\/\/www.betfair.com.au\/favicon.ico",
                "id": 1,
                "original_url": "https:\/\/www.betfair.com.au\/hub\/betfair-starting-price-faqs\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Vq5s",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "there's quite a lot of complexity to how BSP works - these are the resources I find valuable in helping to understand the logic:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Overview: "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/docs.developer.betfair.com\/pages\/viewpage.action?pageId=4392566"
                                    },
                                    {
                                        "type": "text",
                                        "text": " "
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Detailed explanation: "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/promo.betfair.com\/betfairsp\/FAQs_theBasics.html"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Worked examples of the reconciliation process: "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/promo.betfair.com\/betfairsp\/FAQs_detailedWorkings.html"
                                    },
                                    {
                                        "type": "text",
                                        "text": " - particularly this one "
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "How the projected odds work:  "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/promo.betfair.com\/betfairsp\/FAQs_projectedOdds.html"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "FAQs in plain English: "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/www.betfair.com.au\/hub\/betfair-starting-price-faqs\/"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "UUUAJQZ5J",
        "type": "message",
        "ts": "1625634639.324900",
        "client_msg_id": "35bdef0b-012f-48fd-ad22-a7fec4b82c27",
        "text": "on the Auto Hub? some of it, some has been put together by customers and colleagues :slightly_smiling_face:",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "f82cfa28f86e",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-01-10\/2929887731124_f82cfa28f86eb8c28a2f_72.jpg",
            "first_name": "Kerrin",
            "real_name": "Kerrin Grosvenor",
            "display_name": "KG",
            "team": "T4G9NBD2M",
            "name": "kerrin.grosvenor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1625567531.319000",
        "parent_user_id": "U01U24AG35W",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BGG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "on the Auto Hub? some of it, some has been put together by customers and colleagues "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U02BEAHKXRV"
                ],
                "count": 1
            }
        ]
    }
]