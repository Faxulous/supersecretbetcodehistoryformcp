[
    {
        "user": "U9JHLMZB4",
        "type": "message",
        "ts": "1674380769.351739",
        "edited": {
            "user": "U9JHLMZB4",
            "ts": "1674380891.000000"
        },
        "client_msg_id": "a15c5b15-5329-432f-91f0-7ef78edf75da",
        "text": "You could adjust your logic to:\n```for runner in runners:\n    if Some Condition:\n        Replace bet\n    else:\n        Cancel bet```\nAlthough under the hood Betfair's replace function also does a cancel and place new bet, it does so atomically, so if the cancel fails then the place part should too.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g951ddcb43e7",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3951ddcb43e788a387d6daf330dad5ca.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0018-72.png",
            "first_name": "",
            "real_name": "Peter Coles",
            "display_name": "Peter",
            "team": "T4G9NBD2M",
            "name": "peter",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1674354003.563629",
        "parent_user_id": "U0322P0CK0E",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "W3ioc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You could adjust your logic to:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "for runner in runners:\n    if Some Condition:\n        Replace bet\n    else:\n        Cancel bet"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Although under the hood Betfair's replace function also does a cancel and place new bet, it does so atomically, so if the cancel fails then the place part should too."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "This isn't something that Flumine handles explicitly. Rather it deals with the information received from Betfair in exactly the same way as it would when the same information is received in a normal race. So the question shifts to what information does Betfair provide for an abandoned race?\n\nThe answer is that it suspends the market. Sets all the available volumes to zero, removes all the runners and closes the market. There's no explicit \"abandoned\" status or reason given for closing the market.\n\nAny orders already placed will be cancelled at the Betfair and Flumine will receive and handle the  updates in the order stream i the normal way.\n\nThe file is an example of the WIN market from an abandoned horse race:",
        "files": [
            {
                "id": "F04KZVD445R",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U9JHLMZB4",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kHLlt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This isn't something that Flumine handles explicitly. Rather it deals with the information received from Betfair in exactly the same way as it would when the same information is received in a normal race. So the question shifts to what information does Betfair provide for an abandoned race?\n\nThe answer is that it suspends the market. Sets all the available volumes to zero, removes all the runners and closes the market. There's no explicit \"abandoned\" status or reason given for closing the market.\n\nAny orders already placed will be cancelled at the Betfair and Flumine will receive and handle the  updates in the order stream i the normal way.\n\nThe file is an example of the WIN market from an abandoned horse race:"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1674398287.652769",
        "edited": {
            "user": "U9JHLMZB4",
            "ts": "1674398916.000000"
        },
        "client_msg_id": "087ecdfd-5977-47d1-be0e-4b55c332ef03",
        "thread_ts": "1674262259.932479",
        "parent_user_id": "U01D23DDMTQ"
    },
    {
        "user": "U9JHLMZB4",
        "type": "message",
        "ts": "1674399789.323989",
        "client_msg_id": "de945b80-fce9-4007-bd14-e3e388fb400b",
        "text": "A bit puzzled as to why this is a question. What's the architecture of your setup that makes this a potential concern?\n\nI also doubt that anybody here will have an answer to this since if the keep_alive method is being used, implicitly or explicitly, to maintain active sessions it's not something we're likely to come up against. So probably one to ask Betfair.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g951ddcb43e7",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3951ddcb43e788a387d6daf330dad5ca.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0018-72.png",
            "first_name": "",
            "real_name": "Peter Coles",
            "display_name": "Peter",
            "team": "T4G9NBD2M",
            "name": "peter",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1674122637.055409",
        "parent_user_id": "UUE6E1LA1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Y4G1W",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A bit puzzled as to why this is a question. What's the architecture of your setup that makes this a potential concern?\n\nI also doubt that anybody here will have an answer to this since if the keep_alive method is being used, implicitly or explicitly, to maintain active sessions it's not something we're likely to come up against. So probably one to ask Betfair."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUE6E1LA1",
        "type": "message",
        "ts": "1674400335.520419",
        "client_msg_id": "b097202e-6897-4bba-89d1-5266d9f9afd3",
        "text": "To be plain, I currently use an asynchronous TCP\/IP socket component. As such, I use a single session token for my bet placements. I am considering moving to a blocking socket multi-threaded bet placement model. Now I might be able to share a single session token between any\/all threads that I create or I might need a login per thread (doubtful but I just don't know). I suppose I a better question would be to ask those who use thread pools for bet placement if they share all threads across a single login session.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf53cae45edd",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f53cae45edd7f7b67bbe98819597612e.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "D C",
            "display_name": "D C",
            "team": "T4G9NBD2M",
            "name": "oddsvantage",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1674122637.055409",
        "parent_user_id": "UUE6E1LA1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Gnj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "To be plain, I currently use an asynchronous TCP\/IP socket component. As such, I use a single session token for my bet placements. I am considering moving to a blocking socket multi-threaded bet placement model. Now I might be able to share a single session token between any\/all threads that I create or I might need a login per thread (doubtful but I just don't know). I suppose I a better question would be to ask those who use thread pools for bet placement if they share all threads across a single login session."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U9JHLMZB4"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UUJNW57D5",
        "type": "message",
        "ts": "1674401183.501659",
        "edited": {
            "user": "UUJNW57D5",
            "ts": "1674401226.000000"
        },
        "client_msg_id": "41509127-8d36-424b-8da0-bb027f173ea0",
        "text": "What is the time unit measure of the latency? Is it in seconds?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "813879316de9",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-02-25\/968469311540_813879316de909e9c8f5_72.png",
            "first_name": "",
            "real_name": "Adam Momen",
            "display_name": "Adam Momen",
            "team": "T4G9NBD2M",
            "name": "adammuman81",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1672400602.078959",
        "parent_user_id": "UQL0QDEKA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SL1S",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What is the time unit measure of the latency? Is it in seconds?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03N4QBJ0TV",
        "type": "message",
        "ts": "1674411591.323829",
        "edited": {
            "user": "U03N4QBJ0TV",
            "ts": "1674411615.000000"
        },
        "client_msg_id": "51e361cf-c40b-49ef-bc51-fd9792d2c7c9",
        "text": "Hello all, does anyone know if there is there anyway to asses from the Betfair API what track is being run at Lingfield? As in if its Turf or All Weather?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g2c8538b47ad",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2c8538b47ad4bed6facbb148134bb486.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "Trex44",
            "real_name": "Trex44",
            "display_name": "Trex44",
            "team": "T4G9NBD2M",
            "name": "c.s.mpharm",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1674411591.323829",
        "reply_count": 2,
        "reply_users_count": 1,
        "latest_reply": "1674411712.154469",
        "reply_users": [
            "UBS7QANF3"
        ],
        "replies": [
            {
                "user": "UBS7QANF3",
                "ts": "1674411625.603369"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1674411712.154469"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "k4TD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hello all, does anyone know if there is there anyway to asses from the Betfair API what track is being run at Lingfield? As in if its Turf or All Weather?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1674411625.603369",
        "client_msg_id": "3D4D1D1B-FB14-42AF-B5E9-4133EB478D62",
        "text": "Should be somewhere in the race card ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1674411591.323829",
        "parent_user_id": "U03N4QBJ0TV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gwO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Should be somewhere in the race card "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1674411712.154469",
        "client_msg_id": "EA032AB1-A10E-4DA9-9E0B-124EBA1B2F96",
        "text": "<https:\/\/github.com\/betcode-org\/betfair\/blob\/master\/betfairlightweight\/endpoints\/racecard.py|https:\/\/github.com\/betcode-org\/betfair\/blob\/master\/betfairlightweight\/endpoints\/racecard.py>",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1674411591.323829",
        "parent_user_id": "U03N4QBJ0TV",
        "attachments": [
            {
                "id": 1,
                "footer_icon": "https:\/\/slack.github.com\/static\/img\/favicon-neutral.png",
                "color": "24292f",
                "bot_id": "B021ZJYSBMW",
                "app_unfurl_url": "https:\/\/github.com\/betcode-org\/betfair\/blob\/master\/betfairlightweight\/endpoints\/racecard.py",
                "is_app_unfurl": true,
                "app_id": "A01BP7R4KNY",
                "fallback": "<https:\/\/github.com\/betcode-org\/betfair\/blob\/master\/betfairlightweight\/endpoints\/racecard.py | racecard.py>",
                "text": "```\nimport re\nimport time\nimport requests\nfrom typing import Union, List\n\nfrom ..exceptions import APIError, RaceCardError, InvalidResponse\nfrom ..utils import check_status_code\nfrom .baseendpoint import BaseEndpoint\nfrom .. import resources\nfrom ..compat import json\n\n\nclass RaceCard(BaseEndpoint):\n    \"\"\"\n    RaceCard operations.\n    \"\"\"\n\n    app_key = None\n\n    def login(self, session: requests.Session = None) -> None:\n        \"\"\"\n        Parses app key from betfair exchange site.\n\n        :param requests.session session: Requests session object\n        \"\"\"\n        session = session or self.client.session\n        try:\n            response = session.get(self.login_url)\n        except requests.ConnectionError as e:\n            raise APIError(None, self.login_url, None, e)\n        except Exception as e:\n            raise APIError(None, self.login_url, None, e)\n        app_key = re.findall(\n            r'''\"appKey\":\\s\"(.*?)\"''', response.content.decode(\"utf-8\")\n        )\n        if app_key:\n            self.app_key = app_key[0]\n        else:\n            raise RaceCardError(\"Unable to find appKey\")\n\n    def get_race_card(\n        self,\n        market_ids: list,\n        data_entries: str = None,\n        session: requests.Session = None,\n        lightweight: bool = False,\n    ) -> Union[list, List[resources.RaceCard]]:\n        \"\"\"\n        Returns a list of race cards based on market ids provided.\n\n        :param list market_ids: The filter to select desired markets\n        :param str data_entries: Data to be returned\n        :param requests.session session: Requests session object\n        :param bool lightweight: If True will return dict not a resource\n\n        :rtype: list[resources.RaceCard]\n        \"\"\"\n        if not self.app_key:\n            raise RaceCardError(\n                \"You need to login before requesting a race_card\\n\"\n                \"APIClient.race_card.login()\"\n            )\n        params = self.create_race_card_req(market_ids, data_entries)\n        (response, response_json, elapsed_time) = self.request(\n            \"raceCard\", params=params, session=session\n        )\n        return self.process_response(\n            response_json, resources.RaceCard, elapsed_time, lightweight\n        )\n\n    def get_race_result(\n        self,\n        market_ids: list,\n        data_entries: str = None,\n        session: requests.Session = None,\n        lightweight: bool = True,\n    ) -> list:\n        \"\"\"\n        Returns a list of race results based on event ids provided.\n\n        :param list market_ids: The filter to select desired events\n        :param str data_entries: Data to be returned\n        :param requests.session session: Requests session object\n        :param bool lightweight: If True will return dict not a resource\n\n        :rtype: list[resources.RaceResult]\n        \"\"\"\n        if not self.app_key:\n            raise RaceCardError(\n                \"You need to login before requesting a race_card\\n\"\n                \"APIClient.race_card.login()\"\n            )\n        params = self.create_race_result_req(market_ids, data_entries)\n        (response, response_json, elapsed_time) = self.request(\n            \"raceResults\", params=params, session=session\n        )\n        return self.process_response(response_json, None, elapsed_time, lightweight)\n\n    def request(\n        self, method: str = None, params: dict = None, session: requests.Session = None\n    ) -> (dict, float):\n        session = session or self.client.session\n        time_sent = time.time()\n        url = \"%s%s\" % (self.url, method)\n        try:\n            response = session.get(\n                url,\n                params=params,\n                headers=self.headers,\n                timeout=(self.connect_timeout, self.read_timeout),\n            )\n        except requests.ConnectionError as e:\n            raise APIError(None, method, params, e)\n        except Exception as e:\n            raise APIError(None, method, params, e)\n        elapsed_time = time.time() - time_sent\n\n        check_status_code(response)\n        try:\n            response_json = json.loads(response.content.decode(\"utf-8\"))\n        except ValueError:\n            raise InvalidResponse(response.text)\n\n        return response, response_json, elapsed_time\n\n    @staticmethod\n    def create_race_card_req(market_ids: list, data_entries: str) -> dict:\n        if not data_entries:\n            data_entries = \"RACE, TIMEFORM_DATA, RUNNERS, RUNNER_DETAILS\"\n        return {\"dataEntries\": data_entries, \"marketId\": \",\".join(market_ids)}\n\n    @staticmethod\n    def create_race_result_req(market_ids: list, data_entries: str) -> dict:\n        if not data_entries:\n            data_entries = \"RUNNERS, MARKETS, PRICES, RACE, COURSE\"\n        return {\n            \"dataEntries\": data_entries,\n            \"marketId\": \",\".join(market_ids),\n            \"sortBy\": \"DATE_DESC\",\n        }\n\n    @property\n    def headers(self) -> dict:\n        return {\n            \"Connection\": \"keep-alive\",\n            \"Content-Type\": \"application\/json\",\n            \"X-Application\": self.app_key,\n        }\n\n    @property\n    def login_url(self) -> str:\n        return \"<https:\/\/www.betfair.com\/exchange\/plus\/>\"\n\n    @property\n    def url(self) -> str:\n        return \"<https:\/\/www.betfair.com\/rest\/v2\/>\"\n\n```",
                "title": "<https:\/\/github.com\/betcode-org\/betfair\/blob\/master\/betfairlightweight\/endpoints\/racecard.py | racecard.py>",
                "footer": "<https:\/\/github.com\/betcode-org\/betfair|betcode-org\/betfair>",
                "mrkdwn_in": [
                    "text"
                ]
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UnQiG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/betcode-org\/betfair\/blob\/master\/betfairlightweight\/endpoints\/racecard.py",
                                "text": "https:\/\/github.com\/betcode-org\/betfair\/blob\/master\/betfairlightweight\/endpoints\/racecard.py"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U03N4QBJ0TV"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U03N4QBJ0TV",
        "type": "message",
        "ts": "1674425131.348539",
        "edited": {
            "user": "U03N4QBJ0TV",
            "ts": "1674425410.000000"
        },
        "client_msg_id": "a3136d13-7e55-4312-8aea-3f609f134153",
        "text": "Wonder if anyone can help. I was trying to pass a list of market_ids as part of the market filter to a strategy. The id's are generated by filtering the markets based on information in the race_card. At the moment I am logging in using the market filter, getting all the market_ids for races then passing the market_ids to get_race_card. Then using ifnformation from the race_card I filter the market_ids and return a list of filtered market ids  to the strategy. But I get the following error . (see attached). Both the filter and strategy work fine when executed separate to one another.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g2c8538b47ad",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2c8538b47ad4bed6facbb148134bb486.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "Trex44",
            "real_name": "Trex44",
            "display_name": "Trex44",
            "team": "T4G9NBD2M",
            "name": "c.s.mpharm",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1674425131.348539",
        "reply_count": 10,
        "reply_users_count": 2,
        "latest_reply": "1675605280.305269",
        "reply_users": [
            "U03N4QBJ0TV",
            "U9JHLMZB4"
        ],
        "replies": [
            {
                "user": "U03N4QBJ0TV",
                "ts": "1674425139.430379"
            },
            {
                "user": "U9JHLMZB4",
                "ts": "1674427638.710779"
            },
            {
                "user": "U03N4QBJ0TV",
                "ts": "1674484563.418639"
            },
            {
                "user": "U03N4QBJ0TV",
                "ts": "1674503740.333969"
            },
            {
                "user": "U9JHLMZB4",
                "ts": "1674560695.754059"
            },
            {
                "user": "U03N4QBJ0TV",
                "ts": "1674675252.533909"
            },
            {
                "user": "U03N4QBJ0TV",
                "ts": "1674677043.871419"
            },
            {
                "user": "U9JHLMZB4",
                "ts": "1674760191.082489"
            },
            {
                "user": "U03N4QBJ0TV",
                "ts": "1675598748.333789"
            },
            {
                "user": "U9JHLMZB4",
                "ts": "1675605280.305269"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oJf=K",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Wonder if anyone can help. I was trying to pass a list of market_ids as part of the market filter to a strategy. The id's are generated by filtering the markets based on information in the race_card. At the moment I am logging in using the market filter, getting all the market_ids for races then passing the market_ids to get_race_card. Then using ifnformation from the race_card I filter the market_ids and return a list of filtered market ids  to the strategy. But I get the following error . (see attached). Both the filter and strategy work fine when executed separate to one another."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03N4QBJ0TV",
        "type": "message",
        "ts": "1674425139.430379",
        "client_msg_id": "f72e2a2f-8f51-4578-90e0-908d09fda641",
        "text": "```  File \"\/home\/ubuntu\/Python_projects\/initiate_strat.py\", line 95, in &lt;module&gt;\n    target_arr = get_filter_list()\n  File \"\/home\/ubuntu\/Python_projects\/initiate_strat.py\", line 27, in get_filter_list\n    results = trading.betting.list_market_catalogue(\n  File \"\/home\/ubuntu\/.local\/lib\/python3.10\/site-packages\/betfairlightweight\/endpoints\/betting.py\", line 233, in list_market_catalogue\n    (response, response_json, elapsed_time) = self.request(method, params, session)\n  File \"\/home\/ubuntu\/.local\/lib\/python3.10\/site-packages\/betfairlightweight\/endpoints\/baseendpoint.py\", line 55, in request\n    self._error_handler(response_json, method, params)\n  File \"\/home\/ubuntu\/.local\/lib\/python3.10\/site-packages\/betfairlightweight\/endpoints\/baseendpoint.py\", line 81, in _error_handler\n    raise self._error(response, method, params)\nbetfairlightweight.exceptions.APIError: SportsAPING\/v1.0\/listMarketCatalogue \nParams: {'filter': {'eventTypeIds': [7], 'marketCountries': ['GB'], 'marketTypeCodes': ['WIN']}, 'marketProjection': ['RUNNER_DESCRIPTION', 'RUNNER_METADATA', 'COMPETITION', 'EVENT', 'EVENT_TYPE', 'MARKET_DESCRIPTION', 'MARKET_START_TIME'], 'maxResults': 100} \nException: None \nError: {'code': -32099, 'message': 'ANGX-0003', 'data': {'APINGException': {'requestUUID': 'ie2-ang05b-prd-01191051-000775c81b', 'errorCode': 'INVALID_SESSION_INFORMATION', 'errorDetails': ''}, 'exceptionname': 'APINGException'}} \nFull Response: {'jsonrpc': '2.0', 'error': {'code': -32099, 'message': 'ANGX-0003', 'data': {'APINGException': {'requestUUID': 'ie2-ang05b-prd-01191051-000775c81b', 'errorCode': 'INVALID_SESSION_INFORMATION', 'errorDetails': ''}, 'exceptionname': 'APINGException'}}, 'id': 1}```",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g2c8538b47ad",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2c8538b47ad4bed6facbb148134bb486.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "Trex44",
            "real_name": "Trex44",
            "display_name": "Trex44",
            "team": "T4G9NBD2M",
            "name": "c.s.mpharm",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1674425131.348539",
        "parent_user_id": "U03N4QBJ0TV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7k+",
                "elements": [
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "  File \"\/home\/ubuntu\/Python_projects\/initiate_strat.py\", line 95, in <module>\n    target_arr = get_filter_list()\n  File \"\/home\/ubuntu\/Python_projects\/initiate_strat.py\", line 27, in get_filter_list\n    results = trading.betting.list_market_catalogue(\n  File \"\/home\/ubuntu\/.local\/lib\/python3.10\/site-packages\/betfairlightweight\/endpoints\/betting.py\", line 233, in list_market_catalogue\n    (response, response_json, elapsed_time) = self.request(method, params, session)\n  File \"\/home\/ubuntu\/.local\/lib\/python3.10\/site-packages\/betfairlightweight\/endpoints\/baseendpoint.py\", line 55, in request\n    self._error_handler(response_json, method, params)\n  File \"\/home\/ubuntu\/.local\/lib\/python3.10\/site-packages\/betfairlightweight\/endpoints\/baseendpoint.py\", line 81, in _error_handler\n    raise self._error(response, method, params)\nbetfairlightweight.exceptions.APIError: SportsAPING\/v1.0\/listMarketCatalogue \nParams: {'filter': {'eventTypeIds': [7], 'marketCountries': ['GB'], 'marketTypeCodes': ['WIN']}, 'marketProjection': ['RUNNER_DESCRIPTION', 'RUNNER_METADATA', 'COMPETITION', 'EVENT', 'EVENT_TYPE', 'MARKET_DESCRIPTION', 'MARKET_START_TIME'], 'maxResults': 100} \nException: None \nError: {'code': -32099, 'message': 'ANGX-0003', 'data': {'APINGException': {'requestUUID': 'ie2-ang05b-prd-01191051-000775c81b', 'errorCode': 'INVALID_SESSION_INFORMATION', 'errorDetails': ''}, 'exceptionname': 'APINGException'}} \nFull Response: {'jsonrpc': '2.0', 'error': {'code': -32099, 'message': 'ANGX-0003', 'data': {'APINGException': {'requestUUID': 'ie2-ang05b-prd-01191051-000775c81b', 'errorCode': 'INVALID_SESSION_INFORMATION', 'errorDetails': ''}, 'exceptionname': 'APINGException'}}, 'id': 1}"
                            }
                        ],
                        "border": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "U9JHLMZB4",
        "type": "message",
        "ts": "1674427638.710779",
        "client_msg_id": "5499a067-2f6e-49ff-8fdb-428cb70fd02b",
        "text": "The error message you're getting from Betfair is for an invalid session, so nothing to do with your filter or strategy. This feels more like an issue with how you're initiating your script.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g951ddcb43e7",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3951ddcb43e788a387d6daf330dad5ca.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0018-72.png",
            "first_name": "",
            "real_name": "Peter Coles",
            "display_name": "Peter",
            "team": "T4G9NBD2M",
            "name": "peter",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1674425131.348539",
        "parent_user_id": "U03N4QBJ0TV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "He0k",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The error message you're getting from Betfair is for an invalid session, so nothing to do with your filter or strategy. This feels more like an issue with how you're initiating your script."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]