[
    {
        "user": "U01TXCYTCSF",
        "type": "message",
        "ts": "1622281726.190800",
        "client_msg_id": "8a364abd-d5d4-4314-b9b5-7c8f080baf71",
        "text": "Hi I was trying to setup my own log files (by doing logging.basicConfig(file_name) ) so to understand a bit deeper into the flumine. It turns out flumine still outputs the logs to the screen only. Guess I am missing something in flumine. Please could someone give me a pointer\/example how I can output the logs to a file (ideally in the same time printing the logs on the screen\/console too)? Many thanks.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "ga1c53b736aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a1c53b736aa11811fefe2ef48febb67b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "John",
            "real_name": "John Smith",
            "display_name": "John",
            "team": "T4G9NBD2M",
            "name": "huanhuangcn",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1622281726.190800",
        "reply_count": 4,
        "reply_users_count": 2,
        "latest_reply": "1622390982.194200",
        "reply_users": [
            "U4H19D1D2",
            "U01TXCYTCSF"
        ],
        "replies": [
            {
                "user": "U4H19D1D2",
                "ts": "1622314572.191200"
            },
            {
                "user": "U01TXCYTCSF",
                "ts": "1622327005.192500"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1622362212.192700"
            },
            {
                "user": "U01TXCYTCSF",
                "ts": "1622390982.194200"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1622390982.194200",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FHfJA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi I was trying to setup my own log files (by doing logging.basicConfig(file_name) ) so to understand a bit deeper into the flumine. It turns out flumine still outputs the logs to the screen only. Guess I am missing something in flumine. Please could someone give me a pointer\/example how I can output the logs to a file (ideally in the same time printing the logs on the screen\/console too)? Many thanks."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01PJ5YMFBJ",
        "type": "message",
        "ts": "1622314452.190900",
        "client_msg_id": "5b6cbe84-1f38-444f-b35a-765db3b6bc17",
        "text": "If i am paper_trade'ing a strategy, is there a way to check simulated order results like after a backtest run?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g819c7f591cc",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/819c7f591cc888486f19b3f2f49f2011.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0014-72.png",
            "first_name": "AndyL",
            "real_name": "AndyL",
            "display_name": "AndyL",
            "team": "T4G9NBD2M",
            "name": "andrew_m_leonard",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "thUa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If i am paper_trade'ing a strategy, is there a way to check simulated order results like after a backtest run?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1622314549.191000",
        "client_msg_id": "7F485065-9DAC-4F33-B77A-4821518CACF4",
        "text": "Use logging control, you are then setup for live ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EcS3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Use logging control, you are then setup for live "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01PJ5YMFBJ",
        "type": "message",
        "ts": "1622314550.191100",
        "client_msg_id": "3b1bddf2-0d76-42e0-9f8a-1ad3cb7f130e",
        "text": "Or just put some code in process_closed_market to do the same?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g819c7f591cc",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/819c7f591cc888486f19b3f2f49f2011.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0014-72.png",
            "first_name": "AndyL",
            "real_name": "AndyL",
            "display_name": "AndyL",
            "team": "T4G9NBD2M",
            "name": "andrew_m_leonard",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iHGx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Or just put some code in process_closed_market to do the same?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1622314572.191200",
        "client_msg_id": "7F42DC08-9D2D-408F-BDE2-64C0A41EF983",
        "text": "Code?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1622281726.190800",
        "parent_user_id": "U01TXCYTCSF",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IIx66",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Code?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01PJ5YMFBJ",
        "type": "message",
        "ts": "1622314573.191400",
        "client_msg_id": "2873c60d-9b54-468e-94db-94ee17289a50",
        "text": "Logging control?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g819c7f591cc",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/819c7f591cc888486f19b3f2f49f2011.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0014-72.png",
            "first_name": "AndyL",
            "real_name": "AndyL",
            "display_name": "AndyL",
            "team": "T4G9NBD2M",
            "name": "andrew_m_leonard",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "V9u=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Logging control?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1622314636.191500",
        "client_msg_id": "DBF4E3EC-7EDA-473E-AF17-73FFE39451EA",
        "text": "<https:\/\/liampauling.github.io\/flumine\/controls\/|https:\/\/liampauling.github.io\/flumine\/controls\/>",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "title": "Controls - flumine",
                "title_link": "https:\/\/liampauling.github.io\/flumine\/controls\/",
                "text": "Trading framework for Betfair API-NG.",
                "fallback": "Controls - flumine",
                "from_url": "https:\/\/liampauling.github.io\/flumine\/controls\/",
                "service_icon": "https:\/\/liampauling.github.io\/flumine\/assets\/images\/favicon.png",
                "service_name": "liampauling.github.io",
                "id": 1,
                "original_url": "https:\/\/liampauling.github.io\/flumine\/controls\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=nX7t",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/liampauling.github.io\/flumine\/controls\/",
                                "text": "https:\/\/liampauling.github.io\/flumine\/controls\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01PJ5YMFBJ",
        "type": "message",
        "ts": "1622314637.191600",
        "client_msg_id": "b8d19629-4e8e-4b99-9251-fc251d455620",
        "text": "Just there's a lot of log output...?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g819c7f591cc",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/819c7f591cc888486f19b3f2f49f2011.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0014-72.png",
            "first_name": "AndyL",
            "real_name": "AndyL",
            "display_name": "AndyL",
            "team": "T4G9NBD2M",
            "name": "andrew_m_leonard",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "16=1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Just there's a lot of log output...?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1622314675.191900",
        "client_msg_id": "054501B2-987C-442E-9020-E0BE8CE8209E",
        "text": "And a simple example <https:\/\/github.com\/liampauling\/flumine\/blob\/master\/examples\/controls\/backtestloggingcontrol.py|https:\/\/github.com\/liampauling\/flumine\/blob\/master\/examples\/controls\/backtestloggingcontrol.py>",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1622314675.191900",
        "reply_count": 4,
        "reply_users_count": 2,
        "latest_reply": "1622380938.193900",
        "reply_users": [
            "U01PJ5YMFBJ",
            "U4H19D1D2"
        ],
        "replies": [
            {
                "user": "U01PJ5YMFBJ",
                "ts": "1622314731.192100"
            },
            {
                "user": "U01PJ5YMFBJ",
                "ts": "1622316627.192300"
            },
            {
                "user": "U01PJ5YMFBJ",
                "ts": "1622380452.193100"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1622380938.193900"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1622380938.193900",
        "attachments": [
            {
                "text": "```\nimport csv\nimport logging\nfrom flumine.controls.loggingcontrols import LoggingControl\n\nlogger = logging.getLogger(__name__)\n\nFIELDNAMES = [\n    \"bet_id\",\n    \"strategy_name\",\n    \"market_id\",\n    \"selection_id\",\n    \"trade_id\",\n    \"date_time_placed\",\n    \"price\",\n    \"price_matched\",\n    \"size\",\n    \"size_matched\",\n    \"profit\",\n    \"side\",\n    \"elapsed_seconds_executable\",\n    \"order_status\",\n    \"market_note\",\n    \"notes\",\n]\n\n\nclass BacktestLoggingControl(LoggingControl):\n    NAME = \"BACKTEST_LOGGING_CONTROL\"\n\n    def __init__(self, *args, **kwargs):\n        super(BacktestLoggingControl, self).__init__(*args, **kwargs)\n        self._setup()\n\n    def _setup(self):\n        with open(\"orders.txt\", \"w\") as m:\n            csv_writer = csv.DictWriter(m, delimiter=\",\", fieldnames=FIELDNAMES)\n            csv_writer.writeheader()\n\n    def _process_cleared_orders_meta(self, event):\n        orders = event.event\n        with open(\"orders.txt\", \"a\") as m:\n            for order in orders:\n                try:\n                    order_data = {\n                        \"bet_id\": order.bet_id,\n                        \"strategy_name\": order.trade.strategy,\n                        \"market_id\": order.market_id,\n                        \"selection_id\": order.selection_id,\n                        \"trade_id\": order.trade.id,\n                        \"date_time_placed\": order.responses.date_time_placed,\n                        \"price\": order.order_type.price,\n                        \"price_matched\": order.average_price_matched,\n                        \"size\": order.order_type.size,\n                        \"size_matched\": order.size_matched,\n                        \"profit\": order.simulated.profit,\n                        \"side\": order.side,\n                        \"elapsed_seconds_executable\": order.elapsed_seconds_executable,\n                        \"order_status\": order.status.value,\n                        \"market_note\": order.trade.market_notes,\n                        \"notes\": order.trade.notes_str,\n                    }\n                    csv_writer = csv.DictWriter(m, delimiter=\",\", fieldnames=FIELDNAMES)\n                    csv_writer.writerow(order_data)\n                except Exception as e:\n                    logger.error(\n                        \"_process_cleared_orders_meta: %s\" % e,\n                        extra={\"order\": order, \"error\": e},\n                    )\n\n        <http:\/\/logger.info|logger.info>(\"Orders updated\", extra={\"order_count\": len(orders)})\n\n```",
                "title": "<https:\/\/github.com\/liampauling\/flumine\/blob\/master\/examples\/controls\/backtestloggingcontrol.py | backtestloggingcontrol.py>",
                "footer": "<https:\/\/github.com\/liampauling\/flumine|liampauling\/flumine>",
                "id": 1,
                "footer_icon": "https:\/\/slack.github.com\/static\/img\/favicon-neutral.png",
                "color": "24292f",
                "mrkdwn_in": [
                    "text"
                ],
                "fallback": "<https:\/\/github.com\/liampauling\/flumine\/blob\/master\/examples\/controls\/backtestloggingcontrol.py | backtestloggingcontrol.py>",
                "bot_id": "B021ZJYSBMW",
                "app_unfurl_url": "https:\/\/github.com\/liampauling\/flumine\/blob\/master\/examples\/controls\/backtestloggingcontrol.py",
                "is_app_unfurl": true
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gcj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And a simple example "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/liampauling\/flumine\/blob\/master\/examples\/controls\/backtestloggingcontrol.py",
                                "text": "https:\/\/github.com\/liampauling\/flumine\/blob\/master\/examples\/controls\/backtestloggingcontrol.py"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01PJ5YMFBJ",
        "type": "message",
        "ts": "1622314731.192100",
        "client_msg_id": "c7f36f5b-79d6-4a11-91ac-f049b5556a7c",
        "text": "Ah great thanks Liam",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g819c7f591cc",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/819c7f591cc888486f19b3f2f49f2011.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0014-72.png",
            "first_name": "AndyL",
            "real_name": "AndyL",
            "display_name": "AndyL",
            "team": "T4G9NBD2M",
            "name": "andrew_m_leonard",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1622314675.191900",
        "parent_user_id": "U4H19D1D2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ml9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah great thanks Liam"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01PJ5YMFBJ",
        "type": "message",
        "ts": "1622316627.192300",
        "client_msg_id": "3c5a6889-4377-4b2e-952f-688f82171b12",
        "text": "Works a treat thanks",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g819c7f591cc",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/819c7f591cc888486f19b3f2f49f2011.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0014-72.png",
            "first_name": "AndyL",
            "real_name": "AndyL",
            "display_name": "AndyL",
            "team": "T4G9NBD2M",
            "name": "andrew_m_leonard",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1622314675.191900",
        "parent_user_id": "U4H19D1D2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PXo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Works a treat thanks"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01TXCYTCSF",
        "type": "message",
        "ts": "1622327005.192500",
        "client_msg_id": "7f7cd170-0b83-4f67-97ba-8d851e2586da",
        "text": "Thanks <@U4H19D1D2>. Here is the init function of my strategy class\n\n```class strategy_test(BaseStrategy):\n\n\n    def __init__(self, *args, **kwargs):\n       BaseStrategy.__init__(self, *args, **kwargs)\n\n       # date time\n       now = datetime.now()\n       dt_string = now.strftime(\"%Y%m%d\")\n\n       # setup logging\n       path_file_log = os.path.abspath(os.path.join(cwd, \"..\/log\/\", strategy_id + f\"_{dt_string}\" + \".log\"))\n       logging.basicConfig(format='%(asctime)s %(message)s', datefmt='%Y-%m-%d %I:%M:%S | ', level=logging.DEBUG,\n                           filename=path_file_log)\n       <http:\/\/logging.info|logging.info>(\"Log file: \" + path_file_log)```\nAny pointer to output a log file to a local drive will be appreciated.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "ga1c53b736aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a1c53b736aa11811fefe2ef48febb67b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "John",
            "real_name": "John Smith",
            "display_name": "John",
            "team": "T4G9NBD2M",
            "name": "huanhuangcn",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1622281726.190800",
        "parent_user_id": "U01TXCYTCSF",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SFj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks "
                            },
                            {
                                "type": "user",
                                "user_id": "U4H19D1D2"
                            },
                            {
                                "type": "text",
                                "text": ". Here is the init function of my strategy class\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "class strategy_test(BaseStrategy):\n\n\n    def __init__(self, *args, **kwargs):\n       BaseStrategy.__init__(self, *args, **kwargs)\n\n       # date time\n       now = datetime.now()\n       dt_string = now.strftime(\"%Y%m%d\")\n\n       # setup logging\n       path_file_log = os.path.abspath(os.path.join(cwd, \"..\/log\/\", strategy_id + f\"_{dt_string}\" + \".log\"))\n       logging.basicConfig(format='%(asctime)s %(message)s', datefmt='%Y-%m-%d %I:%M:%S | ', level=logging.DEBUG,\n                           filename=path_file_log)\n       logging.info(\"Log file: \" + path_file_log)"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nAny pointer to output a log file to a local drive will be appreciated."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]