[
    {
        "user": "UNQGKT0CR",
        "type": "message",
        "ts": "1578754428.002700",
        "client_msg_id": "86CC0918-CC81-49C4-B9D4-D75DEF9E0DAF",
        "text": "Has anyone attempted to process the historical data in parallel?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g51b5871ab46",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/51b5871ab46e5ef289d9e90376cacaab.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "AP",
            "real_name": "AP",
            "display_name": "AP",
            "team": "T4G9NBD2M",
            "name": "ant.papa22",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XD\/G",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Has anyone attempted to process the historical data in parallel?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U92CASP1B",
        "type": "message",
        "ts": "1578756985.004300",
        "client_msg_id": "26c4691e-b758-4d43-b38a-92ccf0c05c2c",
        "text": "Nah thought about it but it was a one off thing for lots of data? Are you processing lots of data?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g374352c822f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a374352c822fa856c4cfdd782bbb8669.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0007-72.png",
            "first_name": "Jonatan",
            "real_name": "Jonatan",
            "display_name": "Jonatan (skyw)",
            "team": "T4G9NBD2M",
            "name": "almen.jonatan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZwBx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Nah thought about it but it was a one off thing for lots of data? Are you processing lots of data?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNQGKT0CR",
        "type": "message",
        "ts": "1578757147.005200",
        "client_msg_id": "2530B81B-343E-476E-BF8C-295D035C6CF2",
        "text": "Yeah it’s quite a big one. Trying to process 2019 data for AU horse racing win markets at the PRO level ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g51b5871ab46",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/51b5871ab46e5ef289d9e90376cacaab.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "AP",
            "real_name": "AP",
            "display_name": "AP",
            "team": "T4G9NBD2M",
            "name": "ant.papa22",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QgKR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah it’s quite a big one. Trying to process 2019 data for AU horse racing win markets at the PRO level "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U92CASP1B",
        "type": "message",
        "ts": "1578757331.007300",
        "client_msg_id": "7e9bcd92-4db0-4778-a324-d4fb0d49d1e1",
        "text": "Ah, I have not timed it myself but one bottleneck in the example might be the constant opening of the file for every update. It should be easy to be done in parallel, just list the markets and split them up among Processes not threads.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g374352c822f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a374352c822fa856c4cfdd782bbb8669.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0007-72.png",
            "first_name": "Jonatan",
            "real_name": "Jonatan",
            "display_name": "Jonatan (skyw)",
            "team": "T4G9NBD2M",
            "name": "almen.jonatan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7ukC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah, I have not timed it myself but one bottleneck in the example might be the constant opening of the file for every update. It should be easy to be done in parallel, just list the markets and split them up among Processes not threads."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNQGKT0CR",
        "type": "message",
        "ts": "1578757437.008500",
        "client_msg_id": "E77BF6A4-D236-448F-B75D-3F24CABD8613",
        "text": "Yep I have all the file paths so can split them up and multiprocess, might also write to DB instead of opening the txt file as you suggested ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g51b5871ab46",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/51b5871ab46e5ef289d9e90376cacaab.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "AP",
            "real_name": "AP",
            "display_name": "AP",
            "team": "T4G9NBD2M",
            "name": "ant.papa22",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "g2r",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yep I have all the file paths so can split them up and multiprocess, might also write to DB instead of opening the txt file as you suggested "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U92CASP1B",
        "type": "message",
        "ts": "1578757680.010500",
        "client_msg_id": "670e4c88-11f7-42a2-88a0-9045a89e64c8",
        "text": "I \"solved\" it by opening it in the _init_ method and never closing it...I think it should be taken care of automatically.\nIn my head it went a little faster. Would be nice if you could report the speedups : )",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g374352c822f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a374352c822fa856c4cfdd782bbb8669.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0007-72.png",
            "first_name": "Jonatan",
            "real_name": "Jonatan",
            "display_name": "Jonatan (skyw)",
            "team": "T4G9NBD2M",
            "name": "almen.jonatan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fXGJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I \"solved\" it by opening it in the "
                            },
                            {
                                "type": "text",
                                "text": "init",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " method and never closing it...I think it should be taken care of automatically.\nIn my head it went a little faster. Would be nice if you could report the speedups : )"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U92CASP1B",
        "type": "message",
        "ts": "1578757686.010800",
        "client_msg_id": "a39f0685-2e5a-4752-83c5-2385623e3d8e",
        "text": "Good luck!",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g374352c822f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a374352c822fa856c4cfdd782bbb8669.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0007-72.png",
            "first_name": "Jonatan",
            "real_name": "Jonatan",
            "display_name": "Jonatan (skyw)",
            "team": "T4G9NBD2M",
            "name": "almen.jonatan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UOT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Good luck!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNQGKT0CR",
        "type": "message",
        "ts": "1578757739.011100",
        "client_msg_id": "21EDD697-1B57-474F-A47C-1951365F9368",
        "text": "Cheers ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g51b5871ab46",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/51b5871ab46e5ef289d9e90376cacaab.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "AP",
            "real_name": "AP",
            "display_name": "AP",
            "team": "T4G9NBD2M",
            "name": "ant.papa22",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zh2O",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Cheers "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNQGKT0CR",
        "type": "message",
        "ts": "1578761182.011900",
        "client_msg_id": "640DE005-F7B1-4B3F-8AA8-589C9ADD08FB",
        "text": "I think writing to files\/DBs becomes problematic with parallel processing ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g51b5871ab46",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/51b5871ab46e5ef289d9e90376cacaab.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "AP",
            "real_name": "AP",
            "display_name": "AP",
            "team": "T4G9NBD2M",
            "name": "ant.papa22",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "33A6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think writing to files\/DBs becomes problematic with parallel processing "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U92CASP1B",
        "type": "message",
        "ts": "1578761262.012100",
        "client_msg_id": "09140aef-6cc9-4b5c-b635-17e14a67a59f",
        "text": "How come?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g374352c822f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a374352c822fa856c4cfdd782bbb8669.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0007-72.png",
            "first_name": "Jonatan",
            "real_name": "Jonatan",
            "display_name": "Jonatan (skyw)",
            "team": "T4G9NBD2M",
            "name": "almen.jonatan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "45=QW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "How come?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNQGKT0CR",
        "type": "message",
        "ts": "1578761339.012400",
        "client_msg_id": "8379B5DA-F4B6-4E35-87FE-7B73D4752B99",
        "text": "I\/O errors ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g51b5871ab46",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/51b5871ab46e5ef289d9e90376cacaab.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "AP",
            "real_name": "AP",
            "display_name": "AP",
            "team": "T4G9NBD2M",
            "name": "ant.papa22",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "26vR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I\/O errors "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNQGKT0CR",
        "type": "message",
        "ts": "1578761362.013000",
        "client_msg_id": "56F11AD1-107B-45C2-9EFA-C20A16CF745F",
        "text": "However, keeping the file open from the start does result in a 4x speed increase ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g51b5871ab46",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/51b5871ab46e5ef289d9e90376cacaab.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "AP",
            "real_name": "AP",
            "display_name": "AP",
            "team": "T4G9NBD2M",
            "name": "ant.papa22",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BYT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "However, keeping the file open from the start does result in a 4x speed increase "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U92CASP1B",
        "type": "message",
        "ts": "1578761681.013700",
        "client_msg_id": "6252dab1-ea44-41cf-9d8b-38ad6988f8e9",
        "text": "nice, are you getting them or assuming, I can not see how it would generate IO errors?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g374352c822f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a374352c822fa856c4cfdd782bbb8669.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0007-72.png",
            "first_name": "Jonatan",
            "real_name": "Jonatan",
            "display_name": "Jonatan (skyw)",
            "team": "T4G9NBD2M",
            "name": "almen.jonatan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8TKAL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "nice, are you getting them or assuming, I can not see how it would generate IO errors?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNQGKT0CR",
        "type": "message",
        "ts": "1578761780.014300",
        "client_msg_id": "37427EDC-667F-40ED-B0F0-45DA53865B38",
        "text": "Could be because I’m writing to one file, and multiple workers are trying to access same file?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g51b5871ab46",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/51b5871ab46e5ef289d9e90376cacaab.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "AP",
            "real_name": "AP",
            "display_name": "AP",
            "team": "T4G9NBD2M",
            "name": "ant.papa22",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "q1A",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Could be because I’m writing to one file, and multiple workers are trying to access same file?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U92CASP1B",
        "type": "message",
        "ts": "1578761852.015100",
        "client_msg_id": "7cbaf151-2f3b-4a2b-bbe0-f3878f0b3b66",
        "text": "Ah, yeah, then the DB apporach would be better, I assumed you wrote to different files.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g374352c822f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a374352c822fa856c4cfdd782bbb8669.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0007-72.png",
            "first_name": "Jonatan",
            "real_name": "Jonatan",
            "display_name": "Jonatan (skyw)",
            "team": "T4G9NBD2M",
            "name": "almen.jonatan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "a=\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah, yeah, then the DB apporach would be better, I assumed you wrote to different files."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNQGKT0CR",
        "type": "message",
        "ts": "1578761910.015300",
        "client_msg_id": "f8f8b381-d0a5-4f04-abf9-a86ca70c120c",
        "text": "```def process_betfair_historical_file(file_path):\n    print(\"Processing: \" + file_path)\n    \n    class HistoricalStream(MarketStream):\n    # create custom listener and stream\n\n        def __init__(self, listener):\n            super(HistoricalStream, self).__init__(listener)\n            self.file_path = file_path.split(\"\/\")[-1]\n            self.output = open(self.file_path + '.txt', 'w')\n            self.output.write('Time,MarketStartTime,MarketType,MarketId,Status,Inplay,SelectionId,VWAP,BestLayPrice,LastPriceTraded,\\n')\n\n        def on_process(self, market_books):\n            for market_book in market_books:\n                for runner in market_book.runners:\n\n                    # how to get runner details from the market definition\n                    market_def = market_book.market_definition\n                    runners_dict = {(runner.selection_id, runner.handicap): runner for runner in market_def.runners}\n                    runner_def = runners_dict.get(\n                        (runner.selection_id, runner.handicap)\n                    )\n\n                    # calculate lay wap\n                    price = 0\n                    vol = 0\n                    for trade in runner.ex.traded_volume:\n                        price += (trade.price * trade.size)\n                        vol += trade.size\n                    try:    \n                        wap = price \/ vol\n                    except:\n                        wap = np.nan\n\n                    # get best lay price\n                    try:\n                        best_lay = runner.ex.available_to_lay[0].price\n                    except:\n                        best_lay = np.nan\n\n                    self.output.write('%s,%s,%s,%s,%s,%s,%s,%s,%s,%s\\n' % (\n                        market_book.publish_time, market_def.market_time, market_def.market_type, market_book.market_id, market_book.status, market_book.inplay,\n                        runner.selection_id, wap or '', best_lay or '', runner.last_price_traded or ''\n                    ))\n\n    class HistoricalListener(StreamListener):\n        def _add_stream(self, unique_id, stream_type):\n            if stream_type == 'marketSubscription':\n                return HistoricalStream(self)\n\n    # create listener\n    listener = HistoricalListener(\n        max_latency=1e100\n    )\n\n    # create historical stream, update directory to file location\n    stream = trading.streaming.create_historical_stream(\n        directory=file_path,\n        listener=listener\n    )\n\n    # start stream\n    stream.start(async_=False)\n    \n    return \"Processed\" + file_path```",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g51b5871ab46",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/51b5871ab46e5ef289d9e90376cacaab.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "AP",
            "real_name": "AP",
            "display_name": "AP",
            "team": "T4G9NBD2M",
            "name": "ant.papa22",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qkd",
                "elements": [
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "def process_betfair_historical_file(file_path):\n    print(\"Processing: \" + file_path)\n    \n    class HistoricalStream(MarketStream):\n    # create custom listener and stream\n\n        def __init__(self, listener):\n            super(HistoricalStream, self).__init__(listener)\n            self.file_path = file_path.split(\"\/\")[-1]\n            self.output = open(self.file_path + '.txt', 'w')\n            self.output.write('Time,MarketStartTime,MarketType,MarketId,Status,Inplay,SelectionId,VWAP,BestLayPrice,LastPriceTraded,\\n')\n\n        def on_process(self, market_books):\n            for market_book in market_books:\n                for runner in market_book.runners:\n\n                    # how to get runner details from the market definition\n                    market_def = market_book.market_definition\n                    runners_dict = {(runner.selection_id, runner.handicap): runner for runner in market_def.runners}\n                    runner_def = runners_dict.get(\n                        (runner.selection_id, runner.handicap)\n                    )\n\n                    # calculate lay wap\n                    price = 0\n                    vol = 0\n                    for trade in runner.ex.traded_volume:\n                        price += (trade.price * trade.size)\n                        vol += trade.size\n                    try:    \n                        wap = price \/ vol\n                    except:\n                        wap = np.nan\n\n                    # get best lay price\n                    try:\n                        best_lay = runner.ex.available_to_lay[0].price\n                    except:\n                        best_lay = np.nan\n\n                    self.output.write('%s,%s,%s,%s,%s,%s,%s,%s,%s,%s\\n' % (\n                        market_book.publish_time, market_def.market_time, market_def.market_type, market_book.market_id, market_book.status, market_book.inplay,\n                        runner.selection_id, wap or '', best_lay or '', runner.last_price_traded or ''\n                    ))\n\n    class HistoricalListener(StreamListener):\n        def _add_stream(self, unique_id, stream_type):\n            if stream_type == 'marketSubscription':\n                return HistoricalStream(self)\n\n    # create listener\n    listener = HistoricalListener(\n        max_latency=1e100\n    )\n\n    # create historical stream, update directory to file location\n    stream = trading.streaming.create_historical_stream(\n        directory=file_path,\n        listener=listener\n    )\n\n    # start stream\n    stream.start(async_=False)\n    \n    return \"Processed\" + file_path"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNQGKT0CR",
        "type": "message",
        "ts": "1578761926.015500",
        "client_msg_id": "8bd2fa26-844e-4f54-9533-12a79bb41a0b",
        "text": "```results = pool.map(process_betfair_historical_file, [file_path for file_path in file_paths])```",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g51b5871ab46",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/51b5871ab46e5ef289d9e90376cacaab.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "AP",
            "real_name": "AP",
            "display_name": "AP",
            "team": "T4G9NBD2M",
            "name": "ant.papa22",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DCzs3",
                "elements": [
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "results = pool.map(process_betfair_historical_file, [file_path for file_path in file_paths])"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNQGKT0CR",
        "type": "message",
        "ts": "1578761939.015900",
        "client_msg_id": "1e0f8974-2088-4536-bfce-490b855ae4ab",
        "text": "Although even when I write to different files as above, the code seems to do nothing at all",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g51b5871ab46",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/51b5871ab46e5ef289d9e90376cacaab.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "AP",
            "real_name": "AP",
            "display_name": "AP",
            "team": "T4G9NBD2M",
            "name": "ant.papa22",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Wam",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Although even when I write to different files as above, the code seems to do nothing at all"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U92CASP1B",
        "type": "message",
        "ts": "1578762079.016900",
        "client_msg_id": "47fd7673-96a2-4fae-9049-bead3db861a5",
        "text": "I do not remember the multiprocessing API, try with a simple lambda method and a simple list of number to see that it is at least running ..",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g374352c822f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a374352c822fa856c4cfdd782bbb8669.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0007-72.png",
            "first_name": "Jonatan",
            "real_name": "Jonatan",
            "display_name": "Jonatan (skyw)",
            "team": "T4G9NBD2M",
            "name": "almen.jonatan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "v\/9C",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I do not remember the multiprocessing API, try with a simple lambda method and a simple list of number to see that it is at least running .."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNQGKT0CR",
        "type": "message",
        "ts": "1578762332.017400",
        "client_msg_id": "4b222683-3474-4d82-803a-823d41761a58",
        "text": "Looks like something wrong at my end as not even the example multiprocessing code works for me",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g51b5871ab46",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/51b5871ab46e5ef289d9e90376cacaab.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "AP",
            "real_name": "AP",
            "display_name": "AP",
            "team": "T4G9NBD2M",
            "name": "ant.papa22",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7NM9y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Looks like something wrong at my end as not even the example multiprocessing code works for me"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNQGKT0CR",
        "type": "message",
        "ts": "1578762834.017600",
        "client_msg_id": "413149c0-c3d9-4084-b5ce-f337710d30ad",
        "text": "```---------------------------------------------------------------------------\nRemoteTraceback                           Traceback (most recent call last)\nRemoteTraceback: \n\"\"\"\nTraceback (most recent call last):\n  File \"C:\\Users\\antpa\\Anaconda3\\envs\\myenv\\lib\\site-packages\\multiprocess\\pool.py\", line 119, in worker\n    result = (True, func(*args, **kwds))\n  File \"C:\\Users\\antpa\\Anaconda3\\envs\\myenv\\lib\\site-packages\\multiprocess\\pool.py\", line 44, in mapstar\n    return list(map(*args))\n  File \"&lt;ipython-input-11-dbf9aa1bac51&gt;\", line 4, in process_betfair_historical_file\nNameError: name 'MarketStream' is not defined\n\"\"\"\n\nThe above exception was the direct cause of the following exception:\n\nNameError                                 Traceback (most recent call last)\n&lt;ipython-input-19-0f3124f0dfdc&gt; in &lt;module&gt;\n----&gt; 1 results = pool.map(process_betfair_historical_file, [file_path for file_path in file_paths])\n\n~\\Anaconda3\\envs\\myenv\\lib\\site-packages\\multiprocess\\pool.py in map(self, func, iterable, chunksize)\n    264         in a list that is returned.\n    265         '''\n--&gt; 266         return self._map_async(func, iterable, mapstar, chunksize).get()\n    267 \n    268     def starmap(self, func, iterable, chunksize=None):\n\n~\\Anaconda3\\envs\\myenv\\lib\\site-packages\\multiprocess\\pool.py in get(self, timeout)\n    642             return self._value\n    643         else:\n--&gt; 644             raise self._value\n    645 \n    646     def _set(self, i, obj):\n\nNameError: name 'MarketStream' is not defined```",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g51b5871ab46",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/51b5871ab46e5ef289d9e90376cacaab.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "AP",
            "real_name": "AP",
            "display_name": "AP",
            "team": "T4G9NBD2M",
            "name": "ant.papa22",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eh=pd",
                "elements": [
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "---------------------------------------------------------------------------\nRemoteTraceback                           Traceback (most recent call last)\nRemoteTraceback: \n\"\"\"\nTraceback (most recent call last):\n  File \"C:\\Users\\antpa\\Anaconda3\\envs\\myenv\\lib\\site-packages\\multiprocess\\pool.py\", line 119, in worker\n    result = (True, func(*args, **kwds))\n  File \"C:\\Users\\antpa\\Anaconda3\\envs\\myenv\\lib\\site-packages\\multiprocess\\pool.py\", line 44, in mapstar\n    return list(map(*args))\n  File \"<ipython-input-11-dbf9aa1bac51>\", line 4, in process_betfair_historical_file\nNameError: name 'MarketStream' is not defined\n\"\"\"\n\nThe above exception was the direct cause of the following exception:\n\nNameError                                 Traceback (most recent call last)\n<ipython-input-19-0f3124f0dfdc> in <module>\n----> 1 results = pool.map(process_betfair_historical_file, [file_path for file_path in file_paths])\n\n~\\Anaconda3\\envs\\myenv\\lib\\site-packages\\multiprocess\\pool.py in map(self, func, iterable, chunksize)\n    264         in a list that is returned.\n    265         '''\n--> 266         return self._map_async(func, iterable, mapstar, chunksize).get()\n    267 \n    268     def starmap(self, func, iterable, chunksize=None):\n\n~\\Anaconda3\\envs\\myenv\\lib\\site-packages\\multiprocess\\pool.py in get(self, timeout)\n    642             return self._value\n    643         else:\n--> 644             raise self._value\n    645 \n    646     def _set(self, i, obj):\n\nNameError: name 'MarketStream' is not defined"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNQGKT0CR",
        "type": "message",
        "ts": "1578762842.017900",
        "client_msg_id": "123c0d09-df82-4fa7-85af-6f1177540e09",
        "text": "Seemed to have got it working and then got that",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g51b5871ab46",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/51b5871ab46e5ef289d9e90376cacaab.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "AP",
            "real_name": "AP",
            "display_name": "AP",
            "team": "T4G9NBD2M",
            "name": "ant.papa22",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CjzWS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Seemed to have got it working and then got that"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U92CASP1B",
        "type": "message",
        "ts": "1578763574.018400",
        "client_msg_id": "480764ed-a2c4-4444-8cde-51ddb4a1f616",
        "text": "Wild guess try having the import statement withing the function",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g374352c822f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a374352c822fa856c4cfdd782bbb8669.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0007-72.png",
            "first_name": "Jonatan",
            "real_name": "Jonatan",
            "display_name": "Jonatan (skyw)",
            "team": "T4G9NBD2M",
            "name": "almen.jonatan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2Sch3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Wild guess try having the import statement withing the function"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U92CASP1B",
        "type": "message",
        "ts": "1578763604.019000",
        "client_msg_id": "daaf42d0-55a9-4a65-9a8c-5368c26a9fbf",
        "text": "the processes create a whole new \"interpreter\"",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g374352c822f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a374352c822fa856c4cfdd782bbb8669.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0007-72.png",
            "first_name": "Jonatan",
            "real_name": "Jonatan",
            "display_name": "Jonatan (skyw)",
            "team": "T4G9NBD2M",
            "name": "almen.jonatan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "v=2V",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the processes create a whole new \"interpreter\""
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNQGKT0CR",
        "type": "message",
        "ts": "1578763665.019200",
        "client_msg_id": "f85cf486-7b6d-4656-9549-c5a2857fa7a2",
        "text": "Good point",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g51b5871ab46",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/51b5871ab46e5ef289d9e90376cacaab.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "AP",
            "real_name": "AP",
            "display_name": "AP",
            "team": "T4G9NBD2M",
            "name": "ant.papa22",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DHB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Good point"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNQGKT0CR",
        "type": "message",
        "ts": "1578763922.019700",
        "client_msg_id": "c921c30c-1550-4a2d-8a3b-e72468ab7ee5",
        "text": "yoooo, we have lift off",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g51b5871ab46",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/51b5871ab46e5ef289d9e90376cacaab.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "AP",
            "real_name": "AP",
            "display_name": "AP",
            "team": "T4G9NBD2M",
            "name": "ant.papa22",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3hAP+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "yoooo, we have lift off"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNQGKT0CR",
        "type": "message",
        "ts": "1578763926.019900",
        "client_msg_id": "c44f6080-988d-451b-b23f-8e775c62a657",
        "text": "Thanks!",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g51b5871ab46",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/51b5871ab46e5ef289d9e90376cacaab.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "AP",
            "real_name": "AP",
            "display_name": "AP",
            "team": "T4G9NBD2M",
            "name": "ant.papa22",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5s4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U92CASP1B",
        "type": "message",
        "ts": "1578764449.020800",
        "client_msg_id": "e4f91ad8-c0ea-4387-a18e-2fdcbc83b92e",
        "text": "no problem, hope it goes well!",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g374352c822f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a374352c822fa856c4cfdd782bbb8669.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0007-72.png",
            "first_name": "Jonatan",
            "real_name": "Jonatan",
            "display_name": "Jonatan (skyw)",
            "team": "T4G9NBD2M",
            "name": "almen.jonatan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4Afv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "no problem, hope it goes well!"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]