[
    {
        "user": "U02QDJCK3NW",
        "type": "message",
        "ts": "1644318160.647879",
        "client_msg_id": "5bd50b56-bdc1-4e7a-8406-133dc3164733",
        "text": "How can I filter a historical data stream by a specific marketType?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "f9b3fec110b3",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-12-11\/2822937230854_f9b3fec110b36ee68469_72.jpg",
            "first_name": "Nacho",
            "real_name": "Nacho Uve",
            "display_name": "Nacho Uve",
            "team": "T4G9NBD2M",
            "name": "nachouve",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1644318160.647879",
        "reply_count": 12,
        "reply_users_count": 3,
        "latest_reply": "1644490513.078529",
        "reply_users": [
            "U4H19D1D2",
            "U02QDJCK3NW",
            "UBS7QANF3"
        ],
        "replies": [
            {
                "user": "U4H19D1D2",
                "ts": "1644318310.648809"
            },
            {
                "user": "U02QDJCK3NW",
                "ts": "1644318715.557249"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1644318899.949179"
            },
            {
                "user": "U02QDJCK3NW",
                "ts": "1644320240.657339"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1644320274.663649"
            },
            {
                "user": "U02QDJCK3NW",
                "ts": "1644320329.537289"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1644320557.789489"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1644321782.878099"
            },
            {
                "user": "U02QDJCK3NW",
                "ts": "1644322156.466139"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1644322266.710199"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1644417937.107809"
            },
            {
                "user": "U02QDJCK3NW",
                "ts": "1644490513.078529"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1644490513.078529",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZjrG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "How can I filter a historical data stream by a specific marketType?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1644318310.648809",
        "client_msg_id": "96845c44-8696-4e8d-a85b-548cf6d8fcce",
        "text": "<https:\/\/liampauling.github.io\/flumine\/quickstart\/#market-filter>",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1644318160.647879",
        "parent_user_id": "U02QDJCK3NW",
        "attachments": [
            {
                "from_url": "https:\/\/liampauling.github.io\/flumine\/quickstart\/#market-filter",
                "service_icon": "https:\/\/liampauling.github.io\/flumine\/assets\/images\/favicon.png",
                "id": 1,
                "original_url": "https:\/\/liampauling.github.io\/flumine\/quickstart\/#market-filter",
                "fallback": "QuickStart - flumine",
                "text": "Trading framework for Betfair API-NG.",
                "title": "QuickStart - flumine",
                "title_link": "https:\/\/liampauling.github.io\/flumine\/quickstart\/#market-filter",
                "service_name": "liampauling.github.io"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "m4D1p",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/liampauling.github.io\/flumine\/quickstart\/#market-filter"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02QDJCK3NW",
        "type": "message",
        "ts": "1644318715.557249",
        "client_msg_id": "9ba37bb7-b898-441e-9911-bc14ef9ee515",
        "text": "Thank you.\n\nI'm just reading historical files, taking a look to some fields, etc.\nIs there no way to do it with ``create_historical_generator_stream``?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "f9b3fec110b3",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-12-11\/2822937230854_f9b3fec110b36ee68469_72.jpg",
            "first_name": "Nacho",
            "real_name": "Nacho Uve",
            "display_name": "Nacho Uve",
            "team": "T4G9NBD2M",
            "name": "nachouve",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1644318160.647879",
        "parent_user_id": "U02QDJCK3NW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qTS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thank you.\n\nI'm just reading historical files, taking a look to some fields, etc.\nIs there no way to do it with "
                            },
                            {
                                "type": "text",
                                "text": "`create_historical_generator_stream",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "`?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1644318899.949179",
        "client_msg_id": "08b382de-80c8-4184-9ae8-5ce822831607",
        "text": "no, not without reading the files, flumine does it using this code\n\n```def get_file_md(file_dir: Union[str, tuple], value: str) -&gt; Optional[str]:\n    # get value from raw streaming file marketDefinition\n    if isinstance(file_dir, tuple):\n        file_dir = file_dir[0]\n    with open(file_dir, \"r\") as f:\n        first_line = f.readline()\n        update = json.loads(first_line)\n    if \"mc\" not in update or not isinstance(update[\"mc\"], list) or not update[\"mc\"]:\n        return None\n    md = update[\"mc\"][0].get(\"marketDefinition\", {})\n    return md.get(value)```",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1644318160.647879",
        "parent_user_id": "U02QDJCK3NW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Up5m2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "no, not without reading the files, flumine does it using this code\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "def get_file_md(file_dir: Union[str, tuple], value: str) -> Optional[str]:\n    # get value from raw streaming file marketDefinition\n    if isinstance(file_dir, tuple):\n        file_dir = file_dir[0]\n    with open(file_dir, \"r\") as f:\n        first_line = f.readline()\n        update = json.loads(first_line)\n    if \"mc\" not in update or not isinstance(update[\"mc\"], list) or not update[\"mc\"]:\n        return None\n    md = update[\"mc\"][0].get(\"marketDefinition\", {})\n    return md.get(value)"
                            }
                        ],
                        "border": 0
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "white_check_mark",
                "users": [
                    "U02QDJCK3NW"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "U02QDJCK3NW"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02QDJCK3NW",
        "type": "message",
        "ts": "1644320240.657339",
        "client_msg_id": "54c18a71-5bfc-4393-8983-021cd8d3c745",
        "text": "Excellent!!",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "f9b3fec110b3",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-12-11\/2822937230854_f9b3fec110b36ee68469_72.jpg",
            "first_name": "Nacho",
            "real_name": "Nacho Uve",
            "display_name": "Nacho Uve",
            "team": "T4G9NBD2M",
            "name": "nachouve",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1644318160.647879",
        "parent_user_id": "U02QDJCK3NW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "g74",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Excellent!!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1644320274.663649",
        "client_msg_id": "E828A715-F113-4E78-AA92-FDA08EB4BBE7",
        "text": "Are you using betfairutil?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1644318160.647879",
        "parent_user_id": "U02QDJCK3NW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "a4fo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Are you using betfairutil?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02QDJCK3NW",
        "type": "message",
        "ts": "1644320329.537289",
        "edited": {
            "user": "U02QDJCK3NW",
            "ts": "1644320448.000000"
        },
        "client_msg_id": "3902935b-c69d-443f-b01f-954d03e56c46",
        "text": "<@UBS7QANF3> Yes, It was my first idea. Is it resolved that filtering in betfairutil?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "f9b3fec110b3",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-12-11\/2822937230854_f9b3fec110b36ee68469_72.jpg",
            "first_name": "Nacho",
            "real_name": "Nacho Uve",
            "display_name": "Nacho Uve",
            "team": "T4G9NBD2M",
            "name": "nachouve",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1644318160.647879",
        "parent_user_id": "U02QDJCK3NW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7qMZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UBS7QANF3"
                            },
                            {
                                "type": "text",
                                "text": " Yes, It was my first idea. Is it resolved that filtering in betfairutil?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1644320557.789489",
        "client_msg_id": "A399DE08-CDB1-47B2-BDE0-94B20D368F58",
        "text": "No but I can add it",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1644318160.647879",
        "parent_user_id": "U02QDJCK3NW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HPY9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "No but I can add it"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1644321782.878099",
        "client_msg_id": "bfab79b1-5e70-4921-845e-1fbb190310eb",
        "text": "To clarify, you're processing an event-level historic file, i.e. one which contains price updates for multiple markets corresponding to the same event, and you only want the market books from some subset of these markets?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1644318160.647879",
        "parent_user_id": "U02QDJCK3NW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vQJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "To clarify, you're processing an event-level historic file, i.e. one which contains price updates for multiple markets corresponding to the same event, and you only want the market books from some subset of these markets?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02QDJCK3NW",
        "type": "message",
        "ts": "1644322156.466139",
        "client_msg_id": "370e999a-327f-46a5-9cba-c1ee528f70ae",
        "text": "Yes. For me it could be useful if betfairutil offers that functionality.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "f9b3fec110b3",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-12-11\/2822937230854_f9b3fec110b36ee68469_72.jpg",
            "first_name": "Nacho",
            "real_name": "Nacho Uve",
            "display_name": "Nacho Uve",
            "team": "T4G9NBD2M",
            "name": "nachouve",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1644318160.647879",
        "parent_user_id": "U02QDJCK3NW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sA=C",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes. For me it could be useful if betfairutil offers that functionality."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1644322266.710199",
        "client_msg_id": "914999cd-1b54-43ac-8a30-36a3b5e4640d",
        "text": "OK cool, I will take a look. Actually, regardless of filtering, betfairutil is not really processing these event-level files correctly",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1644318160.647879",
        "parent_user_id": "U02QDJCK3NW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HNale",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "OK cool, I will take a look. Actually, regardless of filtering, betfairutil is not really processing these event-level files correctly"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "channel_join",
        "user": "U031Q8UUW07",
        "text": "<@U031Q8UUW07> has joined the channel",
        "type": "message",
        "ts": "1644329888.015519"
    },
    {
        "user": "U013ZS16QJZ",
        "type": "message",
        "ts": "1644336287.966639",
        "client_msg_id": "2e263bb2-989b-4199-a83b-9bdf30246635",
        "text": "Hi guys, I'm trying to send a Fill or Kill order but I can't see the error.\n\n    limit_order_filter = filters.limit_order(\n        size=3,\n        price=2,\n        persistence_type='LAPSE',\n        time_in_force='FillOrKill'\n        )\n\n    instructions_filter = filters.place_instruction(\n        selection_id=id_leader,\n        order_type=\"LIMIT\",\n        side='BACK',\n        limit_order=limit_order_filter,\n        )\n\n    order = trading.betting.place_orders(\n        lightweight=True,\n        async_=True,\n        market_id=id_mercado,\n        instructions=[instructions_filter],\n        session=session\n        )\n\n--------------------------------------\n\nError: {'code': -32602, 'message': 'DSC-0018'}\nFull Response: {'jsonrpc': '2.0', 'error': {'code': -32602, 'message': 'DSC-0018'}, 'id': 1}\n\nI searched for DSC-0018 error in API\n\nDSC-0018 MandatoryNotDefined Client 400 A parameter marked as mandatory was not provided",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g16b34a6e706",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/16b34a6e706dbe59fcc7dd82d1ae4930.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "VT",
            "real_name": "VT",
            "display_name": "VT",
            "team": "T4G9NBD2M",
            "name": "joaobaldoni",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ASYpZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi guys, I'm trying to send a Fill or Kill order but I can't see the error.\n\n    limit_order_filter = filters.limit_order(\n        size=3,\n        price=2,\n        persistence_type='LAPSE',\n        time_in_force='FillOrKill'\n        )\n\n    instructions_filter = filters.place_instruction(\n        selection_id=id_leader,\n        order_type=\"LIMIT\",\n        side='BACK',\n        limit_order=limit_order_filter,\n        )\n\n    order = trading.betting.place_orders(\n        lightweight=True,\n        async_=True,\n        market_id=id_mercado,\n        instructions=[instructions_filter],\n        session=session\n        )\n\n--------------------------------------\n\nError: {'code': -32602, 'message': 'DSC-0018'}\nFull Response: {'jsonrpc': '2.0', 'error': {'code': -32602, 'message': 'DSC-0018'}, 'id': 1}\n\nI searched for DSC-0018 error in API\n\nDSC-0018 MandatoryNotDefined Client 400 A parameter marked as mandatory was not provided"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUCD6P13J",
        "type": "message",
        "ts": "1644336398.254749",
        "client_msg_id": "8fab95d7-46c5-4348-ade5-481d7d345227",
        "text": "I think time_in_force is `FILL_OR_KILL`",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g6898272ab81",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6898272ab810e419c2c9ca9af1e53da8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0012-72.png",
            "first_name": "Lee",
            "real_name": "Lee U",
            "display_name": "Lee",
            "team": "T4G9NBD2M",
            "name": "lunswor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pDIs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think time_in_force is "
                            },
                            {
                                "type": "text",
                                "text": "FILL_OR_KILL",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "Thanks <@UUCD6P13J> was the problem, in the commented code this FillOrKill.",
        "files": [
            {
                "id": "F031R4EEC31",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U013ZS16QJZ",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XFL0T",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks "
                            },
                            {
                                "type": "user",
                                "user_id": "UUCD6P13J"
                            },
                            {
                                "type": "text",
                                "text": " was the problem, in the commented code this FillOrKill."
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1644336859.857509",
        "client_msg_id": "1a6e8166-fbd2-427c-af57-9065d2a57611"
    },
    {
        "subtype": "channel_join",
        "user": "U032K7GCJSD",
        "text": "<@U032K7GCJSD> has joined the channel",
        "type": "message",
        "ts": "1644344434.946129"
    },
    {
        "user": "U01TUMDLDND",
        "type": "message",
        "ts": "1644351455.580969",
        "client_msg_id": "da8c70c6-213e-48a0-aedc-290dd6eb61df",
        "text": "Hey, just wanted to share my process and do a quick sanity check since I'm not super familliar with BFLW\/Flumine. This is my process right now:\n• Container on AWS ECS recording Betfair odds data every 5 seconds - using the API via BFLW - for the markets I'm interested in (NBA) and writing to a DB\n• Model trained on historical data from Betfair pro files (lots of cleaning\/processing as there are very weird behaviors in the historicals that don't reflect the live environment)\n    ◦ All historical reading and treatment done with code I wrote myself, no BFLW here\n• External data read from other sources and also fed into a DB. Historicals are used along with BF historicals to train the model.\n• Live, constantly running betting bot reads the most recent data from the DB for live games joined with external data, manipulates it to the format the model expects, and makes a decision based on model output and strategy parameters\n    ◦ Again a custom class\/process, BFLW used only to connect to the API to collect bankroll info and place orders\n• If bet decision is made, sends a fill or kill limit order through BFLW client\n• Strategy parameters are determined through intensive backtesting\/bootstrapping on the live data collected so far\n    ◦ Also a custom backtesting suite I wrote to calculate expected profitability and other stats over n games in the season based on resampling previous games\nThis is working well and is thankfully profitable so far, but I feel like I may have reinvented the wheel at least five times during the whole thing considering BFLW\/Flumine exists. I've seen a lot of mention of backtesting on Flumine, would it also allow more complex operations like I described with using external data and output from a model? What is the benefit of doing so vs. the solution I've described? One thing I'm not doing which I know I could be is streaming and recording the data instead of the 5-second snapshots I'm using right now, but so far it's served me well and I haven't seen a reason to switch.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gd41c5b85b63",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/d41c5b85b6337c94675ffaf0c9e3193b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "Dan",
            "real_name": "Dan Q",
            "display_name": "Dan Q",
            "team": "T4G9NBD2M",
            "name": "usquandts",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JYqx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hey, just wanted to share my process and do a quick sanity check since I'm not super familliar with BFLW\/Flumine. This is my process right now:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Container on AWS ECS recording Betfair odds data every 5 seconds - using the API via BFLW - for the markets I'm interested in (NBA) and writing to a DB"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Model trained on historical data from Betfair pro files (lots of cleaning\/processing as there are very weird behaviors in the historicals that don't reflect the live environment)"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "All historical reading and treatment done with code I wrote myself, no BFLW here"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 1,
                        "border": 0
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "External data read from other sources and also fed into a DB. Historicals are used along with BF historicals to train the model."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Live, constantly running betting bot reads the most recent data from the DB for live games joined with external data, manipulates it to the format the model expects, and makes a decision based on model output and strategy parameters"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Again a custom class\/process, BFLW used only to connect to the API to collect bankroll info and place orders"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 1,
                        "border": 0
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "If bet decision is made, sends a fill or kill limit order through BFLW client"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Strategy parameters are determined through intensive backtesting\/bootstrapping on the live data collected so far"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Also a custom backtesting suite I wrote to calculate expected profitability and other stats over n games in the season based on resampling previous games"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 1,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThis is working well and is thankfully profitable so far, but I feel like I may have reinvented the wheel at least five times during the whole thing considering BFLW\/Flumine exists. I've seen a lot of mention of backtesting on Flumine, would it also allow more complex operations like I described with using external data and output from a model? What is the benefit of doing so vs. the solution I've described? One thing I'm not doing which I know I could be is streaming and recording the data instead of the 5-second snapshots I'm using right now, but so far it's served me well and I haven't seen a reason to switch."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1644352841.097059",
        "client_msg_id": "6B24436D-9EF5-4EBD-8F65-CFCAD5EB859B",
        "text": "Certainly recommend streaming, much lighter on CPU and reduces the complication. \n\nWhat issues are you seeing the historical data? Thought the pro stuff was good.\n\nflumine can do whatever you want, the selling point is the switch to backtest \/ paper \/ live with no changes to your code.  Switching wouldn’t make sense depending on how advanced your current setup is and\/or you want some of the features. ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1644352841.097059",
        "reply_count": 3,
        "reply_users_count": 2,
        "latest_reply": "1644396064.053299",
        "reply_users": [
            "U01TUMDLDND",
            "U4H19D1D2"
        ],
        "replies": [
            {
                "user": "U01TUMDLDND",
                "ts": "1644357073.452239"
            },
            {
                "user": "U01TUMDLDND",
                "ts": "1644358103.110239"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1644396064.053299"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1644396064.053299",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "R94U",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Certainly recommend streaming, much lighter on CPU and reduces the complication. \n\nWhat issues are you seeing the historical data? Thought the pro stuff was good.\n\nflumine can do whatever you want, the selling point is the switch to backtest \/ paper \/ live with no changes to your code.  Switching wouldn’t make sense depending on how advanced your current setup is and\/or you want some of the features. "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01TUMDLDND",
        "type": "message",
        "ts": "1644357073.452239",
        "client_msg_id": "5d0746cd-e502-485e-a6fb-cb7d79a40b71",
        "text": "So there's the issue where atb and atl are non-virtualized and thus not very useful comparisons to the live pulled atb\/atl data. The LTP is usually pretty close to both though, when there's decent liquidity (which there usually is), so it's fine. However, there are intense volatility spikes in LTP that I can't explain and had to take great pains to treat. Stuff like a team being comfortably in the lead at the very end of the game with 1.01 odds and then suddenly updates will come in at much higher odds, like 2.4 in the middle of the more sensible 1.01 prices. Stuff like that. It got to the point where for the historicals I need to calculate local volatility in the LTP time series and take the rolling median as the actual LTP and the rolling min as the best_atb just to be safe, otherwise my models perform way worse because there's so much noise.\n\nIt could be an issue of me making some incorrect assumption early on when reading in the data as I had to kind of blindly feel my way through rather than using something like BFLW to read them in properly, but I don't think so, I'm pretty sure I did it right as I've reviewed it a lot.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gd41c5b85b63",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/d41c5b85b6337c94675ffaf0c9e3193b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "Dan",
            "real_name": "Dan Q",
            "display_name": "Dan Q",
            "team": "T4G9NBD2M",
            "name": "usquandts",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1644352841.097059",
        "parent_user_id": "U4H19D1D2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kpA3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So there's the issue where atb and atl are non-virtualized and thus not very useful comparisons to the live pulled atb\/atl data. The LTP is usually pretty close to both though, when there's decent liquidity (which there usually is), so it's fine. However, there are intense volatility spikes in LTP that I can't explain and had to take great pains to treat. Stuff like a team being comfortably in the lead at the very end of the game with 1.01 odds and then suddenly updates will come in at much higher odds, like 2.4 in the middle of the more sensible 1.01 prices. Stuff like that. It got to the point where for the historicals I need to calculate local volatility in the LTP time series and take the rolling median as the actual LTP and the rolling min as the best_atb just to be safe, otherwise my models perform way worse because there's so much noise.\n\nIt could be an issue of me making some incorrect assumption early on when reading in the data as I had to kind of blindly feel my way through rather than using something like BFLW to read them in properly, but I don't think so, I'm pretty sure I did it right as I've reviewed it a lot."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01TUMDLDND",
        "type": "message",
        "ts": "1644358103.110239",
        "client_msg_id": "b5eae3fd-2395-47b3-8f94-85aff78ba887",
        "text": "<@U4H19D1D2> Do either Flumine or BFLW have a way to get processed data (ie timestamped best ATB\/LTP) out of historical files? I could only find the bits relating to pulling the historical files via the API endpoint",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gd41c5b85b63",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/d41c5b85b6337c94675ffaf0c9e3193b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "Dan",
            "real_name": "Dan Q",
            "display_name": "Dan Q",
            "team": "T4G9NBD2M",
            "name": "usquandts",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1644352841.097059",
        "parent_user_id": "U4H19D1D2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+HS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U4H19D1D2"
                            },
                            {
                                "type": "text",
                                "text": " Do either Flumine or BFLW have a way to get processed data (ie timestamped best ATB\/LTP) out of historical files? I could only find the bits relating to pulling the historical files via the API endpoint"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "channel_join",
        "user": "U031PJPERJA",
        "text": "<@U031PJPERJA> has joined the channel",
        "type": "message",
        "ts": "1644362908.132809"
    },
    {
        "subtype": "channel_join",
        "user": "U0322P0CK0E",
        "text": "<@U0322P0CK0E> has joined the channel",
        "type": "message",
        "ts": "1644388505.015559"
    },
    {
        "user": "U0322P0CK0E",
        "type": "message",
        "ts": "1644388639.837329",
        "client_msg_id": "ffa8ee2c-882c-4b3d-81df-3d8c12d7c7a3",
        "text": "Hey Guys, trying to follow the flumine quick start guide and just place bets on any greyhound market but doesn't seem to be working. Am I missing something?\n\n```from flumine import BaseStrategy\nfrom flumine.order.trade import Trade\nfrom flumine.order.order import LimitOrder\n\n\nclass ExampleStrategy(BaseStrategy):\n    def start(self):\n        # subscribe to streams\n        print(\"starting strategy 'ExampleStrategy'\")\n        \n    def check_market_book(self, market, market_book):\n        # process_market_book only executed if this returns True\n        if market_book.status != \"CLOSED\":\n            return True\n\n    def process_market_book(self, market, market_book):\n        for runner in market_book.runners:\n            if runner.selection_id == runner.selection_id:\n                trade = Trade(\n                    market_id=market_book.market_id, \n                    selection_id=runner.selection_id,\n                    handicap=runner.handicap,\n                    strategy=self\n                )\n                order = trade.create_order(\n                    side=\"BACK\", \n                    order_type=LimitOrder(price=1000, size=5.00)\n                )\n                market.place_order(order)```\n```from betfairlightweight.filters import (\n    streaming_market_filter, \n    streaming_market_data_filter,\n)\n\nstrategy = ExampleStrategy(\n    market_filter=streaming_market_filter(\n        event_type_ids=[\"4339\"],\n        country_codes=[\"AU\"],\n        market_types=[\"WIN\"],\n    ),\n    market_data_filter=streaming_market_data_filter(fields=[\"EX_ALL_OFFERS\"])\n)\n\nframework.add_strategy(strategy)```\n```framework.run()```\n",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "ab1918814707",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-07-31\/3867647231206_ab191881470773932048_72.jpg",
            "first_name": "Vincent",
            "real_name": "Vincent Lim",
            "display_name": "Guy Incognito",
            "team": "T4G9NBD2M",
            "name": "nelsonmathsspecialist",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1644388639.837329",
        "reply_count": 4,
        "reply_users_count": 4,
        "latest_reply": "1644425480.866599",
        "reply_users": [
            "UBS7QANF3",
            "U9JHLMZB4",
            "U0322P0CK0E",
            "UUCD6P13J"
        ],
        "replies": [
            {
                "user": "UBS7QANF3",
                "ts": "1644391675.983449"
            },
            {
                "user": "U9JHLMZB4",
                "ts": "1644401742.979399"
            },
            {
                "user": "U0322P0CK0E",
                "ts": "1644418190.825709"
            },
            {
                "user": "UUCD6P13J",
                "ts": "1644425480.866599"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1644425480.866599",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xlQ0v",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hey Guys, trying to follow the flumine quick start guide and just place bets on any greyhound market but doesn't seem to be working. Am I missing something?\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "from flumine import BaseStrategy\nfrom flumine.order.trade import Trade\nfrom flumine.order.order import LimitOrder\n\n\nclass ExampleStrategy(BaseStrategy):\n    def start(self):\n        # subscribe to streams\n        print(\"starting strategy 'ExampleStrategy'\")\n        \n    def check_market_book(self, market, market_book):\n        # process_market_book only executed if this returns True\n        if market_book.status != \"CLOSED\":\n            return True\n\n    def process_market_book(self, market, market_book):\n        for runner in market_book.runners:\n            if runner.selection_id == runner.selection_id:\n                trade = Trade(\n                    market_id=market_book.market_id, \n                    selection_id=runner.selection_id,\n                    handicap=runner.handicap,\n                    strategy=self\n                )\n                order = trade.create_order(\n                    side=\"BACK\", \n                    order_type=LimitOrder(price=1000, size=5.00)\n                )\n                market.place_order(order)"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "from betfairlightweight.filters import (\n    streaming_market_filter, \n    streaming_market_data_filter,\n)\n\nstrategy = ExampleStrategy(\n    market_filter=streaming_market_filter(\n        event_type_ids=[\"4339\"],\n        country_codes=[\"AU\"],\n        market_types=[\"WIN\"],\n    ),\n    market_data_filter=streaming_market_data_filter(fields=[\"EX_ALL_OFFERS\"])\n)\n\nframework.add_strategy(strategy)"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "framework.run()"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": []
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1644391675.983449",
        "client_msg_id": "310281DF-A810-4777-BFAB-FE2CD2CFAD0E",
        "text": "Can you be more specific about not working? What output are you getting?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1644388639.837329",
        "parent_user_id": "U0322P0CK0E",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6uAq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Can you be more specific about not working? What output are you getting?"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]