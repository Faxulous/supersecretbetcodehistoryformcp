[
    {
        "user": "U05V9E7JA58",
        "type": "message",
        "ts": "1710921674.804099",
        "client_msg_id": "d867b749-faac-4f1a-89f0-58dcc7904050",
        "text": "Thanks Mo. I'm struggling to find references to race card. Is it something to do with middleware? I'm afraid I'm very unfamiliar with all this!",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "cc7dc83644f0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-05\/5995483702786_cc7dc83644f0419b2460_72.png",
            "first_name": "Tony",
            "real_name": "Tony Holder",
            "display_name": "tone",
            "team": "T4G9NBD2M",
            "name": "tjwhold",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1710860692.271129",
        "parent_user_id": "U05V9E7JA58",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5bkyb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks Mo. I'm struggling to find references to race card. Is it something to do with middleware? I'm afraid I'm very unfamiliar with all this!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1710921698.777539",
        "client_msg_id": "CF3D4076-37CF-48BC-B06E-34A4F8B5516F",
        "text": "Is this for Australian races?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1710860692.271129",
        "parent_user_id": "U05V9E7JA58",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "f1nkz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is this for Australian races?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05V9E7JA58",
        "type": "message",
        "ts": "1710922210.702149",
        "client_msg_id": "c63db924-eb75-46ed-a136-9dd51dc044a2",
        "text": "Just UK &amp; Ireland",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "cc7dc83644f0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-05\/5995483702786_cc7dc83644f0419b2460_72.png",
            "first_name": "Tony",
            "real_name": "Tony Holder",
            "display_name": "tone",
            "team": "T4G9NBD2M",
            "name": "tjwhold",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1710860692.271129",
        "parent_user_id": "U05V9E7JA58",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "goPuk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Just UK & Ireland"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05V9E7JA58",
        "type": "message",
        "ts": "1710922346.973629",
        "client_msg_id": "c5973af3-7d02-48ff-bb82-a5ed31fc7d70",
        "text": "Previously I was using market_definition.name, which used to be set to something like \"2m4f\" and I could then convert this to meters but unfortunately this field now seems to be unpopulated!",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "cc7dc83644f0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-05\/5995483702786_cc7dc83644f0419b2460_72.png",
            "first_name": "Tony",
            "real_name": "Tony Holder",
            "display_name": "tone",
            "team": "T4G9NBD2M",
            "name": "tjwhold",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1710860692.271129",
        "parent_user_id": "U05V9E7JA58",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XavcQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Previously I was using market_definition.name, which used to be set to something like \"2m4f\" and I could then convert this to meters but unfortunately this field now seems to be unpopulated!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1710922435.823799",
        "client_msg_id": "70fc9a12-f5c3-4df5-8280-fbbcc7b3a27f",
        "text": "OK good, race cards should be available for those\n\nExample use of race card endpoint in betfairlightweight: <https:\/\/github.com\/betcode-org\/betfair\/blob\/master\/examples\/exampleracecard.py>\n\nYou should probably adapt the market catalogue example middleware from flumine unless someone can just share a race card middleware with you: <https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/examples\/middleware\/marketcatalogue.py>\n\n<@U4H19D1D2> worth adding a race card middleware example?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1710860692.271129",
        "parent_user_id": "U05V9E7JA58",
        "attachments": [
            {
                "id": 1,
                "footer_icon": "https:\/\/slack.github.com\/static\/img\/favicon-neutral.png",
                "color": "24292f",
                "bot_id": "B021ZJYSBMW",
                "app_unfurl_url": "https:\/\/github.com\/betcode-org\/betfair\/blob\/master\/examples\/exampleracecard.py",
                "is_app_unfurl": true,
                "app_id": "A01BP7R4KNY",
                "fallback": "<https:\/\/github.com\/betcode-org\/betfair\/blob\/master\/examples\/exampleracecard.py | exampleracecard.py>",
                "title": "<https:\/\/github.com\/betcode-org\/betfair\/blob\/master\/examples\/exampleracecard.py | exampleracecard.py>",
                "footer": "<https:\/\/github.com\/betcode-org\/betfair|betcode-org\/betfair>",
                "mrkdwn_in": [
                    "text"
                ]
            },
            {
                "id": 2,
                "footer_icon": "https:\/\/slack.github.com\/static\/img\/favicon-neutral.png",
                "color": "24292f",
                "bot_id": "B021ZJYSBMW",
                "app_unfurl_url": "https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/examples\/middleware\/marketcatalogue.py",
                "is_app_unfurl": true,
                "app_id": "A01BP7R4KNY",
                "fallback": "<https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/examples\/middleware\/marketcatalogue.py | marketcatalogue.py>",
                "title": "<https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/examples\/middleware\/marketcatalogue.py | marketcatalogue.py>",
                "footer": "<https:\/\/github.com\/betcode-org\/flumine|betcode-org\/flumine>",
                "mrkdwn_in": [
                    "text"
                ]
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YwdV3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "OK good, race cards should be available for those\n\nExample use of race card endpoint in betfairlightweight: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/betcode-org\/betfair\/blob\/master\/examples\/exampleracecard.py"
                            },
                            {
                                "type": "text",
                                "text": "\n\nYou should probably adapt the market catalogue example middleware from flumine unless someone can just share a race card middleware with you: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/examples\/middleware\/marketcatalogue.py"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "U4H19D1D2"
                            },
                            {
                                "type": "text",
                                "text": " worth adding a race card middleware example?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "pray",
                "users": [
                    "U05V9E7JA58"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1710923689.035899",
        "client_msg_id": "0205e3b5-37f0-4051-9486-38116831a335",
        "text": "For live you need a worker, here is mine\n\n```import logging\nfrom flumine.utils import chunks\nfrom betfairlightweight import BetfairError\nfrom flumine.events.events import CustomEvent\n\nlogger = logging.getLogger(__name__)\n\n\ndef poll_race_card(context: dict, flumine) -&gt; None:\n    client = flumine.clients.get_betfair_default()\n    trading = client.betting_client\n    if trading.race_card.app_key is None:\n        trading.race_card.login()\n    markets = _get_markets(flumine.markets)\n    for market_ids in chunks(markets, 10):\n        try:\n            race_cards = trading.race_card.get_race_card(market_ids=market_ids)\n        except BetfairError as e:\n            logger.error(\n                \"poll_race_card error\",\n                exc_info=True,\n                extra={\"trading_function\": \"get_race_card\", \"response\": e},\n            )\n            continue\n        if race_cards:\n            flumine.handler_queue.put(CustomEvent(race_cards, callback))\n\n\ndef _get_markets(markets: list, event_type_id: str = \"7\") -&gt; list:\n    \"\"\"Restrict to open and eventTypeId\"\"\"\n    _markets = []\n    for market in markets:\n        if not market.closed and market.event_type_id == event_type_id:\n            _markets.append(market.market_id)\n    return _markets\n\n\ndef callback(flumine, event):\n    # update market context\n    race_cards = event.event\n    for race_card in race_cards:\n        for market in flumine.markets:\n            for race_card_market in race_card.race.markets:\n                if market.market_id == race_card_market.market_id:\n                    market.context[\"race_card\"] = race_card```\n",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1710860692.271129",
        "parent_user_id": "U05V9E7JA58",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OfLsN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For live you need a worker, here is mine\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "import logging\nfrom flumine.utils import chunks\nfrom betfairlightweight import BetfairError\nfrom flumine.events.events import CustomEvent\n\nlogger = logging.getLogger(__name__)\n\n\ndef poll_race_card(context: dict, flumine) -> None:\n    client = flumine.clients.get_betfair_default()\n    trading = client.betting_client\n    if trading.race_card.app_key is None:\n        trading.race_card.login()\n    markets = _get_markets(flumine.markets)\n    for market_ids in chunks(markets, 10):\n        try:\n            race_cards = trading.race_card.get_race_card(market_ids=market_ids)\n        except BetfairError as e:\n            logger.error(\n                \"poll_race_card error\",\n                exc_info=True,\n                extra={\"trading_function\": \"get_race_card\", \"response\": e},\n            )\n            continue\n        if race_cards:\n            flumine.handler_queue.put(CustomEvent(race_cards, callback))\n\n\ndef _get_markets(markets: list, event_type_id: str = \"7\") -> list:\n    \"\"\"Restrict to open and eventTypeId\"\"\"\n    _markets = []\n    for market in markets:\n        if not market.closed and market.event_type_id == event_type_id:\n            _markets.append(market.market_id)\n    return _markets\n\n\ndef callback(flumine, event):\n    # update market context\n    race_cards = event.event\n    for race_card in race_cards:\n        for market in flumine.markets:\n            for race_card_market in race_card.race.markets:\n                if market.market_id == race_card_market.market_id:\n                    market.context[\"race_card\"] = race_card"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": []
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "pray",
                "users": [
                    "U05V9E7JA58"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U05V9E7JA58",
        "type": "message",
        "ts": "1710927214.342489",
        "client_msg_id": "ad10acda-f36c-4bc2-9497-b2d27d736c73",
        "text": "Thanks guys",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "cc7dc83644f0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-05\/5995483702786_cc7dc83644f0419b2460_72.png",
            "first_name": "Tony",
            "real_name": "Tony Holder",
            "display_name": "tone",
            "team": "T4G9NBD2M",
            "name": "tjwhold",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1710860692.271129",
        "parent_user_id": "U05V9E7JA58",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QcSqR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks guys"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]