[
    {
        "user": "U0155J92A7Q",
        "type": "message",
        "ts": "1607075413.299400",
        "client_msg_id": "1c53f0bf-0267-4512-87e3-f18c1ee334e8",
        "text": "Hi guys, is there any problem with running bots from 2 different Servers at the same time? I am running them locally for testing and in a production server, wondering if Betfair would like that or not...",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gde8c5d51af5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/de8c5d51af54a5ac7b501f416ddb262c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "",
            "real_name": "Jorge",
            "display_name": "Jorge",
            "team": "T4G9NBD2M",
            "name": "jgarciam95",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Q8\/b",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi guys, is there any problem with running bots from 2 different Servers at the same time? I am running them locally for testing and in a production server, wondering if Betfair would like that or not..."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U016535QCJ2",
        "type": "message",
        "ts": "1607075653.299700",
        "edited": {
            "user": "U016535QCJ2",
            "ts": "1607075668.000000"
        },
        "client_msg_id": "405d8d6a-fdd0-43f2-8585-b07fc99b0552",
        "text": "No issue :wink:",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "048f61bdc189",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-01\/1216267094995_048f61bdc189acecaafc_72.jpg",
            "first_name": "Misha",
            "real_name": "Misha Charrett",
            "display_name": "Misha",
            "team": "T4G9NBD2M",
            "name": "misha",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "shPl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "No issue "
                            },
                            {
                                "type": "emoji",
                                "name": "wink",
                                "unicode": "1f609"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UPMUFSGCR",
                    "U4H19D1D2"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1607077792.300800",
        "client_msg_id": "17E27145-ED82-4159-8AA9-7334C093EB13",
        "text": "Technically yes but XM isn’t perfect, I have it off and ignore it as it hides a lot of opportunities ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1607000675.287100",
        "parent_user_id": "U919M37DL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "81Ll",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Technically yes but XM isn’t perfect, I have it off and ignore it as it hides a lot of opportunities "
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U919M37DL",
                    "U01CERWB7V3"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U919M37DL",
        "type": "message",
        "ts": "1607083651.301100",
        "client_msg_id": "4781bd29-d701-48ac-a6b1-c52b1efcbc44",
        "text": "interesting point about XM not being always correct...",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "1879a7e748ff",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-05-05\/1102646833461_1879a7e748ffd58a149f_72.jpg",
            "first_name": "Karlo",
            "real_name": "Karlo L.",
            "display_name": "klozovin",
            "team": "T4G9NBD2M",
            "name": "karl",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1607000675.287100",
        "parent_user_id": "U919M37DL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EAA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "interesting point about XM not being always correct..."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UK55EGNLA",
        "type": "message",
        "ts": "1607092550.302400",
        "client_msg_id": "295c698c-31f7-4e3a-bb88-89041793d8be",
        "text": "Hi all. I was wondering if there is any way to identify from the betfair requests (e.g market catalogue) which are the reserve runners. I know eventually they become non runners and have a status of REMOVED but I want to identify before they are marked as non runners.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gdfe07d47541",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/edfe07d47541581fd47335de627fc2b1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0014-72.png",
            "first_name": "Robert",
            "real_name": "Robert",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "robert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BFVr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi all. I was wondering if there is any way to identify from the betfair requests (e.g market catalogue) which are the reserve runners. I know eventually they become non runners and have a status of REMOVED but I want to identify before they are marked as non runners."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UK55EGNLA",
        "type": "message",
        "ts": "1607093081.302600",
        "client_msg_id": "c9e10c11-99f7-4ff3-b1e2-f4f753426802",
        "text": "this is for horse racing btw",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gdfe07d47541",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/edfe07d47541581fd47335de627fc2b1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0014-72.png",
            "first_name": "Robert",
            "real_name": "Robert",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "robert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7R5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "this is for horse racing btw"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "horse_racing",
                "users": [
                    "UK55EGNLA"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "ULDAVFDRP",
        "type": "message",
        "ts": "1607101423.303200",
        "client_msg_id": "b80ad835-8b7a-4e11-bae0-58ddcd509d7b",
        "text": "<https:\/\/docs.developer.betfair.com\/display\/1smk3cen4v3lu3yomq5qye0ni\/listMarketCatalogue>",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g46fe1c1bf03",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b46fe1c1bf03e18d951e7032fb494283.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "",
            "real_name": "Oliver Varney",
            "display_name": "Oliver Varney",
            "team": "T4G9NBD2M",
            "name": "oliverashleyvarney",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BS5t",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/docs.developer.betfair.com\/display\/1smk3cen4v3lu3yomq5qye0ni\/listMarketCatalogue"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "ULDAVFDRP",
        "type": "message",
        "ts": "1607101451.303600",
        "client_msg_id": "9e8c72e8-3d41-466c-a2d2-b2d441905950",
        "text": "RUNNER_METADATA - JOCKEY_NAME \"*Please note*: This field will contain '*Reserve*' in the event that the horse has been entered into the market as a reserve runner. Any reserve runners will be withdrawn from the market once it has been confirmed that they will not run.\"",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g46fe1c1bf03",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b46fe1c1bf03e18d951e7032fb494283.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "",
            "real_name": "Oliver Varney",
            "display_name": "Oliver Varney",
            "team": "T4G9NBD2M",
            "name": "oliverashleyvarney",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DdX1k",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "RUNNER_METADATA - JOCKEY_NAME \""
                            },
                            {
                                "type": "text",
                                "text": "Please note",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ": This field will contain '"
                            },
                            {
                                "type": "text",
                                "text": "Reserve",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "' in the event that the horse has been entered into the market as a reserve runner. Any reserve runners will be withdrawn from the market once it has been confirmed that they will not run.\""
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "ULDAVFDRP",
        "type": "message",
        "ts": "1607101514.304300",
        "client_msg_id": "3119e0ac-350d-435c-9c54-860b45765f33",
        "text": "thats what I can find from searching the dev docs, others might know a better way",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g46fe1c1bf03",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b46fe1c1bf03e18d951e7032fb494283.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "",
            "real_name": "Oliver Varney",
            "display_name": "Oliver Varney",
            "team": "T4G9NBD2M",
            "name": "oliverashleyvarney",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "raL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "thats what I can find from searching the dev docs, others might know a better way"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UK55EGNLA",
        "type": "message",
        "ts": "1607103621.304500",
        "client_msg_id": "86008e91-130f-4ed8-9c50-82d30c5fe19f",
        "text": ":thumbsup: thanks",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gdfe07d47541",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/edfe07d47541581fd47335de627fc2b1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0014-72.png",
            "first_name": "Robert",
            "real_name": "Robert",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "robert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5h0jt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "emoji",
                                "name": "thumbsup",
                                "unicode": "1f44d"
                            },
                            {
                                "type": "text",
                                "text": " thanks"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01CERWB7V3",
        "type": "message",
        "ts": "1607116357.304700",
        "edited": {
            "user": "U01CERWB7V3",
            "ts": "1607116407.000000"
        },
        "client_msg_id": "f0c0987e-d098-4b09-87c8-b3991e4f2303",
        "text": "(not sure if this is an appropriate question) can you give me an example of what kind of opportunities <@U4H19D1D2>? does this imply that 'riskless' arbs do still occur when bf's xm algo doesn't properly balance the book? For some reason I cant shake the idea that *most of the opportunities one might see in the non-virtual book are going to be squashed in reality by XM...but if you're saying some creep through due to XM not being accurate, how would you know that will be the case?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g5225cab87ed",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5225cab87ed197a04a4f61c14d29b44d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "Charlie 303",
            "display_name": "Charlie 303",
            "team": "T4G9NBD2M",
            "name": "charl303",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1607000675.287100",
        "parent_user_id": "U919M37DL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sDiD1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(not sure if this is an appropriate question) can you give me an example of what kind of opportunities "
                            },
                            {
                                "type": "user",
                                "user_id": "U4H19D1D2"
                            },
                            {
                                "type": "text",
                                "text": "? does this imply that 'riskless' arbs do still occur when bf's xm algo doesn't properly balance the book? For some reason I cant shake the idea that *most of the opportunities one might see in the non-virtual book are going to be squashed in reality by XM...but if you're saying some creep through due to XM not being accurate, how would you know that will be the case?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01CERWB7V3",
        "type": "message",
        "ts": "1607118773.309300",
        "client_msg_id": "eab34330-d107-426c-a3a0-196c0b70b080",
        "text": "So I have a coarse streaming filter which amounts to about 800 markets and I need runner metadata for each of these markets.  My first thought was to start with list_market_catalogue (using same coarse filter and RUNNER_METADATA projection) to build the index, then start the stream and apply updates matching the event ids.  However, I get the APING 'too much data' error on list_market_catalogue.  Applying a max_results=200 to the list_market_catalogue call seems to work, but it doesnt appear there's any pagination feature so I'm wondering how to get the remaining ~600 markets?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g5225cab87ed",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5225cab87ed197a04a4f61c14d29b44d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "Charlie 303",
            "display_name": "Charlie 303",
            "team": "T4G9NBD2M",
            "name": "charl303",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RPX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So I have a coarse streaming filter which amounts to about 800 markets and I need runner metadata for each of these markets.  My first thought was to start with list_market_catalogue (using same coarse filter and RUNNER_METADATA projection) to build the index, then start the stream and apply updates matching the event ids.  However, I get the APING 'too much data' error on list_market_catalogue.  Applying a max_results=200 to the list_market_catalogue call seems to work, but it doesnt appear there's any pagination feature so I'm wondering how to get the remaining ~600 markets?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01CERWB7V3",
        "type": "message",
        "ts": "1607118855.310900",
        "client_msg_id": "c02a560c-003c-406e-873c-0c2e568f76ce",
        "text": "Alternatively I could start the stream then on every update with img:True I could call list_market_catalogue, but that would amount to ~800 individual calls on init...which seems to be counter to the 'go coarse then filter locally' mantra",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g5225cab87ed",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5225cab87ed197a04a4f61c14d29b44d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "Charlie 303",
            "display_name": "Charlie 303",
            "team": "T4G9NBD2M",
            "name": "charl303",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+smrh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Alternatively I could start the stream then on every update with img:True I could call list_market_catalogue, but that would amount to ~800 individual calls on init...which seems to be counter to the 'go coarse then filter locally' mantra"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUCD6P13J",
        "type": "message",
        "ts": "1607118875.311400",
        "client_msg_id": "524ACF8F-6542-4173-9B27-A18465E0DBF8",
        "text": "You have to paginate yourself passing batches of market ids",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g6898272ab81",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6898272ab810e419c2c9ca9af1e53da8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0012-72.png",
            "first_name": "Lee",
            "real_name": "Lee U",
            "display_name": "Lee",
            "team": "T4G9NBD2M",
            "name": "lunswor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kFd\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You have to paginate yourself passing batches of market ids"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01CERWB7V3",
        "type": "message",
        "ts": "1607118936.312100",
        "client_msg_id": "55e69d77-2077-4a3c-8240-5598642a925e",
        "text": "ah. so basically woudl just add an initial list_market_catalogue using a projection that can handle all my target markets",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g5225cab87ed",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5225cab87ed197a04a4f61c14d29b44d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "Charlie 303",
            "display_name": "Charlie 303",
            "team": "T4G9NBD2M",
            "name": "charl303",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IkI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "ah. so basically woudl just add an initial list_market_catalogue using a projection that can handle all my target markets"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUCD6P13J",
        "type": "message",
        "ts": "1607118966.312600",
        "client_msg_id": "91251A16-587E-4FC9-B77B-8DB550B34A26",
        "text": "Here’s an example of how flumine does it <https:\/\/github.com\/liampauling\/flumine\/blob\/master\/flumine\/worker.py#L120|https:\/\/github.com\/liampauling\/flumine\/blob\/master\/flumine\/worker.py#L120>\n",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g6898272ab81",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6898272ab810e419c2c9ca9af1e53da8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0012-72.png",
            "first_name": "Lee",
            "real_name": "Lee U",
            "display_name": "Lee",
            "team": "T4G9NBD2M",
            "name": "lunswor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1607118966.312600",
        "reply_count": 19,
        "reply_users_count": 4,
        "latest_reply": "1607189847.324100",
        "reply_users": [
            "U01CERWB7V3",
            "UUCD6P13J",
            "U4H19D1D2",
            "ULDAVFDRP"
        ],
        "replies": [
            {
                "user": "U01CERWB7V3",
                "ts": "1607120311.313000"
            },
            {
                "user": "UUCD6P13J",
                "ts": "1607122082.313900"
            },
            {
                "user": "U01CERWB7V3",
                "ts": "1607126084.314200"
            },
            {
                "user": "U01CERWB7V3",
                "ts": "1607131895.314400"
            },
            {
                "user": "U01CERWB7V3",
                "ts": "1607135622.315100"
            },
            {
                "user": "U01CERWB7V3",
                "ts": "1607136513.316400"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1607151523.318400"
            },
            {
                "user": "ULDAVFDRP",
                "ts": "1607189195.319000"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1607189276.319700"
            },
            {
                "user": "ULDAVFDRP",
                "ts": "1607189308.319900"
            },
            {
                "user": "ULDAVFDRP",
                "ts": "1607189347.320100"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1607189409.321400"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1607189462.322400"
            },
            {
                "user": "ULDAVFDRP",
                "ts": "1607189475.322600"
            },
            {
                "user": "ULDAVFDRP",
                "ts": "1607189505.322800"
            },
            {
                "user": "ULDAVFDRP",
                "ts": "1607189543.323000"
            },
            {
                "user": "ULDAVFDRP",
                "ts": "1607189711.323200"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1607189745.323900"
            },
            {
                "user": "ULDAVFDRP",
                "ts": "1607189847.324100"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1607189847.324100",
        "attachments": [
            {
                "fallback": "[liampauling\/flumine] flumine\/worker.py:120",
                "text": "```\n    for market_ids in chunks(live_markets, 25):\n```",
                "title": "flumine\/worker.py:120",
                "footer": "<https:\/\/github.com\/liampauling\/flumine|liampauling\/flumine>",
                "id": 1,
                "title_link": "https:\/\/github.com\/liampauling\/flumine\/blob\/master\/flumine\/worker.py#L120",
                "footer_icon": "https:\/\/github.githubassets.com\/favicon.ico",
                "color": "24292f",
                "mrkdwn_in": [
                    "text"
                ],
                "bot_id": "B01144Z0734",
                "app_unfurl_url": "https:\/\/github.com\/liampauling\/flumine\/blob\/master\/flumine\/worker.py#L120",
                "is_app_unfurl": true
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QxY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here’s an example of how flumine does it "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/liampauling\/flumine\/blob\/master\/flumine\/worker.py#L120",
                                "text": "https:\/\/github.com\/liampauling\/flumine\/blob\/master\/flumine\/worker.py#L120"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "raised_hands",
                "users": [
                    "U01CERWB7V3",
                    "UPMUFSGCR"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U01CERWB7V3",
        "type": "message",
        "ts": "1607120311.313000",
        "client_msg_id": "d8553606-4d65-45ff-be4d-a39d1209b834",
        "text": "Does flumine do this by default (e.g. if I simply follow the readme example strategy and change the marketFilter, will all the runner meta data be available when process_market_book is called)?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g5225cab87ed",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5225cab87ed197a04a4f61c14d29b44d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "Charlie 303",
            "display_name": "Charlie 303",
            "team": "T4G9NBD2M",
            "name": "charl303",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1607118966.312600",
        "parent_user_id": "UUCD6P13J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZgMn0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Does flumine do this by default (e.g. if I simply follow the readme example strategy and change the marketFilter, will all the runner meta data be available when process_market_book is called)?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUCD6P13J",
        "type": "message",
        "ts": "1607122082.313900",
        "edited": {
            "user": "UUCD6P13J",
            "ts": "1607122094.000000"
        },
        "client_msg_id": "1B7D3FB3-31B4-4788-BB54-98F4B56A2683",
        "text": "Yep, has a worker which will call that method every 60 seconds by default ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g6898272ab81",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6898272ab810e419c2c9ca9af1e53da8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0012-72.png",
            "first_name": "Lee",
            "real_name": "Lee U",
            "display_name": "Lee",
            "team": "T4G9NBD2M",
            "name": "lunswor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1607118966.312600",
        "parent_user_id": "UUCD6P13J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zeg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yep, has a worker which will call that method every 60 seconds by default "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01CERWB7V3",
        "type": "message",
        "ts": "1607126084.314200",
        "client_msg_id": "0c6862cf-6e79-4998-abc4-8c13b76d50e3",
        "text": "thanks! been focused on the mechanics of bflw i forgot to rtfm on flumine :wink:",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g5225cab87ed",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5225cab87ed197a04a4f61c14d29b44d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "Charlie 303",
            "display_name": "Charlie 303",
            "team": "T4G9NBD2M",
            "name": "charl303",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1607118966.312600",
        "parent_user_id": "UUCD6P13J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yh4cV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "thanks! been focused on the mechanics of bflw i forgot to rtfm on flumine "
                            },
                            {
                                "type": "emoji",
                                "name": "wink",
                                "unicode": "1f609"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01CERWB7V3",
        "type": "message",
        "ts": "1607131895.314400",
        "edited": {
            "user": "U01CERWB7V3",
            "ts": "1607131923.000000"
        },
        "client_msg_id": "8eda486f-9f33-4887-a2cc-dcd0c0ddebf8",
        "text": "Follow-up - I need to run some code every time a new market is added. the docs mention an _add_live_market() function is \"called when new Market received through streams\".  Is that the right spot? are there any examples of implenenting that? (still brushing off the dust on my python skills, not sure how to override the Flumine class)",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g5225cab87ed",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5225cab87ed197a04a4f61c14d29b44d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "Charlie 303",
            "display_name": "Charlie 303",
            "team": "T4G9NBD2M",
            "name": "charl303",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1607118966.312600",
        "parent_user_id": "UUCD6P13J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JBUh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Follow-up - I need to run some code every time a new market is added. the docs mention an _add_live_market() function is \"called when new Market received through streams\".  Is that the right spot? are there any examples of implenenting that? (still brushing off the dust on my python skills, not sure how to override the Flumine class)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01CERWB7V3",
        "type": "message",
        "ts": "1607135622.315100",
        "edited": {
            "user": "U01CERWB7V3",
            "ts": "1607135631.000000"
        },
        "client_msg_id": "474b0e7f-1554-4d7d-8aae-01b9be15301e",
        "text": "Figured that this is where Middleware comes into play, but could only find one example at <https:\/\/github.com\/liampauling\/flumine\/blob\/master\/flumine\/markets\/middleware.py>....",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g5225cab87ed",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5225cab87ed197a04a4f61c14d29b44d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "Charlie 303",
            "display_name": "Charlie 303",
            "team": "T4G9NBD2M",
            "name": "charl303",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1607118966.312600",
        "parent_user_id": "UUCD6P13J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JtKbf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Figured that this is where Middleware comes into play, but could only find one example at "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/liampauling\/flumine\/blob\/master\/flumine\/markets\/middleware.py"
                            },
                            {
                                "type": "text",
                                "text": "...."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01CERWB7V3",
        "type": "message",
        "ts": "1607136513.316400",
        "edited": {
            "user": "U01CERWB7V3",
            "ts": "1607137703.000000"
        },
        "client_msg_id": "624817b7-09ea-4bd5-b874-9e89f75020f8",
        "text": "In case it helps others, the following is a very basic way to add middleware:\n```class Middleware:\n    def __init__(self, market):\n        pass\n   \n    def __call__(market) -&gt; None:\n        pass\n    \n    def add_market(market) -&gt; None:\n        print('new market added')\n        pass\n\n    def remove_market(market) -&gt; None:\n        pass\n\n#...etc...\nframework = Flumine(client=client)\nframework.add_market_middleware(Middleware)```",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g5225cab87ed",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5225cab87ed197a04a4f61c14d29b44d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "Charlie 303",
            "display_name": "Charlie 303",
            "team": "T4G9NBD2M",
            "name": "charl303",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1607118966.312600",
        "parent_user_id": "UUCD6P13J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AuM=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In case it helps others, the following is a very basic way to add middleware:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "class Middleware:\n    def __init__(self, market):\n        pass\n   \n    def __call__(market) -> None:\n        pass\n    \n    def add_market(market) -> None:\n        print('new market added')\n        pass\n\n    def remove_market(market) -> None:\n        pass\n\n#...etc...\nframework = Flumine(client=client)\nframework.add_market_middleware(Middleware)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U4H19D1D2"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1607151463.317900",
        "client_msg_id": "FE93394C-5F81-4180-97DD-38937A994F05",
        "text": "Try it out, you need a volatile market like inplay but you often get matched at odds that you really shouldn’t based on Xm working 100%",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1607000675.287100",
        "parent_user_id": "U919M37DL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "L3i",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Try it out, you need a volatile market like inplay but you often get matched at odds that you really shouldn’t based on Xm working 100%"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U01CERWB7V3",
                    "U919M37DL"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1607151523.318400",
        "edited": {
            "user": "U4H19D1D2",
            "ts": "1607160381.000000"
        },
        "client_msg_id": "F7142474-10D8-45B7-A138-D43D8E829CE1",
        "text": "I will add that to the docs, best practice:\n\n```from flumine.markets.middleware import Middleware\n\nclass CustomMiddleware(Middleware):\n    def __call__(self, market) -&gt; None:\n        pass  # called on each MarketBook update\n\n    def add_market(self, market) -&gt; None:\n        print(\"market {0} added\".format(market.market_id))\n\n    def remove_market(self, market) -&gt; None:\n        print(\"market {0} removed\".format(market.market_id))```",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1607118966.312600",
        "parent_user_id": "UUCD6P13J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "L59KM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I will add that to the docs, best practice:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "from flumine.markets.middleware import Middleware\n\nclass CustomMiddleware(Middleware):\n    def __call__(self, market) -> None:\n        pass  # called on each MarketBook update\n\n    def add_market(self, market) -> None:\n        print(\"market {0} added\".format(market.market_id))\n\n    def remove_market(self, market) -> None:\n        print(\"market {0} removed\".format(market.market_id))"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "call_me_hand",
                "users": [
                    "U01CERWB7V3"
                ],
                "count": 1
            }
        ]
    }
]