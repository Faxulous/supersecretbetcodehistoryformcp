[
    {
        "text": "Anyone have an idea as to why the marketcatalogues returned by betfairlightweight have “None” in the event section?",
        "files": [
            {
                "id": "F04NFKLSP5J",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U04NFK6R39A",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "a53Y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Anyone have an idea as to why the marketcatalogues returned by betfairlightweight have “None” in the event section?"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1675758159.016399",
        "client_msg_id": "43a95788-7e40-4b94-bc3e-612d27d42e5b"
    },
    {
        "user": "U04NFK6R39A",
        "type": "message",
        "ts": "1675758177.703209",
        "client_msg_id": "a8bff761-1d9f-41ea-9571-8a6d67dacf9d",
        "text": "I’ve found this to occur with afew different queries and parameters, just seems like betfair isn’t sending back the full data?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "2eb10aa38cfa",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-07\/4763652911156_2eb10aa38cfab91d6065_72.png",
            "first_name": "Paras",
            "real_name": "Paras Stefanopoulos",
            "display_name": "Paras Stefanopoulos",
            "team": "T4G9NBD2M",
            "name": "stefanopoulos.paras",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MbKXM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’ve found this to occur with afew different queries and parameters, just seems like betfair isn’t sending back the full data?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1675758187.936749",
        "edited": {
            "user": "U4H19D1D2",
            "ts": "1675758200.000000"
        },
        "client_msg_id": "B2284797-3058-495A-A452-F65BE82B5E26",
        "text": "Because you haven’t asked for it ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZMr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Because you haven’t asked for it "
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U9JHLMZB4"
                ],
                "count": 1
            },
            {
                "name": "heart",
                "users": [
                    "U04NFK6R39A"
                ],
                "count": 1
            },
            {
                "name": "raised_hands",
                "users": [
                    "U01HQ97J5HA"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U04NFK6R39A",
        "type": "message",
        "ts": "1675758230.459779",
        "client_msg_id": "7e2553b2-fa5f-45e9-ad8e-3ab945ea9e81",
        "text": "Right, I’m an idiot",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "2eb10aa38cfa",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-07\/4763652911156_2eb10aa38cfab91d6065_72.png",
            "first_name": "Paras",
            "real_name": "Paras Stefanopoulos",
            "display_name": "Paras Stefanopoulos",
            "team": "T4G9NBD2M",
            "name": "stefanopoulos.paras",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "A1UM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Right, I’m an idiot"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "joy",
                "users": [
                    "U4H19D1D2"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U04NFK6R39A",
        "type": "message",
        "ts": "1675758233.028199",
        "client_msg_id": "d980be06-b2d7-49fd-adc9-21f29f9b3546",
        "text": "LFG lads",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "2eb10aa38cfa",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-07\/4763652911156_2eb10aa38cfab91d6065_72.png",
            "first_name": "Paras",
            "real_name": "Paras Stefanopoulos",
            "display_name": "Paras Stefanopoulos",
            "team": "T4G9NBD2M",
            "name": "stefanopoulos.paras",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vbVE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "LFG lads"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U9JHLMZB4",
        "type": "message",
        "ts": "1675760938.492949",
        "client_msg_id": "6207da45-1349-4728-83c4-0188fa7c0668",
        "text": "<@U04980ZT6UX> Apologies. Missed your follow up questions when you originally posted them. In case they're still relevant ... market.blotter.live_orders() will give you an iterable of the live orders for that market only, or if ypu're working in your strategy's process_orders() method, the list of orders passed into it will be filtered by the strategy and market combination, but will be all such orders, though easily filtered by OrderStatus.EXECUTABLE.\n\n<@U01D23DDMTQ> is right that to change price and size requires a cancel and new place as Betfair won't allow changing price and size in a replace. Personally I'd fire off the cancel as soon as I knew that I no longer wanted the bet and then watch the response (if working synchronously, or the order stream if working asynchronously) before placing the new order - which may be what he meant by implementing a wait queue.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g951ddcb43e7",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3951ddcb43e788a387d6daf330dad5ca.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0018-72.png",
            "first_name": "",
            "real_name": "Peter Coles",
            "display_name": "Peter",
            "team": "T4G9NBD2M",
            "name": "peter",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667689339.581529",
        "parent_user_id": "U04980ZT6UX",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yLw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U04980ZT6UX"
                            },
                            {
                                "type": "text",
                                "text": " Apologies. Missed your follow up questions when you originally posted them. In case they're still relevant ... market.blotter.live_orders() will give you an iterable of the live orders for that market only, or if ypu're working in your strategy's process_orders() method, the list of orders passed into it will be filtered by the strategy and market combination, but will be all such orders, though easily filtered by OrderStatus.EXECUTABLE.\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "U01D23DDMTQ"
                            },
                            {
                                "type": "text",
                                "text": " is right that to change price and size requires a cancel and new place as Betfair won't allow changing price and size in a replace. Personally I'd fire off the cancel as soon as I knew that I no longer wanted the bet and then watch the response (if working synchronously, or the order stream if working asynchronously) before placing the new order - which may be what he meant by implementing a wait queue."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01D23DDMTQ",
        "type": "message",
        "ts": "1675763355.882179",
        "edited": {
            "user": "U01D23DDMTQ",
            "ts": "1675763478.000000"
        },
        "client_msg_id": "a3cf8fe2-632b-40d6-87be-ad8c4d92f36d",
        "text": "Sorry a bit late back to this thread. Here's a rough outline of my approach. I make use of market context to cache values from previous check. FYI, I initialise this in middleware\n\nHere's actual code snippet - any IP removed :slightly_smiling_face:\n\nThis bit goes in _process_market_book_, _pr is new price\n\nif _pr != market.context['order_price'][runner.selection_id]: # market.context['order_price'][runner.selection_id] is existing target price for runner\n                        _sz = &lt;calculate new size based on _pr&gt; # there was some IP here!\n                        if _sz &gt; 0:\n                            market.context['order_price'][runner.selection_id] = _pr\n                            market.context['order_size'][runner.selection_id] = _sz\n                            market.context['create_order'][runner.selection_id] = True # This is a flag to help control cancel before create new order\n\nA bit later on in _process_market_book_\n\nfor runner in market_book.runners:\n            rc = self.get_runner_context(market.market_id, runner.selection_id, runner.handicap)\n            if market.context['create_order'][runner.selection_id] and not rc.executable_orders:\n                # flagged for create, no executable order\n                trade = Trade(market.market_id, runner.selection_id, handicap = runner.handicap, strategy = self)\n                order = trade.create_order(\n                    side = \"LAY\",\n                    order_type = LimitOrder(\n                        price = market.context['order_price'][runner.selection_id],\n                        size = market.context['order_size'][runner.selection_id],\n                        )\n                    )\n                market.place_order(order)\n                market.context['create_order'][runner.selection_id] = False\n\nAnd here's the magic in _process_orders_ I figured to handle state and wait for cancel\n\ndef process_orders(self, market, orders):\n        for order in orders:\n            rc = self.get_runner_context(market.market_id, order.selection_id, order.handicap)\n            if market.context['create_order'][order.selection_id] and rc.executable_orders:\n                # flagged for create, so need to cancel current before create new\n                if order.status == OrderStatus.EXECUTION_COMPLETE:\n                    market.context['create_order'][order.selection_id] = False\n                elif order.status == OrderStatus.EXECUTABLE:\n                    market.cancel_order(order)",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "5d6a9e5a85c0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-06-26\/2219792322468_5d6a9e5a85c01e3abc9e_72.png",
            "first_name": "Andrew",
            "real_name": "Andrew",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "agruskin",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667689339.581529",
        "parent_user_id": "U04980ZT6UX",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lDZ0O",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sorry a bit late back to this thread. Here's a rough outline of my approach. I make use of market context to cache values from previous check. FYI, I initialise this in middleware\n\nHere's actual code snippet - any IP removed "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": "\n\nThis bit goes in "
                            },
                            {
                                "type": "text",
                                "text": "process_market_book",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", _pr is new price\n\nif _pr != market.context['order_price'][runner.selection_id]: # market.context['order_price'][runner.selection_id] is existing target price for runner\n                        _sz = <calculate new size based on _pr> # there was some IP here!\n                        if _sz > 0:\n                            market.context['order_price'][runner.selection_id] = _pr\n                            market.context['order_size'][runner.selection_id] = _sz\n                            market.context['create_order'][runner.selection_id] = True # This is a flag to help control cancel before create new order\n\nA bit later on in "
                            },
                            {
                                "type": "text",
                                "text": "process_market_book",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\nfor runner in market_book.runners:\n            rc = self.get_runner_context(market.market_id, runner.selection_id, runner.handicap)\n            if market.context['create_order'][runner.selection_id] and not rc.executable_orders:\n                # flagged for create, no executable order\n                trade = Trade(market.market_id, runner.selection_id, handicap = runner.handicap, strategy = self)\n                order = trade.create_order(\n                    side = \"LAY\",\n                    order_type = LimitOrder(\n                        price = market.context['order_price'][runner.selection_id],\n                        size = market.context['order_size'][runner.selection_id],\n                        )\n                    )\n                market.place_order(order)\n                market.context['create_order'][runner.selection_id] = False\n\nAnd here's the magic in "
                            },
                            {
                                "type": "text",
                                "text": "process_orders",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " I figured to handle state and wait for cancel\n\ndef process_orders(self, market, orders):\n        for order in orders:\n            rc = self.get_runner_context(market.market_id, order.selection_id, order.handicap)\n            if market.context['create_order'][order.selection_id] and rc.executable_orders:\n                # flagged for create, so need to cancel current before create new\n                if order.status == OrderStatus.EXECUTION_COMPLETE:\n                    market.context['create_order'][order.selection_id] = False\n                elif order.status == OrderStatus.EXECUTABLE:\n                    market.cancel_order(order)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01D23DDMTQ",
        "type": "message",
        "ts": "1675763651.230569",
        "client_msg_id": "fa89f2f0-4dfe-4f22-bb7c-171893701cb7",
        "text": "Happy for any suggestions on improving this. I thought later to use runner context rather than how I cache runners in the market context, but haven't checked if that can work.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "5d6a9e5a85c0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-06-26\/2219792322468_5d6a9e5a85c01e3abc9e_72.png",
            "first_name": "Andrew",
            "real_name": "Andrew",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "agruskin",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667689339.581529",
        "parent_user_id": "U04980ZT6UX",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5Db+P",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Happy for any suggestions on improving this. I thought later to use runner context rather than how I cache runners in the market context, but haven't checked if that can work."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03N4QBJ0TV",
        "type": "message",
        "ts": "1675805913.836409",
        "client_msg_id": "c5a7f0a6-3091-4a86-a5a1-b97def8a4764",
        "text": "Evening all.  Was wondering if anyone can help me solve an issue with back testing a strat. The strat places a bet on a single runner before the race starts then is supposed to place a second bet at 60 seconds to the off if market.blotter.strategy_selection_order has a count greater than one. Which it should do as the first bet was placed successfully and shows as Execution complete. Bizarrely though the market.blotter.strategy_selection_order list turns to an empty list between 104-103 seconds to the off even though the market.blotter.orders list continues to contain the order. See logs attached. I have backtested this strat on 4 markets, 3 it works fine on. Its only this one market that I have seen this behaviour on.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g2c8538b47ad",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2c8538b47ad4bed6facbb148134bb486.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "Trex44",
            "real_name": "Trex44",
            "display_name": "Trex44",
            "team": "T4G9NBD2M",
            "name": "c.s.mpharm",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1675805913.836409",
        "reply_count": 10,
        "reply_users_count": 2,
        "latest_reply": "1675976486.512369",
        "reply_users": [
            "U03N4QBJ0TV",
            "U4H19D1D2"
        ],
        "replies": [
            {
                "user": "U03N4QBJ0TV",
                "ts": "1675805975.431669"
            },
            {
                "user": "U03N4QBJ0TV",
                "ts": "1675805983.393519"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1675843663.280869"
            },
            {
                "user": "U03N4QBJ0TV",
                "ts": "1675899143.371779"
            },
            {
                "user": "U03N4QBJ0TV",
                "ts": "1675899261.986869"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1675934282.188069"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1675934310.344319"
            },
            {
                "user": "U03N4QBJ0TV",
                "ts": "1675975611.154059"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1675976379.700159"
            },
            {
                "user": "U03N4QBJ0TV",
                "ts": "1675976486.512369"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1675976486.512369",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6X=VO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Evening all.  Was wondering if anyone can help me solve an issue with back testing a strat. The strat places a bet on a single runner before the race starts then is supposed to place a second bet at 60 seconds to the off if market.blotter.strategy_selection_order has a count greater than one. Which it should do as the first bet was placed successfully and shows as Execution complete. Bizarrely though the market.blotter.strategy_selection_order list turns to an empty list between 104-103 seconds to the off even though the market.blotter.orders list continues to contain the order. See logs attached. I have backtested this strat on 4 markets, 3 it works fine on. Its only this one market that I have seen this behaviour on."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03N4QBJ0TV",
        "type": "message",
        "ts": "1675805975.431669",
        "client_msg_id": "a6f42e64-1857-4d5a-8cbf-c9a92dd709af",
        "text": "```{\"asctime\": \"2023-02-07 21:17:54,969\", \"levelname\": \"INFO\", \"message\": \"Client added\", \"username\": \"72f36d32\", \"exchange\": \"Simulated\", \"betting_client\": null, \"current_transaction_count_total\": null, \"transaction_count_total\": null, \"trading_controls\": [], \"order_stream\": true, \"best_price_execution\": true, \"paper_trade\": false}\n{\"asctime\": \"2023-02-07 21:17:54,969\", \"levelname\": \"INFO\", \"message\": \"Adding market middleware &lt;flumine.markets.middleware.SimulatedMiddleware object at 0x7f61a0256740&gt;\"}\n{\"asctime\": \"2023-02-07 21:17:54,969\", \"levelname\": \"INFO\", \"message\": \"Adding client control MAX_TRANSACTION_COUNT\"}\n{\"asctime\": \"2023-02-07 21:17:54,970\", \"levelname\": \"INFO\", \"message\": \"Adding trading control ORDER_VALIDATION\"}\n{\"asctime\": \"2023-02-07 21:17:54,970\", \"levelname\": \"INFO\", \"message\": \"Adding trading control MARKET_VALIDATION\"}\n{\"asctime\": \"2023-02-07 21:17:54,970\", \"levelname\": \"INFO\", \"message\": \"Adding trading control STRATEGY_EXPOSURE\"}\n{\"asctime\": \"2023-02-07 21:17:54,970\", \"levelname\": \"INFO\", \"message\": \"Adding strategy LowestLayer\"}\n{\"asctime\": \"2023-02-07 21:17:54,971\", \"levelname\": \"INFO\", \"message\": \"Creating new HistoricalStream (1000) for strategy LowestLayer\", \"strategy\": \"LowestLayer\", \"stream_id\": 1000, \"market_filter\": \"\/home\/ubuntu\/Python_projects\/tmp\/races\/1.138465931\", \"event_id\": \"28531405\", \"event_processing\": false}\n{\"asctime\": \"2023-02-07 21:17:54,971\", \"levelname\": \"INFO\", \"message\": \"Starting flumine\", \"clients\": {\"Betfair\": {}, \"Simulated\": {\"72f36d32\": {\"username\": \"72f36d32\", \"exchange\": \"Simulated\", \"betting_client\": null, \"current_transaction_count_total\": 0, \"transaction_count_total\": 0, \"trading_controls\": [\"&lt;flumine.controls.clientcontrols.MaxTransactionCount object at 0x7f61a0256950&gt;\"], \"order_stream\": true, \"best_price_execution\": true, \"paper_trade\": false}}, \"BetConnect\": {}}, \"markets\": {\"market_count\": 0, \"open_market_count\": 0}, \"streams\": [\"&lt;HistoricalStream(HistoricalStream, initial daemon)&gt;\"], \"logging_controls\": [], \"threads\": [\"&lt;_MainThread(MainThread, started 140057390804992)&gt;\"]}\n{\"asctime\": \"2023-02-07 21:17:54,971\", \"levelname\": \"INFO\", \"message\": \"Client login\", \"username\": \"72f36d32\", \"exchange\": \"Simulated\", \"betting_client\": null, \"current_transaction_count_total\": 0, \"transaction_count_total\": 0, \"trading_controls\": [\"&lt;flumine.controls.clientcontrols.MaxTransactionCount object at 0x7f61a0256950&gt;\"], \"order_stream\": true, \"best_price_execution\": true, \"paper_trade\": false}\n{\"asctime\": \"2023-02-07 21:17:54,971\", \"levelname\": \"INFO\", \"message\": \"Client update account details\", \"username\": \"72f36d32\", \"exchange\": \"Simulated\", \"betting_client\": null, \"current_transaction_count_total\": 0, \"transaction_count_total\": 0, \"trading_controls\": [\"&lt;flumine.controls.clientcontrols.MaxTransactionCount object at 0x7f61a0256950&gt;\"], \"order_stream\": true, \"best_price_execution\": true, \"paper_trade\": false}\n{\"asctime\": \"2023-02-07 21:17:54,972\", \"levelname\": \"INFO\", \"message\": \"Starting historical market '\/home\/ubuntu\/Python_projects\/tmp\/races\/1.138465931'\", \"market\": \"\/home\/ubuntu\/Python_projects\/tmp\/races\/1.138465931\"}\n{\"asctime\": \"2023-02-07 21:17:54,972\", \"levelname\": \"INFO\", \"message\": \"[Register: 1000]: marketSubscription\"}\n{\"asctime\": \"2023-02-07 21:17:54,972\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: \\\"MarketStream\\\" created\"}\n{\"asctime\": \"2023-02-07 21:17:54,972\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.138465931 added, 1 markets in cache\"}\n{\"asctime\": \"2023-02-07 21:17:54,974\", \"levelname\": \"INFO\", \"message\": \"Adding: 1.138465931 to markets\"}\n{\"asctime\": \"2023-02-07 21:17:54,982\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.138465931 added, 1 markets in cache\"}\n{\"asctime\": \"2023-02-07 21:17:54,982\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.138465931 added, 1 markets in cache\"}\n{\"asctime\": \"2023-02-07 21:17:54,984\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.138465931 added, 1 markets in cache\"}\n{\"asctime\": \"2023-02-07 21:17:55,000\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.138465931 added, 1 markets in cache\"}\n{\"asctime\": \"2023-02-07 21:17:55,003\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.138465931 added, 1 markets in cache\"}\n{\"asctime\": \"2023-02-07 21:17:55,007\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.138465931 added, 1 markets in cache\"}\n{\"asctime\": \"2023-02-07 21:17:55,014\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.138465931 added, 1 markets in cache\"}\n{\"asctime\": \"2023-02-07 21:17:55,045\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.138465931 added, 1 markets in cache\"}\n{\"asctime\": \"2023-02-07 21:17:55,062\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.138465931 added, 1 markets in cache\"}\n{\"asctime\": \"2023-02-07 21:17:55,070\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.138465931 added, 1 markets in cache\"}\n{\"asctime\": \"2023-02-07 21:17:55,097\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.138465931 added, 1 markets in cache\"}\n{\"asctime\": \"2023-02-07 21:17:55,197\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.138465931 added, 1 markets in cache\"}\n{\"asctime\": \"2023-02-07 21:17:55,229\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.138465931 added, 1 markets in cache\"}\n{\"asctime\": \"2023-02-07 21:17:55,234\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.138465931 added, 1 markets in cache\"}\n{\"asctime\": \"2023-02-07 21:17:55,310\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.138465931 added, 1 markets in cache\"}\n{\"asctime\": \"2023-02-07 21:17:55,391\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.138465931 added, 1 markets in cache\"}\n{\"asctime\": \"2023-02-07 21:17:55,409\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.138465931 added, 1 markets in cache\"}```",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g2c8538b47ad",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2c8538b47ad4bed6facbb148134bb486.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "Trex44",
            "real_name": "Trex44",
            "display_name": "Trex44",
            "team": "T4G9NBD2M",
            "name": "c.s.mpharm",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1675805913.836409",
        "parent_user_id": "U03N4QBJ0TV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QLi",
                "elements": [
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "{\"asctime\": \"2023-02-07 21:17:54,969\", \"levelname\": \"INFO\", \"message\": \"Client added\", \"username\": \"72f36d32\", \"exchange\": \"Simulated\", \"betting_client\": null, \"current_transaction_count_total\": null, \"transaction_count_total\": null, \"trading_controls\": [], \"order_stream\": true, \"best_price_execution\": true, \"paper_trade\": false}\n{\"asctime\": \"2023-02-07 21:17:54,969\", \"levelname\": \"INFO\", \"message\": \"Adding market middleware <flumine.markets.middleware.SimulatedMiddleware object at 0x7f61a0256740>\"}\n{\"asctime\": \"2023-02-07 21:17:54,969\", \"levelname\": \"INFO\", \"message\": \"Adding client control MAX_TRANSACTION_COUNT\"}\n{\"asctime\": \"2023-02-07 21:17:54,970\", \"levelname\": \"INFO\", \"message\": \"Adding trading control ORDER_VALIDATION\"}\n{\"asctime\": \"2023-02-07 21:17:54,970\", \"levelname\": \"INFO\", \"message\": \"Adding trading control MARKET_VALIDATION\"}\n{\"asctime\": \"2023-02-07 21:17:54,970\", \"levelname\": \"INFO\", \"message\": \"Adding trading control STRATEGY_EXPOSURE\"}\n{\"asctime\": \"2023-02-07 21:17:54,970\", \"levelname\": \"INFO\", \"message\": \"Adding strategy LowestLayer\"}\n{\"asctime\": \"2023-02-07 21:17:54,971\", \"levelname\": \"INFO\", \"message\": \"Creating new HistoricalStream (1000) for strategy LowestLayer\", \"strategy\": \"LowestLayer\", \"stream_id\": 1000, \"market_filter\": \"\/home\/ubuntu\/Python_projects\/tmp\/races\/1.138465931\", \"event_id\": \"28531405\", \"event_processing\": false}\n{\"asctime\": \"2023-02-07 21:17:54,971\", \"levelname\": \"INFO\", \"message\": \"Starting flumine\", \"clients\": {\"Betfair\": {}, \"Simulated\": {\"72f36d32\": {\"username\": \"72f36d32\", \"exchange\": \"Simulated\", \"betting_client\": null, \"current_transaction_count_total\": 0, \"transaction_count_total\": 0, \"trading_controls\": [\"<flumine.controls.clientcontrols.MaxTransactionCount object at 0x7f61a0256950>\"], \"order_stream\": true, \"best_price_execution\": true, \"paper_trade\": false}}, \"BetConnect\": {}}, \"markets\": {\"market_count\": 0, \"open_market_count\": 0}, \"streams\": [\"<HistoricalStream(HistoricalStream, initial daemon)>\"], \"logging_controls\": [], \"threads\": [\"<_MainThread(MainThread, started 140057390804992)>\"]}\n{\"asctime\": \"2023-02-07 21:17:54,971\", \"levelname\": \"INFO\", \"message\": \"Client login\", \"username\": \"72f36d32\", \"exchange\": \"Simulated\", \"betting_client\": null, \"current_transaction_count_total\": 0, \"transaction_count_total\": 0, \"trading_controls\": [\"<flumine.controls.clientcontrols.MaxTransactionCount object at 0x7f61a0256950>\"], \"order_stream\": true, \"best_price_execution\": true, \"paper_trade\": false}\n{\"asctime\": \"2023-02-07 21:17:54,971\", \"levelname\": \"INFO\", \"message\": \"Client update account details\", \"username\": \"72f36d32\", \"exchange\": \"Simulated\", \"betting_client\": null, \"current_transaction_count_total\": 0, \"transaction_count_total\": 0, \"trading_controls\": [\"<flumine.controls.clientcontrols.MaxTransactionCount object at 0x7f61a0256950>\"], \"order_stream\": true, \"best_price_execution\": true, \"paper_trade\": false}\n{\"asctime\": \"2023-02-07 21:17:54,972\", \"levelname\": \"INFO\", \"message\": \"Starting historical market '\/home\/ubuntu\/Python_projects\/tmp\/races\/1.138465931'\", \"market\": \"\/home\/ubuntu\/Python_projects\/tmp\/races\/1.138465931\"}\n{\"asctime\": \"2023-02-07 21:17:54,972\", \"levelname\": \"INFO\", \"message\": \"[Register: 1000]: marketSubscription\"}\n{\"asctime\": \"2023-02-07 21:17:54,972\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: \\\"MarketStream\\\" created\"}\n{\"asctime\": \"2023-02-07 21:17:54,972\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.138465931 added, 1 markets in cache\"}\n{\"asctime\": \"2023-02-07 21:17:54,974\", \"levelname\": \"INFO\", \"message\": \"Adding: 1.138465931 to markets\"}\n{\"asctime\": \"2023-02-07 21:17:54,982\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.138465931 added, 1 markets in cache\"}\n{\"asctime\": \"2023-02-07 21:17:54,982\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.138465931 added, 1 markets in cache\"}\n{\"asctime\": \"2023-02-07 21:17:54,984\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.138465931 added, 1 markets in cache\"}\n{\"asctime\": \"2023-02-07 21:17:55,000\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.138465931 added, 1 markets in cache\"}\n{\"asctime\": \"2023-02-07 21:17:55,003\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.138465931 added, 1 markets in cache\"}\n{\"asctime\": \"2023-02-07 21:17:55,007\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.138465931 added, 1 markets in cache\"}\n{\"asctime\": \"2023-02-07 21:17:55,014\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.138465931 added, 1 markets in cache\"}\n{\"asctime\": \"2023-02-07 21:17:55,045\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.138465931 added, 1 markets in cache\"}\n{\"asctime\": \"2023-02-07 21:17:55,062\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.138465931 added, 1 markets in cache\"}\n{\"asctime\": \"2023-02-07 21:17:55,070\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.138465931 added, 1 markets in cache\"}\n{\"asctime\": \"2023-02-07 21:17:55,097\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.138465931 added, 1 markets in cache\"}\n{\"asctime\": \"2023-02-07 21:17:55,197\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.138465931 added, 1 markets in cache\"}\n{\"asctime\": \"2023-02-07 21:17:55,229\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.138465931 added, 1 markets in cache\"}\n{\"asctime\": \"2023-02-07 21:17:55,234\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.138465931 added, 1 markets in cache\"}\n{\"asctime\": \"2023-02-07 21:17:55,310\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.138465931 added, 1 markets in cache\"}\n{\"asctime\": \"2023-02-07 21:17:55,391\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.138465931 added, 1 markets in cache\"}\n{\"asctime\": \"2023-02-07 21:17:55,409\", \"levelname\": \"INFO\", \"message\": \"[MarketStream: 1000]: 1.138465931 added, 1 markets in cache\"}"
                            }
                        ],
                        "border": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "U03N4QBJ0TV",
        "type": "message",
        "ts": "1675805983.393519",
        "client_msg_id": "7f7014b7-f3be-4585-956f-51b1c0aa832e",
        "text": "```{\"asctime\": \"2023-02-07 21:17:57,216\", \"levelname\": \"INFO\", \"message\": \"Order status update: Pending\", \"market_id\": \"1.138465931\", \"selection_id\": 10200239, \"handicap\": 0, \"id\": \"138950974772156791\", \"customer_order_ref\": \"4d8a4a5a825e8-138950974772156791\", \"bet_id\": null, \"date_time_created\": \"2018-01-01 13:05:50.071000\", \"publish_time\": \"2018-01-01 13:05:50.071000\", \"market_version\": null, \"async\": false, \"trade\": {\"id\": \"e47d1976-a72c-11ed-93b3-3fe541d536d4\", \"strategy\": \"LowestLayer\", \"place_reset_seconds\": 0.0, \"reset_seconds\": 0.0, \"orders\": [\"138950974772156791\"], \"offset_orders\": [], \"notes\": \"\", \"market_notes\": null, \"status\": \"Live\", \"status_log\": \"\"}, \"order_type\": {\"order_type\": \"Limit\", \"price\": 3.7, \"size\": 5.0, \"persistence_type\": \"LAPSE\", \"time_in_force\": null, \"min_fill_size\": null, \"bet_target_type\": null, \"bet_target_size\": null, \"price_ladder_definition\": \"CLASSIC\"}, \"info\": {\"side\": \"LAY\", \"size_matched\": 0.0, \"size_remaining\": 5.0, \"size_cancelled\": 0.0, \"size_lapsed\": 0.0, \"size_voided\": 0.0, \"average_price_matched\": 0.0}, \"responses\": {\"date_time_placed\": null, \"elapsed_seconds_executable\": null}, \"runner_status\": null, \"status\": \"Pending\", \"status_log\": \"Pending\", \"violation_msg\": null, \"simulated\": {\"profit\": 0.0, \"piq\": 0.0, \"matched\": []}, \"notes\": \"0.9912\", \"market_notes\": null, \"client\": \"72f36d32\"}\n{\"asctime\": \"2023-02-07 21:17:57,216\", \"levelname\": \"INFO\", \"message\": \"1 order packages executed in transaction\", \"market_id\": \"1.138465931\", \"order_packages\": [{\"id\": \"e47d1978-a72c-11ed-93b3-3fe541d536d4\", \"client\": \"&lt;flumine.clients.simulatedclient.SimulatedClient object at 0x7f61a3560250&gt;\", \"market_id\": \"1.138465931\", \"orders\": [\"138950974772156791\"], \"order_count\": 1, \"package_type\": \"Place\", \"customer_strategy_ref\": \"ip-172-31-38-7\", \"bet_delay\": 0, \"market_version\": null, \"retry\": true, \"retry_count\": 0, \"async\": false}], \"transaction_id\": 1, \"client_username\": \"72f36d32\"}\nEntry Bet\n{\"asctime\": \"2023-02-07 21:17:57,217\", \"levelname\": \"INFO\", \"message\": \"Trade status update: Pending\", \"id\": \"e47d1976-a72c-11ed-93b3-3fe541d536d4\", \"strategy\": \"LowestLayer\", \"place_reset_seconds\": 0.0, \"reset_seconds\": 0.0, \"orders\": [\"138950974772156791\"], \"offset_orders\": [], \"notes\": \"\", \"market_notes\": \"3.7,3.8,3.7\", \"status\": \"Pending\", \"status_log\": \"Pending\"}\n{\"asctime\": \"2023-02-07 21:17:57,218\", \"levelname\": \"INFO\", \"message\": \"Order Place: SUCCESS\", \"bet_id\": null, \"order_id\": \"138950974772156791\", \"status\": \"SUCCESS\", \"error_code\": null}\n{\"asctime\": \"2023-02-07 21:17:57,218\", \"levelname\": \"INFO\", \"message\": \"Order status update: Executable\", \"market_id\": \"1.138465931\", \"selection_id\": 10200239, \"handicap\": 0, \"id\": \"138950974772156791\", \"customer_order_ref\": \"4d8a4a5a825e8-138950974772156791\", \"bet_id\": \"100000000001\", \"date_time_created\": \"2018-01-01 13:05:50.071000\", \"publish_time\": \"2018-01-01 13:05:50.071000\", \"market_version\": null, \"async\": false, \"trade\": {\"id\": \"e47d1976-a72c-11ed-93b3-3fe541d536d4\", \"strategy\": \"LowestLayer\", \"place_reset_seconds\": 0.0, \"reset_seconds\": 0.0, \"orders\": [\"138950974772156791\"], \"offset_orders\": [], \"notes\": \"\", \"market_notes\": \"3.7,3.8,3.7\", \"status\": \"Pending\", \"status_log\": \"Pending\"}, \"order_type\": {\"order_type\": \"Limit\", \"price\": 3.7, \"size\": 5.0, \"persistence_type\": \"LAPSE\", \"time_in_force\": null, \"min_fill_size\": null, \"bet_target_type\": null, \"bet_target_size\": null, \"price_ladder_definition\": \"CLASSIC\"}, \"info\": {\"side\": \"LAY\", \"size_matched\": 0.0, \"size_remaining\": 5.0, \"size_cancelled\": 0.0, \"size_lapsed\": 0.0, \"size_voided\": 0.0, \"average_price_matched\": 0.0}, \"responses\": {\"date_time_placed\": \"2018-01-01 13:05:50.294000\", \"elapsed_seconds_executable\": null}, \"runner_status\": null, \"status\": \"Executable\", \"status_log\": \"Pending, Executable\", \"violation_msg\": null, \"simulated\": {\"profit\": 0.0, \"piq\": 25.65, \"matched\": []}, \"notes\": \"0.9912\", \"market_notes\": \"3.7,3.8,3.7\", \"client\": \"72f36d32\"}\n{\"asctime\": \"2023-02-07 21:17:57,218\", \"levelname\": \"INFO\", \"message\": \"Trade status update: Live\", \"id\": \"e47d1976-a72c-11ed-93b3-3fe541d536d4\", \"strategy\": \"LowestLayer\", \"place_reset_seconds\": 0.0, \"reset_seconds\": 0.0, \"orders\": [\"138950974772156791\"], \"offset_orders\": [], \"notes\": \"\", \"market_notes\": \"3.7,3.8,3.7\", \"status\": \"Live\", \"status_log\": \"Pending, Live\"}\n{\"asctime\": \"2023-02-07 21:17:57,220\", \"levelname\": \"INFO\", \"message\": \"Order status update: Execution complete\", \"market_id\": \"1.138465931\", \"selection_id\": 10200239, \"handicap\": 0, \"id\": \"138950974772156791\", \"customer_order_ref\": \"4d8a4a5a825e8-138950974772156791\", \"bet_id\": \"100000000001\", \"date_time_created\": \"2018-01-01 13:05:50.071000\", \"publish_time\": \"2018-01-01 13:05:50.071000\", \"market_version\": null, \"async\": false, \"trade\": {\"id\": \"e47d1976-a72c-11ed-93b3-3fe541d536d4\", \"strategy\": \"LowestLayer\", \"place_reset_seconds\": 0.0, \"reset_seconds\": 0.0, \"orders\": [\"138950974772156791\"], \"offset_orders\": [], \"notes\": \"\", \"market_notes\": \"3.7,3.8,3.7\", \"status\": \"Live\", \"status_log\": \"Pending, Live\"}, \"order_type\": {\"order_type\": \"Limit\", \"price\": 3.7, \"size\": 5.0, \"persistence_type\": \"LAPSE\", \"time_in_force\": null, \"min_fill_size\": null, \"bet_target_type\": null, \"bet_target_size\": null, \"price_ladder_definition\": \"CLASSIC\"}, \"info\": {\"side\": \"LAY\", \"size_matched\": 5.0, \"size_remaining\": 0.0, \"size_cancelled\": 0.0, \"size_lapsed\": 0.0, \"size_voided\": 0.0, \"average_price_matched\": 3.7}, \"responses\": {\"date_time_placed\": \"2018-01-01 13:05:50.294000\", \"elapsed_seconds_executable\": null}, \"runner_status\": null, \"status\": \"Execution complete\", \"status_log\": \"Pending, Executable, Execution complete\", \"violation_msg\": null, \"simulated\": {\"profit\": 0.0, \"piq\": 0, \"matched\": [[1514811950696, 3.7, 5.0]]}, \"notes\": \"0.9912\", \"market_notes\": \"3.7,3.8,3.7\", \"client\": \"72f36d32\"}\n{\"asctime\": \"2023-02-07 21:17:57,220\", \"levelname\": \"INFO\", \"message\": \"Trade status update: Complete\", \"id\": \"e47d1976-a72c-11ed-93b3-3fe541d536d4\", \"strategy\": \"LowestLayer\", \"place_reset_seconds\": 0.0, \"reset_seconds\": 0.0, \"orders\": [\"138950974772156791\"], \"offset_orders\": [], \"notes\": \"\", \"market_notes\": \"3.7,3.8,3.7\", \"status\": \"Complete\", \"status_log\": \"Pending, Live, Complete\"}\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\nSECONDS TO START = 104.043\nstrategy_selection_orders[Order 100000000001: Execution complete]\nmarket.blotter.orders = [Order 100000000001: Execution complete]\nmarket status = OPEN\nrunner status = ACTIVE\nselection exposure = 13.5\nstats = {'matched_profit_if_win': -13.5, 'matched_profit_if_lose': 5.0, 'worst_potential_unmatched_profit_if_win': 0.0, 'worst_potential_unmatched_profit_if_lose': 0.0, 'worst_possible_profit_on_win': -13.5, 'worst_possible_profit_on_lose': 5.0}\nnumber of active runners = 8\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\nSECONDS TO START = 103.929\nstrategy_selection_orders[]\nmarket.blotter.orders = [Order 100000000001: Execution complete]\nmarket status = OPEN\nrunner status = ACTIVE\nselection exposure = -0.0\nstats = {'matched_profit_if_win': 0.0, 'matched_profit_if_lose': 0.0, 'worst_potential_unmatched_profit_if_win': 0.0, 'worst_potential_unmatched_profit_if_lose': 0.0, 'worst_possible_profit_on_win': 0.0, 'worst_possible_profit_on_lose': 0.0}\nnumber of active runners = 8\n{\"asctime\": \"2023-02-07 21:17:58,369\", \"levelname\": \"INFO\", \"message\": \"Market 1.138465931 closed\", \"market_id\": \"1.138465931\", \"event_id\": \"28531405\", \"event_type_id\": \"7\", \"event_name\": \"Sthl 1st Jan\", \"market_type\": \"WIN\", \"market_start_datetime\": \"2018-01-01 13:10:00\", \"country_code\": \"GB\", \"venue\": \"Southwell\", \"race_type\": null, \"orders_cleared\": [], \"market_cleared\": [], \"closed\": true}\n{\"asctime\": \"2023-02-07 21:17:58,370\", \"levelname\": \"INFO\", \"message\": \"Market cleared\", \"market_id\": \"1.138465931\", \"order_count\": 1, \"clients\": {\"Betfair\": {}, \"Simulated\": {\"72f36d32\": {\"username\": \"72f36d32\", \"exchange\": \"Simulated\", \"betting_client\": null, \"current_transaction_count_total\": 1, \"transaction_count_total\": 1, \"trading_controls\": [\"&lt;flumine.controls.clientcontrols.MaxTransactionCount object at 0x7f61a0256950&gt;\"], \"order_stream\": true, \"best_price_execution\": true, \"paper_trade\": false}}, \"BetConnect\": {}}, \"markets\": {\"market_count\": 1, \"open_market_count\": 0}, \"streams\": [\"&lt;HistoricalStream(HistoricalStream, initial daemon)&gt;\"], \"logging_controls\": [], \"threads\": [\"&lt;_MainThread(MainThread, started 140057390804992)&gt;\"]}\n{\"asctime\": \"2023-02-07 21:17:58,370\", \"levelname\": \"INFO\", \"message\": \"Market level cleared\", \"market_id\": \"1.138465931\", \"profit\": 5.0, \"bet_count\": 1}\n{\"asctime\": \"2023-02-07 21:17:58,371\", \"levelname\": \"INFO\", \"message\": \"Market closed\", \"market_id\": \"1.138465931\", \"clients\": {\"Betfair\": {}, \"Simulated\": {\"72f36d32\": {\"username\": \"72f36d32\", \"exchange\": \"Simulated\", \"betting_client\": null, \"current_transaction_count_total\": 1, \"transaction_count_total\": 1, \"trading_controls\": [\"&lt;flumine.controls.clientcontrols.MaxTransactionCount object at 0x7f61a0256950&gt;\"], \"order_stream\": true, \"best_price_execution\": true, \"paper_trade\": false}}, \"BetConnect\": {}}, \"markets\": {\"market_count\": 1, \"open_market_count\": 0}, \"streams\": [\"&lt;HistoricalStream(HistoricalStream, initial daemon)&gt;\"], \"logging_controls\": [], \"threads\": [\"&lt;_MainThread(MainThread, started 140057390804992)&gt;\"]}\n{\"asctime\": \"2023-02-07 21:17:58,371\", \"levelname\": \"INFO\", \"message\": \"Removing market 1.138465931\", \"clients\": {\"Betfair\": {}, \"Simulated\": {\"72f36d32\": {\"username\": \"72f36d32\", \"exchange\": \"Simulated\", \"betting_client\": null, \"current_transaction_count_total\": 1, \"transaction_count_total\": 1, \"trading_controls\": [\"&lt;flumine.controls.clientcontrols.MaxTransactionCount object at 0x7f61a0256950&gt;\"], \"order_stream\": true, \"best_price_execution\": true, \"paper_trade\": false}}, \"BetConnect\": {}}, \"markets\": {\"market_count\": 1, \"open_market_count\": 0}, \"streams\": [\"&lt;HistoricalStream(HistoricalStream, initial daemon)&gt;\"], \"logging_controls\": [], \"threads\": [\"&lt;_MainThread(MainThread, started 140057390804992)&gt;\"]}\n{\"asctime\": \"2023-02-07 21:17:58,371\", \"levelname\": \"INFO\", \"message\": \"Completed historical market '\/home\/ubuntu\/Python_projects\/tmp\/races\/1.138465931'\"}\n{\"asctime\": \"2023-02-07 21:17:58,371\", \"levelname\": \"INFO\", \"message\": \"Simulation complete\"}\n{\"asctime\": \"2023-02-07 21:17:58,371\", \"levelname\": \"INFO\", \"message\": \"Shutting down Execution (SimulatedExecution)\"}\n{\"asctime\": \"2023-02-07 21:17:58,372\", \"levelname\": \"INFO\", \"message\": \"Shutting down Execution (BetfairExecution)\"}\n{\"asctime\": \"2023-02-07 21:17:58,372\", \"levelname\": \"INFO\", \"message\": \"Client logout\", \"username\": \"72f36d32\", \"exchange\": \"Simulated\", \"betting_client\": null, \"current_transaction_count_total\": 1, \"transaction_count_total\": 1, \"trading_controls\": [\"&lt;flumine.controls.clientcontrols.MaxTransactionCount object at 0x7f61a0256950&gt;\"], \"order_stream\": true, \"best_price_execution\": true, \"paper_trade\": false}\n{\"asctime\": \"2023-02-07 21:17:58,372\", \"levelname\": \"INFO\", \"message\": \"Exiting flumine\", \"clients\": {\"Betfair\": {}, \"Simulated\": {\"72f36d32\": {\"username\": \"72f36d32\", \"exchange\": \"Simulated\", \"betting_client\": null, \"current_transaction_count_total\": 1, \"transaction_count_total\": 1, \"trading_controls\": [\"&lt;flumine.controls.clientcontrols.MaxTransactionCount object at 0x7f61a0256950&gt;\"], \"order_stream\": true, \"best_price_execution\": true, \"paper_trade\": false}}, \"BetConnect\": {}}, \"markets\": {\"market_count\": 1, \"open_market_count\": 0}, \"streams\": [\"&lt;HistoricalStream(HistoricalStream, initial daemon)&gt;\"], \"logging_controls\": [], \"threads\": [\"&lt;_MainThread(MainThread, started 140057390804992)&gt;\"]}\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\nProfit: 5.00\n10200239 2018-01-01 13:05:50.294000 OrderStatus.EXECUTION_COMPLETE 3.7 3.7 5.0 5.0```",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g2c8538b47ad",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2c8538b47ad4bed6facbb148134bb486.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "Trex44",
            "real_name": "Trex44",
            "display_name": "Trex44",
            "team": "T4G9NBD2M",
            "name": "c.s.mpharm",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1675805913.836409",
        "parent_user_id": "U03N4QBJ0TV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FuC",
                "elements": [
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "{\"asctime\": \"2023-02-07 21:17:57,216\", \"levelname\": \"INFO\", \"message\": \"Order status update: Pending\", \"market_id\": \"1.138465931\", \"selection_id\": 10200239, \"handicap\": 0, \"id\": \"138950974772156791\", \"customer_order_ref\": \"4d8a4a5a825e8-138950974772156791\", \"bet_id\": null, \"date_time_created\": \"2018-01-01 13:05:50.071000\", \"publish_time\": \"2018-01-01 13:05:50.071000\", \"market_version\": null, \"async\": false, \"trade\": {\"id\": \"e47d1976-a72c-11ed-93b3-3fe541d536d4\", \"strategy\": \"LowestLayer\", \"place_reset_seconds\": 0.0, \"reset_seconds\": 0.0, \"orders\": [\"138950974772156791\"], \"offset_orders\": [], \"notes\": \"\", \"market_notes\": null, \"status\": \"Live\", \"status_log\": \"\"}, \"order_type\": {\"order_type\": \"Limit\", \"price\": 3.7, \"size\": 5.0, \"persistence_type\": \"LAPSE\", \"time_in_force\": null, \"min_fill_size\": null, \"bet_target_type\": null, \"bet_target_size\": null, \"price_ladder_definition\": \"CLASSIC\"}, \"info\": {\"side\": \"LAY\", \"size_matched\": 0.0, \"size_remaining\": 5.0, \"size_cancelled\": 0.0, \"size_lapsed\": 0.0, \"size_voided\": 0.0, \"average_price_matched\": 0.0}, \"responses\": {\"date_time_placed\": null, \"elapsed_seconds_executable\": null}, \"runner_status\": null, \"status\": \"Pending\", \"status_log\": \"Pending\", \"violation_msg\": null, \"simulated\": {\"profit\": 0.0, \"piq\": 0.0, \"matched\": []}, \"notes\": \"0.9912\", \"market_notes\": null, \"client\": \"72f36d32\"}\n{\"asctime\": \"2023-02-07 21:17:57,216\", \"levelname\": \"INFO\", \"message\": \"1 order packages executed in transaction\", \"market_id\": \"1.138465931\", \"order_packages\": [{\"id\": \"e47d1978-a72c-11ed-93b3-3fe541d536d4\", \"client\": \"<flumine.clients.simulatedclient.SimulatedClient object at 0x7f61a3560250>\", \"market_id\": \"1.138465931\", \"orders\": [\"138950974772156791\"], \"order_count\": 1, \"package_type\": \"Place\", \"customer_strategy_ref\": \"ip-172-31-38-7\", \"bet_delay\": 0, \"market_version\": null, \"retry\": true, \"retry_count\": 0, \"async\": false}], \"transaction_id\": 1, \"client_username\": \"72f36d32\"}\nEntry Bet\n{\"asctime\": \"2023-02-07 21:17:57,217\", \"levelname\": \"INFO\", \"message\": \"Trade status update: Pending\", \"id\": \"e47d1976-a72c-11ed-93b3-3fe541d536d4\", \"strategy\": \"LowestLayer\", \"place_reset_seconds\": 0.0, \"reset_seconds\": 0.0, \"orders\": [\"138950974772156791\"], \"offset_orders\": [], \"notes\": \"\", \"market_notes\": \"3.7,3.8,3.7\", \"status\": \"Pending\", \"status_log\": \"Pending\"}\n{\"asctime\": \"2023-02-07 21:17:57,218\", \"levelname\": \"INFO\", \"message\": \"Order Place: SUCCESS\", \"bet_id\": null, \"order_id\": \"138950974772156791\", \"status\": \"SUCCESS\", \"error_code\": null}\n{\"asctime\": \"2023-02-07 21:17:57,218\", \"levelname\": \"INFO\", \"message\": \"Order status update: Executable\", \"market_id\": \"1.138465931\", \"selection_id\": 10200239, \"handicap\": 0, \"id\": \"138950974772156791\", \"customer_order_ref\": \"4d8a4a5a825e8-138950974772156791\", \"bet_id\": \"100000000001\", \"date_time_created\": \"2018-01-01 13:05:50.071000\", \"publish_time\": \"2018-01-01 13:05:50.071000\", \"market_version\": null, \"async\": false, \"trade\": {\"id\": \"e47d1976-a72c-11ed-93b3-3fe541d536d4\", \"strategy\": \"LowestLayer\", \"place_reset_seconds\": 0.0, \"reset_seconds\": 0.0, \"orders\": [\"138950974772156791\"], \"offset_orders\": [], \"notes\": \"\", \"market_notes\": \"3.7,3.8,3.7\", \"status\": \"Pending\", \"status_log\": \"Pending\"}, \"order_type\": {\"order_type\": \"Limit\", \"price\": 3.7, \"size\": 5.0, \"persistence_type\": \"LAPSE\", \"time_in_force\": null, \"min_fill_size\": null, \"bet_target_type\": null, \"bet_target_size\": null, \"price_ladder_definition\": \"CLASSIC\"}, \"info\": {\"side\": \"LAY\", \"size_matched\": 0.0, \"size_remaining\": 5.0, \"size_cancelled\": 0.0, \"size_lapsed\": 0.0, \"size_voided\": 0.0, \"average_price_matched\": 0.0}, \"responses\": {\"date_time_placed\": \"2018-01-01 13:05:50.294000\", \"elapsed_seconds_executable\": null}, \"runner_status\": null, \"status\": \"Executable\", \"status_log\": \"Pending, Executable\", \"violation_msg\": null, \"simulated\": {\"profit\": 0.0, \"piq\": 25.65, \"matched\": []}, \"notes\": \"0.9912\", \"market_notes\": \"3.7,3.8,3.7\", \"client\": \"72f36d32\"}\n{\"asctime\": \"2023-02-07 21:17:57,218\", \"levelname\": \"INFO\", \"message\": \"Trade status update: Live\", \"id\": \"e47d1976-a72c-11ed-93b3-3fe541d536d4\", \"strategy\": \"LowestLayer\", \"place_reset_seconds\": 0.0, \"reset_seconds\": 0.0, \"orders\": [\"138950974772156791\"], \"offset_orders\": [], \"notes\": \"\", \"market_notes\": \"3.7,3.8,3.7\", \"status\": \"Live\", \"status_log\": \"Pending, Live\"}\n{\"asctime\": \"2023-02-07 21:17:57,220\", \"levelname\": \"INFO\", \"message\": \"Order status update: Execution complete\", \"market_id\": \"1.138465931\", \"selection_id\": 10200239, \"handicap\": 0, \"id\": \"138950974772156791\", \"customer_order_ref\": \"4d8a4a5a825e8-138950974772156791\", \"bet_id\": \"100000000001\", \"date_time_created\": \"2018-01-01 13:05:50.071000\", \"publish_time\": \"2018-01-01 13:05:50.071000\", \"market_version\": null, \"async\": false, \"trade\": {\"id\": \"e47d1976-a72c-11ed-93b3-3fe541d536d4\", \"strategy\": \"LowestLayer\", \"place_reset_seconds\": 0.0, \"reset_seconds\": 0.0, \"orders\": [\"138950974772156791\"], \"offset_orders\": [], \"notes\": \"\", \"market_notes\": \"3.7,3.8,3.7\", \"status\": \"Live\", \"status_log\": \"Pending, Live\"}, \"order_type\": {\"order_type\": \"Limit\", \"price\": 3.7, \"size\": 5.0, \"persistence_type\": \"LAPSE\", \"time_in_force\": null, \"min_fill_size\": null, \"bet_target_type\": null, \"bet_target_size\": null, \"price_ladder_definition\": \"CLASSIC\"}, \"info\": {\"side\": \"LAY\", \"size_matched\": 5.0, \"size_remaining\": 0.0, \"size_cancelled\": 0.0, \"size_lapsed\": 0.0, \"size_voided\": 0.0, \"average_price_matched\": 3.7}, \"responses\": {\"date_time_placed\": \"2018-01-01 13:05:50.294000\", \"elapsed_seconds_executable\": null}, \"runner_status\": null, \"status\": \"Execution complete\", \"status_log\": \"Pending, Executable, Execution complete\", \"violation_msg\": null, \"simulated\": {\"profit\": 0.0, \"piq\": 0, \"matched\": [[1514811950696, 3.7, 5.0]]}, \"notes\": \"0.9912\", \"market_notes\": \"3.7,3.8,3.7\", \"client\": \"72f36d32\"}\n{\"asctime\": \"2023-02-07 21:17:57,220\", \"levelname\": \"INFO\", \"message\": \"Trade status update: Complete\", \"id\": \"e47d1976-a72c-11ed-93b3-3fe541d536d4\", \"strategy\": \"LowestLayer\", \"place_reset_seconds\": 0.0, \"reset_seconds\": 0.0, \"orders\": [\"138950974772156791\"], \"offset_orders\": [], \"notes\": \"\", \"market_notes\": \"3.7,3.8,3.7\", \"status\": \"Complete\", \"status_log\": \"Pending, Live, Complete\"}\n>>>>>>>>>>>>>>>>>\nSECONDS TO START = 104.043\nstrategy_selection_orders[Order 100000000001: Execution complete]\nmarket.blotter.orders = [Order 100000000001: Execution complete]\nmarket status = OPEN\nrunner status = ACTIVE\nselection exposure = 13.5\nstats = {'matched_profit_if_win': -13.5, 'matched_profit_if_lose': 5.0, 'worst_potential_unmatched_profit_if_win': 0.0, 'worst_potential_unmatched_profit_if_lose': 0.0, 'worst_possible_profit_on_win': -13.5, 'worst_possible_profit_on_lose': 5.0}\nnumber of active runners = 8\n>>>>>>>>>>>>>>>>>\nSECONDS TO START = 103.929\nstrategy_selection_orders[]\nmarket.blotter.orders = [Order 100000000001: Execution complete]\nmarket status = OPEN\nrunner status = ACTIVE\nselection exposure = -0.0\nstats = {'matched_profit_if_win': 0.0, 'matched_profit_if_lose': 0.0, 'worst_potential_unmatched_profit_if_win': 0.0, 'worst_potential_unmatched_profit_if_lose': 0.0, 'worst_possible_profit_on_win': 0.0, 'worst_possible_profit_on_lose': 0.0}\nnumber of active runners = 8\n{\"asctime\": \"2023-02-07 21:17:58,369\", \"levelname\": \"INFO\", \"message\": \"Market 1.138465931 closed\", \"market_id\": \"1.138465931\", \"event_id\": \"28531405\", \"event_type_id\": \"7\", \"event_name\": \"Sthl 1st Jan\", \"market_type\": \"WIN\", \"market_start_datetime\": \"2018-01-01 13:10:00\", \"country_code\": \"GB\", \"venue\": \"Southwell\", \"race_type\": null, \"orders_cleared\": [], \"market_cleared\": [], \"closed\": true}\n{\"asctime\": \"2023-02-07 21:17:58,370\", \"levelname\": \"INFO\", \"message\": \"Market cleared\", \"market_id\": \"1.138465931\", \"order_count\": 1, \"clients\": {\"Betfair\": {}, \"Simulated\": {\"72f36d32\": {\"username\": \"72f36d32\", \"exchange\": \"Simulated\", \"betting_client\": null, \"current_transaction_count_total\": 1, \"transaction_count_total\": 1, \"trading_controls\": [\"<flumine.controls.clientcontrols.MaxTransactionCount object at 0x7f61a0256950>\"], \"order_stream\": true, \"best_price_execution\": true, \"paper_trade\": false}}, \"BetConnect\": {}}, \"markets\": {\"market_count\": 1, \"open_market_count\": 0}, \"streams\": [\"<HistoricalStream(HistoricalStream, initial daemon)>\"], \"logging_controls\": [], \"threads\": [\"<_MainThread(MainThread, started 140057390804992)>\"]}\n{\"asctime\": \"2023-02-07 21:17:58,370\", \"levelname\": \"INFO\", \"message\": \"Market level cleared\", \"market_id\": \"1.138465931\", \"profit\": 5.0, \"bet_count\": 1}\n{\"asctime\": \"2023-02-07 21:17:58,371\", \"levelname\": \"INFO\", \"message\": \"Market closed\", \"market_id\": \"1.138465931\", \"clients\": {\"Betfair\": {}, \"Simulated\": {\"72f36d32\": {\"username\": \"72f36d32\", \"exchange\": \"Simulated\", \"betting_client\": null, \"current_transaction_count_total\": 1, \"transaction_count_total\": 1, \"trading_controls\": [\"<flumine.controls.clientcontrols.MaxTransactionCount object at 0x7f61a0256950>\"], \"order_stream\": true, \"best_price_execution\": true, \"paper_trade\": false}}, \"BetConnect\": {}}, \"markets\": {\"market_count\": 1, \"open_market_count\": 0}, \"streams\": [\"<HistoricalStream(HistoricalStream, initial daemon)>\"], \"logging_controls\": [], \"threads\": [\"<_MainThread(MainThread, started 140057390804992)>\"]}\n{\"asctime\": \"2023-02-07 21:17:58,371\", \"levelname\": \"INFO\", \"message\": \"Removing market 1.138465931\", \"clients\": {\"Betfair\": {}, \"Simulated\": {\"72f36d32\": {\"username\": \"72f36d32\", \"exchange\": \"Simulated\", \"betting_client\": null, \"current_transaction_count_total\": 1, \"transaction_count_total\": 1, \"trading_controls\": [\"<flumine.controls.clientcontrols.MaxTransactionCount object at 0x7f61a0256950>\"], \"order_stream\": true, \"best_price_execution\": true, \"paper_trade\": false}}, \"BetConnect\": {}}, \"markets\": {\"market_count\": 1, \"open_market_count\": 0}, \"streams\": [\"<HistoricalStream(HistoricalStream, initial daemon)>\"], \"logging_controls\": [], \"threads\": [\"<_MainThread(MainThread, started 140057390804992)>\"]}\n{\"asctime\": \"2023-02-07 21:17:58,371\", \"levelname\": \"INFO\", \"message\": \"Completed historical market '\/home\/ubuntu\/Python_projects\/tmp\/races\/1.138465931'\"}\n{\"asctime\": \"2023-02-07 21:17:58,371\", \"levelname\": \"INFO\", \"message\": \"Simulation complete\"}\n{\"asctime\": \"2023-02-07 21:17:58,371\", \"levelname\": \"INFO\", \"message\": \"Shutting down Execution (SimulatedExecution)\"}\n{\"asctime\": \"2023-02-07 21:17:58,372\", \"levelname\": \"INFO\", \"message\": \"Shutting down Execution (BetfairExecution)\"}\n{\"asctime\": \"2023-02-07 21:17:58,372\", \"levelname\": \"INFO\", \"message\": \"Client logout\", \"username\": \"72f36d32\", \"exchange\": \"Simulated\", \"betting_client\": null, \"current_transaction_count_total\": 1, \"transaction_count_total\": 1, \"trading_controls\": [\"<flumine.controls.clientcontrols.MaxTransactionCount object at 0x7f61a0256950>\"], \"order_stream\": true, \"best_price_execution\": true, \"paper_trade\": false}\n{\"asctime\": \"2023-02-07 21:17:58,372\", \"levelname\": \"INFO\", \"message\": \"Exiting flumine\", \"clients\": {\"Betfair\": {}, \"Simulated\": {\"72f36d32\": {\"username\": \"72f36d32\", \"exchange\": \"Simulated\", \"betting_client\": null, \"current_transaction_count_total\": 1, \"transaction_count_total\": 1, \"trading_controls\": [\"<flumine.controls.clientcontrols.MaxTransactionCount object at 0x7f61a0256950>\"], \"order_stream\": true, \"best_price_execution\": true, \"paper_trade\": false}}, \"BetConnect\": {}}, \"markets\": {\"market_count\": 1, \"open_market_count\": 0}, \"streams\": [\"<HistoricalStream(HistoricalStream, initial daemon)>\"], \"logging_controls\": [], \"threads\": [\"<_MainThread(MainThread, started 140057390804992)>\"]}\n>>>>>>>>>>>>>>>>>>>>>>\nProfit: 5.00\n10200239 2018-01-01 13:05:50.294000 OrderStatus.EXECUTION_COMPLETE 3.7 3.7 5.0 5.0"
                            }
                        ],
                        "border": 0
                    }
                ]
            }
        ]
    }
]