[
    {
        "user": "U059W9V61QC",
        "type": "message",
        "ts": "1690063940.705629",
        "client_msg_id": "dad7d995-635f-4fb3-80c2-60d6a289b1e0",
        "text": "Hello everyone !! I'm working on the automated betting process and I would like to know if there is some place where I can get a collection of all runner names for all markets. For instance, for market OVER_UNDER_25 there are two runners (over and under), but I would like to know how betfair identifies them (their name) , and this for all the markets.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb56c245a46c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b56c245a46cb73df572265c933464962.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0007-72.png",
            "first_name": "Alejandro",
            "real_name": "Alejandro Pablos S치nchez",
            "display_name": "Alejandro Pablos S치nchez",
            "team": "T4G9NBD2M",
            "name": "alejandropablos",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1690063940.705629",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1690106908.263989",
        "reply_users": [
            "UFTBRB3F1"
        ],
        "replies": [
            {
                "user": "UFTBRB3F1",
                "ts": "1690106908.263989"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "L3q",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hello everyone !! I'm working on the automated betting process and I would like to know if there is some place where I can get a collection of all runner names for all markets. For instance, for market OVER_UNDER_25 there are two runners (over and under), but I would like to know how betfair identifies them (their name) , and this for all the markets."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U059W9V61QC",
        "type": "message",
        "ts": "1690064002.341959",
        "client_msg_id": "046c90d1-0bfe-4c10-af2b-528c3f66b2a7",
        "text": "I guess I could do this by looping through all the markets and saving somewhere all runner names in each of the markets but idk if this is the best solution, i don't think so. If anyone could help, it would be great !! Thanks to everyone :wink:",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb56c245a46c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b56c245a46cb73df572265c933464962.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0007-72.png",
            "first_name": "Alejandro",
            "real_name": "Alejandro Pablos S치nchez",
            "display_name": "Alejandro Pablos S치nchez",
            "team": "T4G9NBD2M",
            "name": "alejandropablos",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Rx3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I guess I could do this by looping through all the markets and saving somewhere all runner names in each of the markets but idk if this is the best solution, i don't think so. If anyone could help, it would be great !! Thanks to everyone "
                            },
                            {
                                "type": "emoji",
                                "name": "wink",
                                "unicode": "1f609"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "Hey guys, I hope you are having a great weekend.\nI was testing the example \"examplestreaming.py\" in the betfairlightweight library (<https:\/\/github.com\/betcode-org\/betfair\/blob\/master\/examples\/examplestreaming.py>). After running the script, I saw in the console that the function _on_status() on the Listener is responsible for printing in the console the message in the following image:\nMy doubt is:\nWhy have TWO MarketStreams been created and why is this happening, or am I wrong in interpreting that two MarketStreams are being created?\nOnly one MarketStream should be created.",
        "files": [
            {
                "id": "F05HW2JEH1D",
                "mode": "hidden_by_limit"
            },
            {
                "id": "F05K0AABKNU",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U053A382VFX",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jc3hh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hey guys, I hope you are having a great weekend.\nI was testing the example \"examplestreaming.py\" in the betfairlightweight library ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/betcode-org\/betfair\/blob\/master\/examples\/examplestreaming.py"
                            },
                            {
                                "type": "text",
                                "text": "). After running the script, I saw in the console that the function _on_status() on the Listener is responsible for printing in the console the message in the following image:\nMy doubt is:\nWhy have TWO MarketStreams been created and why is this happening, or am I wrong in interpreting that two MarketStreams are being created?\nOnly one MarketStream should be created."
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1690068811.553589",
        "edited": {
            "user": "U053A382VFX",
            "ts": "1690077434.000000"
        },
        "client_msg_id": "797b6416-1529-4e18-9987-098ed6f7fe82",
        "thread_ts": "1690068811.553589",
        "reply_count": 2,
        "reply_users_count": 1,
        "latest_reply": "1691291747.953609",
        "reply_users": [
            "U053A382VFX"
        ],
        "replies": [
            {
                "user": "U053A382VFX",
                "ts": "1691291279.675199"
            },
            {
                "user": "U053A382VFX",
                "ts": "1691291747.953609"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "id": 1,
                "footer_icon": "https:\/\/slack.github.com\/static\/img\/favicon-neutral.png",
                "color": "24292f",
                "bot_id": "B021ZJYSBMW",
                "app_unfurl_url": "https:\/\/github.com\/betcode-org\/betfair\/blob\/master\/examples\/examplestreaming.py",
                "is_app_unfurl": true,
                "app_id": "A01BP7R4KNY",
                "fallback": "<https:\/\/github.com\/betcode-org\/betfair\/blob\/master\/examples\/examplestreaming.py | examplestreaming.py>",
                "text": "```\nimport logging\nimport queue\nimport threading\n\nimport betfairlightweight\nfrom betfairlightweight.filters import (\n    streaming_market_filter,\n    streaming_market_data_filter,\n)\n\n\n# setup logging\nlogging.basicConfig(level=<http:\/\/logging.INFO|logging.INFO>)  # change to DEBUG to see log all updates\n\n# create trading instance (app key must be activated for streaming)\ntrading = betfairlightweight.APIClient(\"username\", \"password\", app_key=\"appKey\")\n\n# login\ntrading.login()\n\n# create queue\noutput_queue = queue.Queue()\n\n# create stream listener\nlistener = betfairlightweight.StreamListener(output_queue=output_queue)\n\n# create stream\nstream = trading.streaming.create_stream(listener=listener)\n\n# create filters (GB WIN racing)\nmarket_filter = streaming_market_filter(\n    event_type_ids=[\"7\"], country_codes=[\"GB\"], market_types=[\"WIN\"]\n)\nmarket_data_filter = streaming_market_data_filter(\n    fields=[\"EX_BEST_OFFERS\", \"EX_MARKET_DEF\"], ladder_levels=3\n)\n\n# subscribe\nstreaming_unique_id = stream.subscribe_to_markets(\n    market_filter=market_filter,\n    market_data_filter=market_data_filter,\n    conflate_ms=1000,  # send update every 1000ms\n)\n\n# start stream in a new thread (in production would need err handling)\nt = threading.Thread(target=stream.start, daemon=True)\nt.start()\n\n\"\"\"\nData can also be accessed by using the snap function in the listener, e.g:\n\n    market_books = listener.snap(\n        market_ids=[1.12345323]\n    )\n\nErrors need to be caught at stream.start, resubscribe can then be used to\nprevent full image being sent, e.g:\n\n    streaming_unique_id = stream.subscribe_to_markets(\n        market_filter=market_filter,\n        market_data_filter=market_data_filter,\n        conflate_ms=1000,  # send update every 1000ms\n        initial_clk=listener.initial_clk,\n        clk=listener.clk,\n    )\n\nThe streaming unique id is returned in the market book which allows multiple\nstreams to be differentiated if multiple streams feed into the same queue.\n\"\"\"\n\n# check for updates in output queue\nwhile True:\n    market_books = output_queue.get()\n    print(market_books)\n\n    for market_book in market_books:\n        print(\n            market_book,\n            market_book.streaming_unique_id,  # unique id of stream (returned from subscribe request)\n            market_book.streaming_update,  # json update received\n            market_book.market_definition,  # streaming definition, similar to catalogue request\n            market_book.publish_time,  # betfair publish time of update\n        )\n\n```",
                "title": "<https:\/\/github.com\/betcode-org\/betfair\/blob\/master\/examples\/examplestreaming.py | examplestreaming.py>",
                "footer": "<https:\/\/github.com\/betcode-org\/betfair|betcode-org\/betfair>",
                "mrkdwn_in": [
                    "text"
                ]
            }
        ]
    },
    {
        "user": "U053A382VFX",
        "type": "message",
        "ts": "1690076965.763649",
        "edited": {
            "user": "U053A382VFX",
            "ts": "1690077553.000000"
        },
        "client_msg_id": "4d74d7f1-c153-4c1a-b325-c874fe8b69da",
        "text": "<@UPMUFSGCR> How can I record the data for $5 per month? Is it a third-party service?  or using Flumine?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "7d61534a710b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-14\/5138741711936_7d61534a710b0eb4f96f_72.jpg",
            "first_name": "Felix",
            "real_name": "Felix Vasquez",
            "display_name": "Felix Vasquez",
            "team": "T4G9NBD2M",
            "name": "felixevr.dev",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1689969424.790399",
        "parent_user_id": "UPMUFSGCR",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kNy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UPMUFSGCR"
                            },
                            {
                                "type": "text",
                                "text": " How can I record the data for $5 per month? Is it a third-party service?  or using Flumine?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "Guys, please another question:\nI am modifying the logging message in the function `_process()` of the `MarketStream` class in the betfairlightweigth library (below).\nThe original message in the function is `\"[%s: %s]: %s added, %s markets in cache\"` and I modified it to `\"[%s: %s]: %s added, %s markets in cache (MY SELF)\"`.\nThe problem is that after making the changes, the Console doesn't show the new message, it keeps printing the original message.\n\n```def _process(self, data: list, publish_time: int) -&gt; bool: \n        caches, img = [], False\n        for market_book in data:\n            market_id = market_book[\"id\"]\n            full_image = market_book.get(\"img\", False)\n            market_book_cache = self._caches.get(market_id)\n\n            if (\n                full_image or market_book_cache is None \n            ):  # historic data does not contain img\n                img = True\n                if \"marketDefinition\" not in market_book:\n                    logger.warning(\n                        \"[%s: %s]: Missing marketDefinition on market %s resulting \"\n                        \"in potential missing data in the MarketBook (make sure \"\n                        \"EX_MARKET_DEF is requested)\"\n                        % (self, self.unique_id, market_id)\n                    )\n                market_book_cache = MarketBookCache(\n                    market_id,\n                    publish_time,\n                    self._lightweight,\n                    self._calculate_market_tv,\n                    self._cumulative_runner_tv,\n                )\n                self._caches[market_id] = market_book_cache\n                logger.info(\n                    \"[%s: %s]: %s added, %s markets in cache (MY SELF)\"\n                    % (self, self.unique_id, market_id, len(self._caches))\n                )\n            market_book_cache.update_cache(market_book, publish_time, True)\n            caches.append(market_book_cache)\n            self._updates_processed += 1\n        self.on_process(caches)\n        return img```\nBelow is the message in the console without reflecting the changes made in the code:\n\n```INFO:betfairlightweight.streaming.stream:[MarketStream: 1]: 1.216273367 added, 1 markets in cache\nINFO:betfairlightweight.streaming.stream:[MarketStream: 1]: 1.215746166 added, 2 markets in cache\nINFO:betfairlightweight.streaming.stream:[MarketStream: 1]: 1.216265892 added, 3 markets in cache\nINFO:betfairlightweight.streaming.stream:[MarketStream: 1]: 3 mc added```\nWhat could be happening?\nThanks for your help!",
        "files": [
            {
                "id": "F05JATV3E02",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U053A382VFX",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QU8nt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Guys, please another question:\nI am modifying the logging message in the function "
                            },
                            {
                                "type": "text",
                                "text": "_process()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " of the "
                            },
                            {
                                "type": "text",
                                "text": "MarketStream ",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "class in the betfairlightweigth library (below).\nThe original message in the function is "
                            },
                            {
                                "type": "text",
                                "text": "\"[%s: %s]: %s added, %s markets in cache\"",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and I modified it to "
                            },
                            {
                                "type": "text",
                                "text": "\"[%s: %s]: %s added, %s markets in cache (MY SELF)\"",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ".\nThe problem is that after making the changes, the Console doesn't show the new message, it keeps printing the original message.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "def _process(self, data: list, publish_time: int) -> bool: \n        caches, img = [], False\n        for market_book in data:\n            market_id = market_book[\"id\"]\n            full_image = market_book.get(\"img\", False)\n            market_book_cache = self._caches.get(market_id)\n\n            if (\n                full_image or market_book_cache is None \n            ):  # historic data does not contain img\n                img = True\n                if \"marketDefinition\" not in market_book:\n                    logger.warning(\n                        \"[%s: %s]: Missing marketDefinition on market %s resulting \"\n                        \"in potential missing data in the MarketBook (make sure \"\n                        \"EX_MARKET_DEF is requested)\"\n                        % (self, self.unique_id, market_id)\n                    )\n                market_book_cache = MarketBookCache(\n                    market_id,\n                    publish_time,\n                    self._lightweight,\n                    self._calculate_market_tv,\n                    self._cumulative_runner_tv,\n                )\n                self._caches[market_id] = market_book_cache\n                logger.info(\n                    \"[%s: %s]: %s added, %s markets in cache (MY SELF)\"\n                    % (self, self.unique_id, market_id, len(self._caches))\n                )\n            market_book_cache.update_cache(market_book, publish_time, True)\n            caches.append(market_book_cache)\n            self._updates_processed += 1\n        self.on_process(caches)\n        return img"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nBelow is the message in the console without reflecting the changes made in the code:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "INFO:betfairlightweight.streaming.stream:[MarketStream: 1]: 1.216273367 added, 1 markets in cache\nINFO:betfairlightweight.streaming.stream:[MarketStream: 1]: 1.215746166 added, 2 markets in cache\nINFO:betfairlightweight.streaming.stream:[MarketStream: 1]: 1.216265892 added, 3 markets in cache\nINFO:betfairlightweight.streaming.stream:[MarketStream: 1]: 3 mc added"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nWhat could be happening?\nThanks for your help!"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1690089531.891199",
        "client_msg_id": "7e4fcdc0-440a-4ab5-b3f8-74ac59880c24",
        "thread_ts": "1690089531.891199",
        "reply_count": 6,
        "reply_users_count": 2,
        "latest_reply": "1691052144.076869",
        "reply_users": [
            "U4H19D1D2",
            "U053A382VFX"
        ],
        "replies": [
            {
                "user": "U4H19D1D2",
                "ts": "1690182895.809919"
            },
            {
                "user": "U053A382VFX",
                "ts": "1690247161.278019"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1690263946.307769"
            },
            {
                "user": "U053A382VFX",
                "ts": "1691028414.653159"
            },
            {
                "user": "U053A382VFX",
                "ts": "1691028641.845899"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1691052144.076869"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1691052144.076869"
    }
]