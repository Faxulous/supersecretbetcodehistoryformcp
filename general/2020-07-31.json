[
    {
        "user": "UUCD6P13J",
        "type": "message",
        "ts": "1596180657.469900",
        "client_msg_id": "1244f2c9-ee5a-454a-9cde-622272d18b2c",
        "text": "what's the best way to also record the market catalogue? in a way where it's also possible to add the file to the HistoricalStream.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g6898272ab81",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6898272ab810e419c2c9ca9af1e53da8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0012-72.png",
            "first_name": "Lee",
            "real_name": "Lee U",
            "display_name": "Lee",
            "team": "T4G9NBD2M",
            "name": "lunswor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YE8V",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "what's the best way to also record the market catalogue? in a way where it's also possible to add the file to the HistoricalStream."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1596181390.470300",
        "client_msg_id": "57fde2de-71d0-4702-9928-611d2234a08a",
        "text": "How generally are you talking? Just poll it every X minutes and upsert into a database",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/QSS\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "How generally are you talking? Just poll it every X minutes and upsert into a database"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUCD6P13J",
        "type": "message",
        "ts": "1596181810.474400",
        "edited": {
            "user": "UUCD6P13J",
            "ts": "1596201043.000000"
        },
        "client_msg_id": "c4cf7b0f-0978-4bce-80b9-71d50e2fcedb",
        "text": "Using flumine. There is already a poll worker which gets the market catalogue. Ideally i'd like to dump that data to a file in a similar way it does with the market_book and load it in on the historical stream. I'm also assuming that's the idea\/plan <@U4H19D1D2> had.\nI could save it to a db but seems like it’s added to the market book for a reason",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g6898272ab81",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6898272ab810e419c2c9ca9af1e53da8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0012-72.png",
            "first_name": "Lee",
            "real_name": "Lee U",
            "display_name": "Lee",
            "team": "T4G9NBD2M",
            "name": "lunswor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dElU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Using flumine. There is already a poll worker which gets the market catalogue. Ideally i'd like to dump that data to a file in a similar way it does with the market_book and load it in on the historical stream. I'm also assuming that's the idea\/plan "
                            },
                            {
                                "type": "user",
                                "user_id": "U4H19D1D2"
                            },
                            {
                                "type": "text",
                                "text": " had.\n"
                            },
                            {
                                "type": "text",
                                "text": "I could save it to a db but seems like it’s added to the market book for a reason"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "channel_join",
        "user": "U0182LP1TT4",
        "text": "<@U0182LP1TT4> has joined the channel",
        "type": "message",
        "ts": "1596204528.474800"
    },
    {
        "subtype": "channel_join",
        "user": "U018G63JX09",
        "text": "<@U018G63JX09> has joined the channel",
        "type": "message",
        "ts": "1596228533.475000"
    },
    {
        "user": "U016TGY3676",
        "type": "message",
        "ts": "1596237464.475100",
        "edited": {
            "user": "U016TGY3676",
            "ts": "1596238009.000000"
        },
        "client_msg_id": "084ce5bd-2966-4812-91e9-894208cae354",
        "text": "True to my word...\nI now have GitHub setup with a private repo. As you suggested, doing minor edits in the browser is fine for those occasional quick fixes. Regarding deployment on vps, I would prefer to only get the latest source when a bot is (re)started. The VPS is purely a deployment machine, so all edits will be done externally.\nSo I created a SSH key and loaded it into GitHub. I then ran a git clone from the VPS to download my source code ready for deployment. Bot deployed, slippers fitted, scrumpy poured. All good so far...\nFollowing a new commit, I decide to restart a bot. Git clone fails due to folder existing already, so I delete the folder, git clone and start the bot.\nIt's all working as expected, however the git clone over ssh feels a bit hacky, particularly having to delete the local folder in order to allow a clone. Also, having to start ssh-agent service and then adding the key in order to connect to GitHub feels like a workaround given that I normally create a SSH config file and simply do \"ssh lightsail\" to gain access to the server.\n\nIs there a nicer way of doing this?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g6a681220e11",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6a681220e11c1a2ed3685375d658dadb.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "",
            "real_name": "birchy",
            "display_name": "birchy",
            "team": "T4G9NBD2M",
            "name": "birchy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595781184.321200",
        "parent_user_id": "U016TGY3676",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xr7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "True to my word...\nI now have GitHub setup with a private repo. As you suggested, doing minor edits in the browser is fine for those occasional quick fixes. Regarding deployment on vps, I would prefer to only get the latest source when a bot is (re)started. The VPS is purely a deployment machine, so all edits will be done externally.\nSo I created a SSH key and loaded it into GitHub. I then ran a git clone from the VPS to download my source code ready for deployment. Bot deployed, slippers fitted, scrumpy poured. All good so far...\nFollowing a new commit, I decide to restart a bot. Git clone fails due to folder existing already, so I delete the folder, git clone and start the bot.\nIt's all working as expected, however the git clone over ssh feels a bit hacky, particularly having to delete the local folder in order to allow a clone. Also, having to start ssh-agent service and then adding the key in order to connect to GitHub feels like a workaround given that I normally create a SSH config file and simply do \"ssh lightsail\" to gain access to the server.\n\nIs there a nicer way of doing this?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1596262904.475500",
        "edited": {
            "user": "UBS7QANF3",
            "ts": "1596262953.000000"
        },
        "client_msg_id": "c7e4c579-382b-45a3-a04a-0cd437e05976",
        "text": "Mate just do `git pull` instead of delete + `git clone`. Specifically, _inside_ the cloned folder run `git pull` with no other arguments",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595781184.321200",
        "parent_user_id": "U016TGY3676",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "o72n",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Mate just do "
                            },
                            {
                                "type": "text",
                                "text": "git pull",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " instead of delete + "
                            },
                            {
                                "type": "text",
                                "text": "git clone",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". Specifically, "
                            },
                            {
                                "type": "text",
                                "text": "inside",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " the cloned folder run "
                            },
                            {
                                "type": "text",
                                "text": "git pull",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " with no other arguments"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]