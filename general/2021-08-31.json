[
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1630393658.101300",
        "edited": {
            "user": "U4H19D1D2",
            "ts": "1630393842.000000"
        },
        "client_msg_id": "c7c8e8d0-0652-4ab0-bd14-69dcd376d702",
        "text": "1. Yes that is correct, FIFO queue\n2. You can do that, note there is a warning <https:\/\/github.com\/liampauling\/flumine\/blob\/f0e7e6542942d00685ceb6d72951456684998739\/flumine\/baseflumine.py#L128|log> if the MarketBook is delayed by over 2s from publishTime. Conflation would be a separate issue where your connection (or CPU) is limited and unable to read off the socket quick enough, this would not be impacted or caused by the handler_queue size\n3. Have a look at the <https:\/\/github.com\/liampauling\/flumine\/blob\/f0e7e6542942d00685ceb6d72951456684998739\/flumine\/baseflumine.py#L149|code>, its called when processed by the queue and before strategies etc are called",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630321649.088000",
        "parent_user_id": "UT6593JBH",
        "attachments": [
            {
                "title": "<https:\/\/github.com\/liampauling\/flumine\/blob\/f0e7e6542942d00685ceb6d72951456684998739\/flumine\/baseflumine.py | baseflumine.py>",
                "footer": "<https:\/\/github.com\/liampauling\/flumine|liampauling\/flumine>",
                "id": 1,
                "footer_icon": "https:\/\/slack.github.com\/static\/img\/favicon-neutral.png",
                "color": "24292f",
                "mrkdwn_in": [
                    "text"
                ],
                "fallback": "<https:\/\/github.com\/liampauling\/flumine\/blob\/f0e7e6542942d00685ceb6d72951456684998739\/flumine\/baseflumine.py | baseflumine.py>",
                "bot_id": "B021ZJYSBMW",
                "app_unfurl_url": "https:\/\/github.com\/liampauling\/flumine\/blob\/f0e7e6542942d00685ceb6d72951456684998739\/flumine\/baseflumine.py#L128",
                "is_app_unfurl": true
            },
            {
                "title": "<https:\/\/github.com\/liampauling\/flumine\/blob\/f0e7e6542942d00685ceb6d72951456684998739\/flumine\/baseflumine.py | baseflumine.py>",
                "footer": "<https:\/\/github.com\/liampauling\/flumine|liampauling\/flumine>",
                "id": 2,
                "footer_icon": "https:\/\/slack.github.com\/static\/img\/favicon-neutral.png",
                "color": "24292f",
                "mrkdwn_in": [
                    "text"
                ],
                "fallback": "<https:\/\/github.com\/liampauling\/flumine\/blob\/f0e7e6542942d00685ceb6d72951456684998739\/flumine\/baseflumine.py | baseflumine.py>",
                "bot_id": "B021ZJYSBMW",
                "app_unfurl_url": "https:\/\/github.com\/liampauling\/flumine\/blob\/f0e7e6542942d00685ceb6d72951456684998739\/flumine\/baseflumine.py#L149",
                "is_app_unfurl": true
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/KW4d",
                "elements": [
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Yes that is correct, FIFO queue"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "You can do that, note there is a warning "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/github.com\/liampauling\/flumine\/blob\/f0e7e6542942d00685ceb6d72951456684998739\/flumine\/baseflumine.py#L128",
                                        "text": "log"
                                    },
                                    {
                                        "type": "text",
                                        "text": " if the MarketBook is delayed by over 2s from publishTime. Conflation would be a separate issue where your connection (or CPU) is limited and unable to read off the socket quick enough, this would not be impacted or caused by the handler_queue size"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Have a look at the "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/github.com\/liampauling\/flumine\/blob\/f0e7e6542942d00685ceb6d72951456684998739\/flumine\/baseflumine.py#L149",
                                        "text": "code"
                                    },
                                    {
                                        "type": "text",
                                        "text": ", its called when processed by the queue and before strategies etc are called"
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0,
                        "border": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1630393992.101700",
        "client_msg_id": "beee0e78-5912-430c-9078-3ada973604b4",
        "text": "slack seems to be stripping the line numbers in the links, its 128 and 149",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630321649.088000",
        "parent_user_id": "UT6593JBH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HMSvo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "slack seems to be stripping the line numbers in the links, its 128 and 149"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01PNBCPSKT",
        "type": "message",
        "ts": "1630408215.101900",
        "client_msg_id": "6abab8b5-f6fd-46e9-9a4b-77203100b850",
        "text": "Yeah, converting to a dataframe should be quite easy once I've got the basics in place - my problem is understanding the basics. I think my best be is to just plough through the github\/Flumine documentation and see what I can understand. After that, I need to get dirty with the code, and probably ask a lot of dump questions on slack.\n\nBut, thanks for you advice here - it helps a lot.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "dd487a1a3898",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-02-25\/1797934283412_dd487a1a3898ed0b4ec6_72.png",
            "first_name": "Steve",
            "real_name": "Steve Roach",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "steve_roach",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630041956.052000",
        "parent_user_id": "U01PNBCPSKT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "z5=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, converting to a dataframe should be quite easy once I've got the basics in place - my problem is understanding the basics. I think my best be is to just plough through the github\/Flumine documentation and see what I can understand. After that, I need to get dirty with the code, and probably ask a lot of dump questions on slack.\n\nBut, thanks for you advice here - it helps a lot."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "channel_join",
        "user": "U02CWRVD6D8",
        "text": "<@U02CWRVD6D8> has joined the channel",
        "type": "message",
        "ts": "1630408329.102300"
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1630409012.103500",
        "client_msg_id": "FEF15D45-60D3-4F12-BF00-2C0978CCBFC9",
        "text": ":+1:",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630041956.052000",
        "parent_user_id": "U01PNBCPSKT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8Onam",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "emoji",
                                "name": "+1",
                                "unicode": "1f44d"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UV6F64HPG",
        "type": "message",
        "ts": "1630410596.105600",
        "client_msg_id": "C85242BF-D7E5-4A96-A831-A25AC4B84FF3",
        "text": "<@USDCJS1CK> how could it have rose during lockdown when there was no horse racing?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "c268dc84f257",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-08-18\/1312781667300_c268dc84f257fee36619_72.png",
            "first_name": "Amanda",
            "real_name": "Amanda",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "amandahere2020",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630316455.080500",
        "parent_user_id": "UK55EGNLA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "F6\/5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "USDCJS1CK"
                            },
                            {
                                "type": "text",
                                "text": " how could it have rose during lockdown when there was no horse racing?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "USDCJS1CK",
        "type": "message",
        "ts": "1630420210.105800",
        "client_msg_id": "a3bc07f8-1405-473e-ae44-c1217492a7ac",
        "text": "<@UV6F64HPG> OK, let me qualify that. When most people couldn't leave home and racing was still going ahead, volumes rose.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "5ffdc310ffc1",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-04-22\/2003482097649_5ffdc310ffc1078af34a_72.png",
            "first_name": "Peter",
            "real_name": "Peter Webb",
            "display_name": "Peter",
            "team": "T4G9NBD2M",
            "name": "peter.webb",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630316455.080500",
        "parent_user_id": "UK55EGNLA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FfA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UV6F64HPG"
                            },
                            {
                                "type": "text",
                                "text": " OK, let me qualify that. When most people couldn't leave home and racing was still going ahead, volumes rose."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01S1VB9X9P",
        "type": "message",
        "ts": "1630456990.106300",
        "edited": {
            "user": "U01S1VB9X9P",
            "ts": "1630457323.000000"
        },
        "client_msg_id": "d8a58f09-e5b2-4c6e-b1a2-5ee80183f8f7",
        "text": "Hey Peter Webb is in here! :relaxed: Hi Peter.\nWith regards to the above, would there not always be demand for an exchange? Otherwise, hypothetically if all the money that would be on exchanges went into bookies instead, that would make the bookies more efficient, thereby bringing the justification for an exchange back into being? Or is that too far fetched?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gedbe1c0faac",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/da19bb58fa64d5c88c2a156c73a2ccf3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0018-72.png",
            "first_name": "Adrian",
            "real_name": "Adrian",
            "display_name": "Adrian",
            "team": "T4G9NBD2M",
            "name": "adrianwf",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630316455.080500",
        "parent_user_id": "UK55EGNLA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ABy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hey Peter Webb is in here! "
                            },
                            {
                                "type": "emoji",
                                "name": "relaxed",
                                "unicode": "263a-fe0f"
                            },
                            {
                                "type": "text",
                                "text": " Hi Peter.\nWith regards to the above, would there not always be demand for an exchange? Otherwise, hypothetically if all the money that would be on exchanges went into bookies instead, that would make the bookies more efficient, thereby bringing the justification for an exchange back into being? Or is that too far fetched?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01S1VB9X9P",
        "type": "message",
        "ts": "1630460199.108200",
        "edited": {
            "user": "U01S1VB9X9P",
            "ts": "1630460248.000000"
        },
        "client_msg_id": "e934343a-bd82-49c4-8bbb-021df8635154",
        "text": "Is it possible to use listener kwargs like `event_type_id` and `market_type` in the backtests? I couldn't figure out the syntax so I put them in check_market_book instead, which I'm sure is slower",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gedbe1c0faac",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/da19bb58fa64d5c88c2a156c73a2ccf3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0018-72.png",
            "first_name": "Adrian",
            "real_name": "Adrian",
            "display_name": "Adrian",
            "team": "T4G9NBD2M",
            "name": "adrianwf",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rrypy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is it possible to use listener kwargs like "
                            },
                            {
                                "type": "text",
                                "text": "event_type_id",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "market_type",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " in the backtests? I couldn't figure out the syntax so I put them in check_market_book instead, which I'm sure is slower"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "U01N82K7LAH"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U9JHLMZB4",
        "type": "message",
        "ts": "1630472596.110100",
        "edited": {
            "user": "U9JHLMZB4",
            "ts": "1630474171.000000"
        },
        "client_msg_id": "8c91bc24-501d-4925-9f8f-06c5f8f1e7d1",
        "text": "Not currently. Support for the `seconds_to_start` and `inplay` listener_kwargs are explicitly built into the historic market stream's snap() method.\n```    def snap(self, market_ids: list = None) -&gt; list:\n        market_books = []\n        for cache in list(self._caches.values()):\n            if market_ids and cache.market_id not in market_ids:\n                continue\n            # if market is not open (closed\/suspended) send regardless\n            if cache._definition_status == \"OPEN\":\n                if self._listener.inplay:\n                    if not cache._definition_in_play:\n                        continue\n                elif self._listener.seconds_to_start:\n                    _now = datetime.datetime.utcfromtimestamp(cache.publish_time \/ 1e3)\n                    _market_time = BaseResource.strip_datetime(\n                        cache.market_definition[\"marketTime\"]\n                    )\n                    seconds_to_start = (_market_time - _now).total_seconds()\n                    if seconds_to_start &gt; self._listener.seconds_to_start:\n                        continue\n                if self._listener.inplay is False:\n                    if cache._definition_in_play:\n                        continue\n            market_books.append(cache.create_resource(self.unique_id, snap=True))\n        return market_books```\nSo this would need to be a PR. Though it's likely that <@U4H19D1D2> would take the view that these kwargs are for filtering within each stream \/ market file. Since the snap is executed for every update to a stream, it's hugely faster to filter out  the unwanted markets by not including them in the list of markets passed into the backtest.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g951ddcb43e7",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3951ddcb43e788a387d6daf330dad5ca.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0018-72.png",
            "first_name": "",
            "real_name": "Peter Coles",
            "display_name": "Peter",
            "team": "T4G9NBD2M",
            "name": "peter",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630472596.110100",
        "reply_count": 6,
        "reply_users_count": 2,
        "latest_reply": "1630482313.112500",
        "reply_users": [
            "U01S1VB9X9P",
            "U4H19D1D2"
        ],
        "replies": [
            {
                "user": "U01S1VB9X9P",
                "ts": "1630475905.111000"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1630478948.111200"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1630479052.111600"
            },
            {
                "user": "U01S1VB9X9P",
                "ts": "1630479946.111900"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1630481905.112200"
            },
            {
                "user": "U01S1VB9X9P",
                "ts": "1630482313.112500"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1630482313.112500",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mcfh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not currently. Support for the "
                            },
                            {
                                "type": "text",
                                "text": "seconds_to_start",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "inplay",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " listener_kwargs are explicitly built into the historic market stream's snap() method.\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "    def snap(self, market_ids: list = None) -> list:\n        market_books = []\n        for cache in list(self._caches.values()):\n            if market_ids and cache.market_id not in market_ids:\n                continue\n            # if market is not open (closed\/suspended) send regardless\n            if cache._definition_status == \"OPEN\":\n                if self._listener.inplay:\n                    if not cache._definition_in_play:\n                        continue\n                elif self._listener.seconds_to_start:\n                    _now = datetime.datetime.utcfromtimestamp(cache.publish_time \/ 1e3)\n                    _market_time = BaseResource.strip_datetime(\n                        cache.market_definition[\"marketTime\"]\n                    )\n                    seconds_to_start = (_market_time - _now).total_seconds()\n                    if seconds_to_start > self._listener.seconds_to_start:\n                        continue\n                if self._listener.inplay is False:\n                    if cache._definition_in_play:\n                        continue\n            market_books.append(cache.create_resource(self.unique_id, snap=True))\n        return market_books"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So this would need to be a PR. Though it's likely that "
                            },
                            {
                                "type": "user",
                                "user_id": "U4H19D1D2"
                            },
                            {
                                "type": "text",
                                "text": " would take the view that these kwargs are for filtering within each stream \/ market file. Since the snap is executed for every update to a stream, it's hugely faster to filter out  the unwanted markets by not including them in the list of markets passed into the backtest."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01S1VB9X9P",
        "type": "message",
        "ts": "1630475905.111000",
        "client_msg_id": "3552257a-f180-4069-9e4e-fda25ccd1b99",
        "text": "Thanks Peter. It's quite interesting how that works. I don't fully understand it but that makes sense not to pass them in in the first place. My problem is I started the market recorder a couple months back without sorting the market types into separate folders, so I'll have to create some kind of script that creates a list of the needed markets. Or that sorts them into correct folders them",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gedbe1c0faac",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/da19bb58fa64d5c88c2a156c73a2ccf3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0018-72.png",
            "first_name": "Adrian",
            "real_name": "Adrian",
            "display_name": "Adrian",
            "team": "T4G9NBD2M",
            "name": "adrianwf",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630472596.110100",
        "parent_user_id": "U9JHLMZB4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6sP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks Peter. It's quite interesting how that works. I don't fully understand it but that makes sense not to pass them in in the first place. My problem is I started the market recorder a couple months back without sorting the market types into separate folders, so I'll have to create some kind of script that creates a list of the needed markets. Or that sorts them into correct folders them"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1630478948.111200",
        "client_msg_id": "31639178-72b7-4cd7-950a-d4bf5c0fdd98",
        "text": "As the <https:\/\/liampauling.github.io\/flumine\/quickstart\/#event-processing|docs> describe you can filter by marketType\n\n```strategy = ExampleStrategy(\n    market_filter={\"markets\": [..], \"market_type\": [\"MATCH_ODDS\"]}\n)```\nThis is done before the listener when adding the market, <https:\/\/github.com\/liampauling\/flumine\/blob\/f0e7e6542942d00685ceb6d72951456684998739\/flumine\/streams\/streams.py#L43|here>.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630472596.110100",
        "parent_user_id": "U9JHLMZB4",
        "attachments": [
            {
                "title": "QuickStart - flumine",
                "title_link": "https:\/\/liampauling.github.io\/flumine\/quickstart\/#event-processing",
                "text": "Trading framework for Betfair API-NG.",
                "fallback": "QuickStart - flumine",
                "from_url": "https:\/\/liampauling.github.io\/flumine\/quickstart\/#event-processing",
                "service_icon": "https:\/\/liampauling.github.io\/flumine\/assets\/images\/favicon.png",
                "service_name": "liampauling.github.io",
                "id": 1,
                "original_url": "https:\/\/liampauling.github.io\/flumine\/quickstart\/#event-processing"
            },
            {
                "text": "```\n                    if market_types and market_type and market_type not in market_types:\n```",
                "title": "<https:\/\/github.com\/liampauling\/flumine\/blob\/f0e7e6542942d00685ceb6d72951456684998739\/flumine\/streams\/streams.py | streams.py>",
                "footer": "<https:\/\/github.com\/liampauling\/flumine|liampauling\/flumine>",
                "id": 2,
                "footer_icon": "https:\/\/slack.github.com\/static\/img\/favicon-neutral.png",
                "color": "24292f",
                "mrkdwn_in": [
                    "text"
                ],
                "fallback": "<https:\/\/github.com\/liampauling\/flumine\/blob\/f0e7e6542942d00685ceb6d72951456684998739\/flumine\/streams\/streams.py | streams.py>",
                "bot_id": "B021ZJYSBMW",
                "app_unfurl_url": "https:\/\/github.com\/liampauling\/flumine\/blob\/f0e7e6542942d00685ceb6d72951456684998739\/flumine\/streams\/streams.py#L43",
                "is_app_unfurl": true
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "O+E0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "As the "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/liampauling.github.io\/flumine\/quickstart\/#event-processing",
                                "text": "docs"
                            },
                            {
                                "type": "text",
                                "text": " describe you can filter by marketType\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "strategy = ExampleStrategy(\n    market_filter={\"markets\": [..], \"market_type\": [\"MATCH_ODDS\"]}\n)"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThis is done before the listener when adding the market, "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/liampauling\/flumine\/blob\/f0e7e6542942d00685ceb6d72951456684998739\/flumine\/streams\/streams.py#L43",
                                "text": "here"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1630479052.111600",
        "client_msg_id": "6cc84dda-fcd9-4b7d-bb1e-b37cde44922e",
        "text": "Although Adrian its a 5 second job to read the first line of a streaming file to work out the marketType from the definition (<https:\/\/github.com\/liampauling\/flumine\/blob\/f0e7e6542942d00685ceb6d72951456684998739\/flumine\/streams\/streams.py#L42|this> is how flumine does it anyway)",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630472596.110100",
        "parent_user_id": "U9JHLMZB4",
        "attachments": [
            {
                "text": "```\n                    market_type = get_file_md(market, \"marketType\")\n```",
                "title": "<https:\/\/github.com\/liampauling\/flumine\/blob\/f0e7e6542942d00685ceb6d72951456684998739\/flumine\/streams\/streams.py | streams.py>",
                "footer": "<https:\/\/github.com\/liampauling\/flumine|liampauling\/flumine>",
                "id": 1,
                "footer_icon": "https:\/\/slack.github.com\/static\/img\/favicon-neutral.png",
                "color": "24292f",
                "mrkdwn_in": [
                    "text"
                ],
                "fallback": "<https:\/\/github.com\/liampauling\/flumine\/blob\/f0e7e6542942d00685ceb6d72951456684998739\/flumine\/streams\/streams.py | streams.py>",
                "bot_id": "B021ZJYSBMW",
                "app_unfurl_url": "https:\/\/github.com\/liampauling\/flumine\/blob\/f0e7e6542942d00685ceb6d72951456684998739\/flumine\/streams\/streams.py#L42",
                "is_app_unfurl": true
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3ur",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Although Adrian its a 5 second job to read the first line of a streaming file to work out the marketType from the definition ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/liampauling\/flumine\/blob\/f0e7e6542942d00685ceb6d72951456684998739\/flumine\/streams\/streams.py#L42",
                                "text": "this"
                            },
                            {
                                "type": "text",
                                "text": " is how flumine does it anyway)"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]