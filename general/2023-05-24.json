[
    {
        "user": "UQL0QDEKA",
        "type": "message",
        "ts": "1684928114.529159",
        "client_msg_id": "9724b8a2-5d3f-4e46-af32-ff0f034f8045",
        "text": "Afternoon All. When using the Master\/Sub Account set up is it possible to set the individual account exposure amounts using software rather than manually via the sub account dash board? Thanks",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g444d10128c0",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/444d10128c0aaf094041a52a76796602.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "Peter",
            "real_name": "Peter Lenagh",
            "display_name": "PeterLe",
            "team": "T4G9NBD2M",
            "name": "lenagh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FakFH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Afternoon All. When using the Master\/Sub Account set up is it possible to set the individual account exposure amounts using software rather than manually via the sub account dash board? Thanks"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1684928244.337439",
        "client_msg_id": "A25B584F-75F3-4E6A-9A44-B54183DDB8F7",
        "text": "Nope, no public API for it ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VZC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Nope, no public API for it "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UQL0QDEKA",
        "type": "message",
        "ts": "1684928287.567489",
        "client_msg_id": "4d00b6b1-b9ac-48de-a45b-eb941ccc9824",
        "text": "Thanks Liam",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g444d10128c0",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/444d10128c0aaf094041a52a76796602.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "Peter",
            "real_name": "Peter Lenagh",
            "display_name": "PeterLe",
            "team": "T4G9NBD2M",
            "name": "lenagh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "69uW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks Liam"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U042NB80A1X",
        "type": "message",
        "ts": "1684979439.501979",
        "edited": {
            "user": "U042NB80A1X",
            "ts": "1684981014.000000"
        },
        "client_msg_id": "6debaab2-ad05-4e15-8c45-c07d9714c58f",
        "text": "Is it possible to use Market objects (<http:\/\/market.to|market.context?) to> store RunnerContext objects? I've customised RunnerContext objects into something I use to store a few other variables, but I'm wondering if you would then store all of those in market objects? Is there any reason not to do that? - And I guess add them all to a Markets object?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g3ab37102618",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ab37102618df1ba57a0e6b5c8538c66.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0021-72.png",
            "first_name": "Tom",
            "real_name": "Tom",
            "display_name": "Tom",
            "team": "T4G9NBD2M",
            "name": "tkuhnau",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1684979439.501979",
        "reply_count": 4,
        "reply_users_count": 2,
        "latest_reply": "1685174575.128369",
        "reply_users": [
            "U4H19D1D2",
            "U042NB80A1X"
        ],
        "replies": [
            {
                "user": "U4H19D1D2",
                "ts": "1684990520.229259"
            },
            {
                "user": "U042NB80A1X",
                "ts": "1685063683.396919"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1685083658.420249"
            },
            {
                "user": "U042NB80A1X",
                "ts": "1685174575.128369"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1685174575.128369",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iY3yn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is it possible to use Market objects ("
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/market.to",
                                "text": "market.context?) to",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": " store RunnerContext objects? I've customised RunnerContext objects into something I use to store a few other variables, but I'm wondering if you would then store all of those in market objects? Is there any reason not to do that? - And I guess add them all to a Markets object?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01FJPFQPML",
        "type": "message",
        "ts": "1684988751.610889",
        "client_msg_id": "ef5da646-2520-4bd8-8341-d74952c6b0fd",
        "text": "I have some code for placing thoroughbred bets that I cobbled together combining my python stuff and BFLW.  30 seconds out from scheduled start time, I get some variables from by database, get the current \"to back\" price from BF and run them through a ML algorithm to get predictions.  This works okay, but I want to shift this into Flumine and run it closer to start time.\nFor back testing purposes, I am pulling the data out of my database into a dataframe and then as I process each market in flumine, I select the subset of rows for the specific market and run the ML algorithm over it.  This works okay to this point, but I am now running into an issue where it is trying to continually run the process until the race goes in-play, so I can see that the way I currently have my code designed isn't right.\nI was wondering how others implement the processing of ML algorithms in Flumine, or if I am better off forcing it to not process the market again once an order is placed.  If that is the better option, how would I do that?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "4130984c3401",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-11-29\/1541691682196_4130984c3401120bcb1e_72.png",
            "first_name": "",
            "real_name": "Andy B",
            "display_name": "Andy B",
            "team": "T4G9NBD2M",
            "name": "behrendta",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1684988751.610889",
        "reply_count": 11,
        "reply_users_count": 2,
        "latest_reply": "1689052289.322639",
        "reply_users": [
            "U4H19D1D2",
            "U01FJPFQPML"
        ],
        "replies": [
            {
                "user": "U4H19D1D2",
                "ts": "1684990619.659029"
            },
            {
                "user": "U01FJPFQPML",
                "ts": "1684990828.263199"
            },
            {
                "user": "U01FJPFQPML",
                "ts": "1684990937.128439"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1684991443.380109"
            },
            {
                "user": "U01FJPFQPML",
                "ts": "1684992159.839209"
            },
            {
                "user": "U01FJPFQPML",
                "ts": "1684997857.648059"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1684999440.628529"
            },
            {
                "user": "U01FJPFQPML",
                "ts": "1685003818.818529"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1685004001.794269"
            },
            {
                "user": "U01FJPFQPML",
                "ts": "1685004529.202619"
            },
            {
                "user": "U01FJPFQPML",
                "ts": "1689052289.322639"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1689052289.322639",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Gj5J",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have some code for placing thoroughbred bets that I cobbled together combining my python stuff and BFLW.  30 seconds out from scheduled start time, I get some variables from by database, get the current \"to back\" price from BF and run them through a ML algorithm to get predictions.  This works okay, but I want to shift this into Flumine and run it closer to start time.\nFor back testing purposes, I am pulling the data out of my database into a dataframe and then as I process each market in flumine, I select the subset of rows for the specific market and run the ML algorithm over it.  This works okay to this point, but I am now running into an issue where it is trying to continually run the process until the race goes in-play, so I can see that the way I currently have my code designed isn't right.\nI was wondering how others implement the processing of ML algorithms in Flumine, or if I am better off forcing it to not process the market again once an order is placed.  If that is the better option, how would I do that?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1684990520.229259",
        "client_msg_id": "AE5D95B5-66A9-4696-A656-3C024AF2A0EF",
        "text": "Don’t see why not ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1684979439.501979",
        "parent_user_id": "U042NB80A1X",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "D49A5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Don’t"
                            },
                            {
                                "type": "text",
                                "text": " see why not "
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U042NB80A1X"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1684990619.659029",
        "client_msg_id": "528CF6F6-2D37-4BF7-AE55-91FF88D44364",
        "text": "Got some code? ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1684988751.610889",
        "parent_user_id": "U01FJPFQPML",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qOnGP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Got some code? "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01FJPFQPML",
        "type": "message",
        "ts": "1684990828.263199",
        "client_msg_id": "5fe6e81e-9f31-4bc5-a199-8ea8d6ffc7df",
        "text": "Thanks Liam,\n    def process_market_book(self, market: Market, market_book: MarketBook) -&gt; None:\n\n        if market.seconds_to_start &lt;= 5 and market_book.inplay == False:\n\n            <http:\/\/logging.info|logging.info>(f\"Inside the last 5 seconds for this market and race is not inplay\")\n            ThisMarket = TodaysRunners[TodaysRunners['MarketID'] == market_book.market_id]\n\n            for runner in market_book.runners:\n\t\t\t\tif runner.status == \"ACTIVE\" and runner.ex.available_to_back:\n\t\t\t\t\trow_index = ThisMarket[(ThisMarket['MarketID'] == market_book.market_id) &amp; (ThisMarket['SelectionID'] == runner.selection_id)].index\n\t\t\t\t\tif len(row_index) &gt; 0:\n\t\t\t\t\t\t# Update the value in the BSP column for the matching row\n\t\t\t\t\t\tThisMarket.loc[row_index, 'BSP'] = runner.ex.available_to_back[0]['price']\n\n            RaceFull = ThisMarket[['TrackName','RaceNumber','Distance','HorseName','Num','MarketID','SelectionID']].copy()\n            scaled_features = StandardScaler().fit_transform(Race.values)\n            ModelName = 'HorseModel2M.h5'\n            ModelName = tf.keras.models.load_model(ModelName)\n            Predictions = ModelName.predict(scaled_features)\n            RaceFull['Probability'] = Predictions\n            RaceFull['Model'] = 'Model9'\n            RaceFull = RaceFull.sort_values(by = 'Probability', ascending=False)\n            RaceFull = RaceFull.fillna(0)",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "4130984c3401",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-11-29\/1541691682196_4130984c3401120bcb1e_72.png",
            "first_name": "",
            "real_name": "Andy B",
            "display_name": "Andy B",
            "team": "T4G9NBD2M",
            "name": "behrendta",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1684988751.610889",
        "parent_user_id": "U01FJPFQPML",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "a9P3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks Liam,\n    def process_market_book(self, market: Market, market_book: MarketBook) -> None:\n\n        if market.seconds_to_start <= 5 and market_book.inplay == False:\n\n            "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/logging.info",
                                "text": "logging.info"
                            },
                            {
                                "type": "text",
                                "text": "(f\"Inside the last 5 seconds for this market and race is not inplay\")\n            ThisMarket = TodaysRunners[TodaysRunners['MarketID'] == market_book.market_id]\n\n            for runner in market_book.runners:\n\t\t\t\tif runner.status == \"ACTIVE\" and runner.ex.available_to_back:\n\t\t\t\t\trow_index = ThisMarket[(ThisMarket['MarketID'] == market_book.market_id) & (ThisMarket['SelectionID'] == runner.selection_id)].index\n\t\t\t\t\tif len(row_index) > 0:\n\t\t\t\t\t\t# Update the value in the BSP column for the matching row\n\t\t\t\t\t\tThisMarket.loc[row_index, 'BSP'] = runner.ex.available_to_back[0]['price']\n\n            RaceFull = ThisMarket[['TrackName','RaceNumber','Distance','HorseName','Num','MarketID','SelectionID']].copy()\n            scaled_features = StandardScaler().fit_transform(Race.values)\n            ModelName = 'HorseModel2M.h5'\n            ModelName = tf.keras.models.load_model(ModelName)\n            Predictions = ModelName.predict(scaled_features)\n            RaceFull['Probability'] = Predictions\n            RaceFull['Model'] = 'Model9'\n            RaceFull = RaceFull.sort_values(by = 'Probability', ascending=False)\n            RaceFull = RaceFull.fillna(0)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01FJPFQPML",
        "type": "message",
        "ts": "1684990937.128439",
        "client_msg_id": "4f090e0a-4603-4358-b52b-e93df5971943",
        "text": "When I run this in vscode to test it, the interface crashes and restarts, and my assumption is that multiple threads are trying to do the exact same thing.  I'm not certain about that, but I am certain that there is a smarter way to do this.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "4130984c3401",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-11-29\/1541691682196_4130984c3401120bcb1e_72.png",
            "first_name": "",
            "real_name": "Andy B",
            "display_name": "Andy B",
            "team": "T4G9NBD2M",
            "name": "behrendta",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1684988751.610889",
        "parent_user_id": "U01FJPFQPML",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "d4j",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "When I run this in vscode to test it, the interface crashes and restarts, and my assumption is that multiple threads are trying to do the exact same thing.  I'm not certain about that, but I am certain that there is a smarter way to do this."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1684991443.380109",
        "edited": {
            "user": "U4H19D1D2",
            "ts": "1684991478.000000"
        },
        "client_msg_id": "C39E1BE2-A23F-449A-B2D6-CE1633DFF23F",
        "text": "Have you tried only processing once?\n\n```if ‘processed’ not in market.context:\n    market.context[‘processed’] = True\n    code…```",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1684988751.610889",
        "parent_user_id": "U01FJPFQPML",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "D2\/vJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Have you tried only processing once?\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "if ‘processed’ not in market.context:"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "    market.context[‘processed’] = True\n    code…"
                            }
                        ],
                        "border": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "U01FJPFQPML",
        "type": "message",
        "ts": "1684992159.839209",
        "client_msg_id": "8d821930-261d-4f77-ba8a-763f0be1e154",
        "text": "No, tbh that is the first time I have come across that before.  RTFM should be tattooed on the back of my hand.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "4130984c3401",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-11-29\/1541691682196_4130984c3401120bcb1e_72.png",
            "first_name": "",
            "real_name": "Andy B",
            "display_name": "Andy B",
            "team": "T4G9NBD2M",
            "name": "behrendta",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1684988751.610889",
        "parent_user_id": "U01FJPFQPML",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5vk\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "No, tbh that is the first time I have come across that before.  RTFM should be tattooed on the back of my hand."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01FJPFQPML",
        "type": "message",
        "ts": "1684997857.648059",
        "edited": {
            "user": "U01FJPFQPML",
            "ts": "1684998997.000000"
        },
        "client_msg_id": "9a644ade-f7c1-4f46-af93-8159f99572b5",
        "text": "I think that I am accessing the keras model to make predictions too fast when back testing against the market stream:\n2023-05-25 16:21:56,369:CRITICAL:Unknown error bad allocation in process_market_book (1.212040559)\nTraceback (most recent call last):\n  File \"C:\\Python\\lib\\site-packages\\flumine\\utils.py\", line 239, in call_strategy_error_handling\n    return func(market, market_book)\n  File \"C:\\Python\\Scripts\\flumine\\FlumineSims.py\", line 228, in process_market_book\n    ModelName = tf.keras.models.load_model(ModelName)\n  File \"C:\\Python\\lib\\site-packages\\keras\\utils\\traceback_utils.py\", line 70, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"C:\\Python\\lib\\site-packages\\h5py\\_hl\\files.py\", line 533, in __init__\n    fid = make_fid(name, mode, userblock_size, fapl, fcpl, swmr=swmr)\n  File \"C:\\Python\\lib\\site-packages\\h5py\\_hl\\files.py\", line 226, in make_fid\n    fid = h5f.open(name, flags, fapl=fapl)\n  File \"h5py\\_objects.pyx\", line 54, in h5py._objects.with_phil.wrapper\n  File \"h5py\\_objects.pyx\", line 55, in h5py._objects.with_phil.wrapper\n  File \"h5py\\h5f.pyx\", line 106, in h5py.h5f.open\n  File \"h5py\\h5fd.pyx\", line 155, in h5py.h5fd.H5FD_fileobj_get_eof\n  File \"h5py\\h5fd.pyx\", line 155, in h5py.h5fd.H5FD_fileobj_get_eof\nMemoryError: bad allocation\n\nThat makes sense if it is multi-processing and trying to open it n number of times I guess, but I am not sure if there is a way to do this without slowing down the stream.  Is there a better way to do this?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "4130984c3401",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-11-29\/1541691682196_4130984c3401120bcb1e_72.png",
            "first_name": "",
            "real_name": "Andy B",
            "display_name": "Andy B",
            "team": "T4G9NBD2M",
            "name": "behrendta",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1684988751.610889",
        "parent_user_id": "U01FJPFQPML",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "grRIp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think that I am accessing the keras model to make predictions too fast when back testing against the market stream:\n2023-05-25 16:21:56,369:CRITICAL:Unknown error bad allocation in process_market_book (1.212040559)\nTraceback (most recent call last):\n  File \"C:\\Python\\lib\\site-packages\\flumine\\utils.py\", line 239, in call_strategy_error_handling\n    return func(market, market_book)\n  File \"C:\\Python\\Scripts\\flumine\\FlumineSims.py\", line 228, in process_market_book\n    ModelName = tf.keras.models.load_model(ModelName)\n  File \"C:\\Python\\lib\\site-packages\\keras\\utils\\traceback_utils.py\", line 70, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"C:\\Python\\lib\\site-packages\\h5py\\_hl\\files.py\", line 533, in _"
                            },
                            {
                                "type": "text",
                                "text": "init",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "_\n    fid = make_fid(name, mode, userblock_size, fapl, fcpl, swmr=swmr)\n  File \"C:\\Python\\lib\\site-packages\\h5py\\_hl\\files.py\", line 226, in make_fid\n    fid = h5f.open(name, flags, fapl=fapl)\n  File \"h5py\\_objects.pyx\", line 54, in h5py._objects.with_phil.wrapper\n  File \"h5py\\_objects.pyx\", line 55, in h5py._objects.with_phil.wrapper\n  File \"h5py\\h5f.pyx\", line 106, in h5py.h5f.open\n  File \"h5py\\h5fd.pyx\", line 155, in h5py.h5fd.H5FD_fileobj_get_eof\n  File \"h5py\\h5fd.pyx\", line 155, in h5py.h5fd.H5FD_fileobj_get_eof\nMemoryError: bad allocation\n\nThat makes sense if it is multi-processing and trying to open it n number of times I guess, but I am not sure if there is a way to do this without slowing down the stream.  Is there a better way to do this?"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]