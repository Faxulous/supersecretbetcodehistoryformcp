[
    {
        "subtype": "bot_message",
        "text": "Flumine smart matching, when backtesting multiple strategies what would be the expected behaviour for passive orders:",
        "type": "message",
        "ts": "1639396783.356300",
        "edited": {
            "user": "B0254980X98",
            "ts": "1639502730.000000"
        },
        "bot_id": "B0254980X98",
        "blocks": [
            {
                "type": "context",
                "block_id": "AyaDy",
                "elements": [
                    {
                        "type": "mrkdwn",
                        "text": ":bust_in_silhouette: This poll is anonymous. The identity of all responses will be hidden.",
                        "verbatim": false
                    }
                ]
            },
            {
                "type": "section",
                "block_id": "poll-e0c6724b-ce3f-4cb4-8dc4-ed7380803eb0-title-and-menu",
                "text": {
                    "type": "mrkdwn",
                    "text": "*Flumine smart matching, when backtesting multiple strategies what would be the expected behaviour for passive orders:*",
                    "verbatim": false
                },
                "accessory": {
                    "type": "overflow",
                    "action_id": "title-and-menu",
                    "options": [
                        {
                            "text": {
                                "type": "plain_text",
                                "text": ":information_source: Details & More",
                                "emoji": true
                            },
                            "value": "view_info"
                        },
                        {
                            "text": {
                                "type": "plain_text",
                                "text": ":lock: Close Poll",
                                "emoji": true
                            },
                            "value": "close_poll"
                        },
                        {
                            "text": {
                                "type": "plain_text",
                                "text": ":x: Delete Poll",
                                "emoji": true
                            },
                            "value": "delete_poll"
                        },
                        {
                            "text": {
                                "type": "plain_text",
                                "text": ":house: Go to Simple Poll Home",
                                "emoji": true
                            },
                            "value": "go_to_app_home",
                            "url": "slack:\/\/app?team=T4G9NBD2M&id=A0HFW7MR6&tab=home"
                        },
                        {
                            "text": {
                                "type": "plain_text",
                                "text": ":bar_chart: Create new Poll",
                                "emoji": true
                            },
                            "value": "create_new_poll"
                        }
                    ]
                }
            },
            {
                "type": "section",
                "block_id": "poll-e0c6724b-ce3f-4cb4-8dc4-ed7380803eb0-vote-1",
                "text": {
                    "type": "mrkdwn",
                    "text": ":one: Orders matched in isolation (ignore double counting of passive liquidity)\n",
                    "verbatim": false
                },
                "accessory": {
                    "type": "button",
                    "action_id": "vote-1",
                    "text": {
                        "type": "plain_text",
                        "text": ":one:",
                        "emoji": true
                    }
                }
            },
            {
                "type": "section",
                "block_id": "poll-e0c6724b-ce3f-4cb4-8dc4-ed7380803eb0-vote-2",
                "text": {
                    "type": "mrkdwn",
                    "text": ":two: Each strategy has their orders matched in isolation (prevent double counting of passive liquidity per strategy)    `6`\n:heavy_check_mark::heavy_check_mark::heavy_check_mark::heavy_check_mark::heavy_check_mark::heavy_check_mark:",
                    "verbatim": false
                },
                "accessory": {
                    "type": "button",
                    "action_id": "vote-2",
                    "text": {
                        "type": "plain_text",
                        "text": ":two:",
                        "emoji": true
                    }
                }
            },
            {
                "type": "section",
                "block_id": "poll-e0c6724b-ce3f-4cb4-8dc4-ed7380803eb0-vote-3",
                "text": {
                    "type": "mrkdwn",
                    "text": ":three: As per option 2 but strategy ignored (prevent double counting of passive liquidity on all orders regardless of strategy)\n",
                    "verbatim": false
                },
                "accessory": {
                    "type": "button",
                    "action_id": "vote-3",
                    "text": {
                        "type": "plain_text",
                        "text": ":three:",
                        "emoji": true
                    }
                }
            },
            {
                "type": "context",
                "block_id": "a2s5",
                "elements": [
                    {
                        "type": "mrkdwn",
                        "text": "Created by <@U4H19D1D2> with \/poll",
                        "verbatim": false
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1639396878.357600",
        "client_msg_id": "61bca82f-176c-4d7e-a63c-fc24f39b3fb0",
        "text": "I am thinking option 2 becomes the default (more accurate as option 1 is what flumine currently does) and a flag for option 3 when you went to test potential impact on multiple strategies running at the same time etc. but welcome thoughts on this as its confusing",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "G5nBF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I am thinking option 2 becomes the default (more accurate as option 1 is what flumine currently does) and a flag for option 3 when you went to test potential impact on multiple strategies running at the same time etc. but welcome thoughts on this as its confusing"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "channel_join",
        "user": "U025GTE7G2V",
        "text": "<@U025GTE7G2V> has joined the channel",
        "type": "message",
        "ts": "1639397354.357800"
    },
    {
        "user": "U9JHLMZB4",
        "type": "message",
        "ts": "1639406417.359000",
        "client_msg_id": "539292b5-ef5b-47e3-a563-daa8f9742f68",
        "text": "For me it would have been between 2 and 3. So your suggestion of 2 with the option of 3 would be ideal.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g951ddcb43e7",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3951ddcb43e788a387d6daf330dad5ca.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0018-72.png",
            "first_name": "",
            "real_name": "Peter Coles",
            "display_name": "Peter",
            "team": "T4G9NBD2M",
            "name": "peter",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HU0u",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For me it would have been between 2 and 3. So your suggestion of 2 with the option of 3 would be ideal."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1639407194.359900",
        "client_msg_id": "e81fc578-44c1-4c00-b794-62499b824848",
        "text": ":thumbsup: POC PR <https:\/\/github.com\/liampauling\/flumine\/pull\/539|here>, also added a sort method to better replicate the matching engine based on side\/price\/order",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "id": 1,
                "footer_icon": "https:\/\/slack.github.com\/static\/img\/favicon-neutral.png",
                "ts": 1639390890,
                "color": "36a64f",
                "bot_id": "B021ZJYSBMW",
                "app_unfurl_url": "https:\/\/github.com\/liampauling\/flumine\/pull\/539",
                "is_app_unfurl": true,
                "app_id": "A01BP7R4KNY",
                "fallback": "<https:\/\/github.com\/liampauling\/flumine\/pull\/539|#539 #538 passive; prevent double counting of traded size>",
                "title": "<https:\/\/github.com\/liampauling\/flumine\/pull\/539|#539 #538 passive; prevent double counting of traded size>",
                "footer": "<https:\/\/github.com\/liampauling\/flumine|liampauling\/flumine>",
                "mrkdwn_in": [
                    "text"
                ]
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "W5q9x",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "emoji",
                                "name": "thumbsup",
                                "unicode": "1f44d"
                            },
                            {
                                "type": "text",
                                "text": " POC PR "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/liampauling\/flumine\/pull\/539",
                                "text": "here"
                            },
                            {
                                "type": "text",
                                "text": ", also added a sort method to better replicate the matching engine based on side\/price\/order"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UUCD6P13J"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U01DVUAE2G1",
        "type": "message",
        "ts": "1639412243.361400",
        "client_msg_id": "67401030-f310-459c-b88e-89dcd54fe789",
        "text": "can i use <https:\/\/github.com\/liampauling\/flumine\/blob\/master\/examples\/controls\/backtestloggingcontrol.py>\nlive (instead of backtest) and if so, is there anything i need to take care of except for getting rid of order.simulated.profit?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gd87aca58eae",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/d87aca58eaeabd0a953b4bc4204bbbaf.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Aaron Smith",
            "display_name": "Aaron Smith",
            "team": "T4G9NBD2M",
            "name": "smiffyaaron",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "id": 1,
                "footer_icon": "https:\/\/slack.github.com\/static\/img\/favicon-neutral.png",
                "color": "24292f",
                "bot_id": "B021ZJYSBMW",
                "app_unfurl_url": "https:\/\/github.com\/liampauling\/flumine\/blob\/master\/examples\/controls\/backtestloggingcontrol.py",
                "is_app_unfurl": true,
                "app_id": "A01BP7R4KNY",
                "fallback": "<https:\/\/github.com\/liampauling\/flumine\/blob\/master\/examples\/controls\/backtestloggingcontrol.py | backtestloggingcontrol.py>",
                "text": "```\nimport csv\nimport logging\nfrom flumine.controls.loggingcontrols import LoggingControl\nfrom flumine.order.ordertype import OrderTypes\n\nlogger = logging.getLogger(__name__)\n\nFIELDNAMES = [\n    \"bet_id\",\n    \"strategy_name\",\n    \"market_id\",\n    \"selection_id\",\n    \"trade_id\",\n    \"date_time_placed\",\n    \"price\",\n    \"price_matched\",\n    \"size\",\n    \"size_matched\",\n    \"profit\",\n    \"side\",\n    \"elapsed_seconds_executable\",\n    \"order_status\",\n    \"market_note\",\n    \"trade_notes\",\n    \"order_notes\",\n]\n\n\nclass BacktestLoggingControl(LoggingControl):\n    NAME = \"BACKTEST_LOGGING_CONTROL\"\n\n    def __init__(self, *args, **kwargs):\n        super(BacktestLoggingControl, self).__init__(*args, **kwargs)\n        self._setup()\n\n    def _setup(self):\n        with open(\"orders.txt\", \"w\") as m:\n            csv_writer = csv.DictWriter(m, delimiter=\",\", fieldnames=FIELDNAMES)\n            csv_writer.writeheader()\n\n    def _process_cleared_orders_meta(self, event):\n        orders = event.event\n        with open(\"orders.txt\", \"a\") as m:\n            for order in orders:\n                if order.order_type.ORDER_TYPE == OrderTypes.LIMIT:\n                    size = order.order_type.size\n                else:\n                    size = order.order_type.liability\n                if order.order_type.ORDER_TYPE == OrderTypes.MARKET_ON_CLOSE:\n                    price = None\n                else:\n                    price = order.order_type.price\n                try:\n                    order_data = {\n                        \"bet_id\": order.bet_id,\n                        \"strategy_name\": order.trade.strategy,\n                        \"market_id\": order.market_id,\n                        \"selection_id\": order.selection_id,\n                        \"trade_id\": order.trade.id,\n                        \"date_time_placed\": order.responses.date_time_placed,\n                        \"price\": price,\n                        \"price_matched\": order.average_price_matched,\n                        \"size\": size,\n                        \"size_matched\": order.size_matched,\n                        \"profit\": order.simulated.profit,\n                        \"side\": order.side,\n                        \"elapsed_seconds_executable\": order.elapsed_seconds_executable,\n                        \"order_status\": order.status.value,\n                        \"market_note\": order.trade.market_notes,\n                        \"trade_notes\": order.trade.notes_str,\n                        \"order_notes\": order.notes_str,\n                    }\n                    csv_writer = csv.DictWriter(m, delimiter=\",\", fieldnames=FIELDNAMES)\n                    csv_writer.writerow(order_data)\n                except Exception as e:\n                    logger.error(\n                        \"_process_cleared_orders_meta: %s\" % e,\n                        extra={\"order\": order, \"error\": e},\n                    )\n\n        <http:\/\/logger.info|logger.info>(\"Orders updated\", extra={\"order_count\": len(orders)})\n\n    def _process_cleared_markets(self, event):\n        cleared_markets = event.event\n        for cleared_market in cleared_markets.orders:\n            <http:\/\/logger.info|logger.info>(\n                \"Cleared market\",\n                extra={\n                    \"market_id\": cleared_market.market_id,\n                    \"bet_count\": cleared_market.bet_count,\n                    \"profit\": cleared_market.profit,\n                    \"commission\": cleared_market.commission,\n                },\n            )\n\n```",
                "title": "<https:\/\/github.com\/liampauling\/flumine\/blob\/master\/examples\/controls\/backtestloggingcontrol.py | backtestloggingcontrol.py>",
                "footer": "<https:\/\/github.com\/liampauling\/flumine|liampauling\/flumine>",
                "mrkdwn_in": [
                    "text"
                ]
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Hrk0+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "can i use "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/liampauling\/flumine\/blob\/master\/examples\/controls\/backtestloggingcontrol.py"
                            },
                            {
                                "type": "text",
                                "text": "\nlive (instead of backtest) and if so, is there anything i need to take care of except for getting rid of order.simulated.profit?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1639412858.362000",
        "client_msg_id": "FAE29117-13FC-48BF-8D3D-C14BEB6F79DE",
        "text": "Same principle so should work fine live ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pAf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Same principle so should work fine live "
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U01DVUAE2G1"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1639420930.363100",
        "client_msg_id": "2f7bb213-a6e7-43a0-9d07-6f6b0daef950",
        "text": "So at the moment it looks like smart matching is less accurate when testing on inplay markets :man-facepalming: I think its XM causing the discrepancies",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rCpt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So at the moment it looks like smart matching is less accurate when testing on inplay markets "
                            },
                            {
                                "type": "emoji",
                                "name": "man-facepalming",
                                "unicode": "1f926-200d-2642-fe0f"
                            },
                            {
                                "type": "text",
                                "text": " I think its XM causing the discrepancies"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "Starting to think maybe this is highlighting an issue\/bug with the simulation engine as the size being placed is so much lower (£30 per market) compared to live :thinking_face:",
        "files": [
            {
                "id": "F02QK58M3J6",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U4H19D1D2",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dY5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Starting to think maybe this is highlighting an issue\/bug with the simulation engine as the size being placed is so much lower (£30 per market) compared to live "
                            },
                            {
                                "type": "emoji",
                                "name": "thinking_face",
                                "unicode": "1f914"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1639421327.363300",
        "client_msg_id": "34f311d3-2f4a-47f7-9701-d12406c31198"
    }
]