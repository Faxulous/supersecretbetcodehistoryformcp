[
    {
        "user": "U0128E7BEHW",
        "type": "message",
        "ts": "1667718090.865519",
        "client_msg_id": "8bb68e2b-2df9-48c3-b7df-a2a4528dcff9",
        "text": "This is probably the closest thing to what you're after: <https:\/\/docs.developer.betfair.com\/plugins\/servlet\/mobile?contentId=3833944#content\/view\/3833944>",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb57a2bdd15a",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b57a2bdd15acccdb845ce257f38940cc.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Dave",
            "real_name": "Dave R",
            "display_name": "Dave",
            "team": "T4G9NBD2M",
            "name": "d7m",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Q29Ha",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is probably the closest thing to what you're after: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/docs.developer.betfair.com\/plugins\/servlet\/mobile?contentId=3833944#content\/view\/3833944"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "raised_hands",
                "users": [
                    "U04980ZT6UX"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1667718883.644729",
        "client_msg_id": "1762361A-70EA-4A27-A739-9F2B66230DBF",
        "text": "What sport?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667683757.775849",
        "parent_user_id": "U013K4VNB6D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tlseN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What sport?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013K4VNB6D",
        "type": "message",
        "ts": "1667722935.942029",
        "client_msg_id": "f638cbf2-0cd6-403c-9b72-bf898cf77518",
        "text": "The first dataset is an Australian greyhounds race. The second dataset is a UK horse race",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf188478b89f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f188478b89f4a5e2c5af9eafa0433712.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "",
            "real_name": "Jeff Waters",
            "display_name": "Jeff Waters",
            "team": "T4G9NBD2M",
            "name": "watersjg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667683757.775849",
        "parent_user_id": "U013K4VNB6D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7gXjD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The first dataset is an Australian greyhounds race. The second dataset is a UK horse race"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1667722967.681379",
        "edited": {
            "user": "UBS7QANF3",
            "ts": "1667722969.000000"
        },
        "client_msg_id": "7327e3db-c821-4ebd-b766-960798b3fa64",
        "text": "Have you checked whether the first example is a non-runner?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667683757.775849",
        "parent_user_id": "U013K4VNB6D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZsZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Have you checked whether the first example is a non-runner?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013K4VNB6D",
        "type": "message",
        "ts": "1667723026.951019",
        "client_msg_id": "d3768253-6364-4b44-a230-f4fe1d3aee4b",
        "text": "No, I haven't. I'll see if I can find out, though.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf188478b89f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f188478b89f4a5e2c5af9eafa0433712.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "",
            "real_name": "Jeff Waters",
            "display_name": "Jeff Waters",
            "team": "T4G9NBD2M",
            "name": "watersjg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667683757.775849",
        "parent_user_id": "U013K4VNB6D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vCjB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "No, I haven't. I'll see if I can find out, though."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1667723069.444059",
        "client_msg_id": "f87f5cfa-9082-4bb9-a9c5-5d4241a3fda4",
        "text": "Is this BASIC\/ADVACNED\/PRO?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667683757.775849",
        "parent_user_id": "U013K4VNB6D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SJWj6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is this BASIC\/ADVACNED\/PRO?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013K4VNB6D",
        "type": "message",
        "ts": "1667723473.478439",
        "client_msg_id": "1db02983-4a87-4c3f-9031-44d5f3be2618",
        "text": "I'm 99% sure it's PRO, from memory.\n\nAlso, I believe that the fact that the updates are shown more frequently than once per second means it must be PRO?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf188478b89f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f188478b89f4a5e2c5af9eafa0433712.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "",
            "real_name": "Jeff Waters",
            "display_name": "Jeff Waters",
            "team": "T4G9NBD2M",
            "name": "watersjg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667683757.775849",
        "parent_user_id": "U013K4VNB6D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tMZhY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm 99% sure it's PRO, from memory.\n\nAlso, I believe that the fact that the updates are shown more frequently than once per second means it must be PRO?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1667723529.427939",
        "client_msg_id": "438d7c3a-e936-42f6-91c5-49abd4d510f9",
        "text": "Are you using the `cumulative_runner_tv` listener kwarg?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667683757.775849",
        "parent_user_id": "U013K4VNB6D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gND1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Are you using the "
                            },
                            {
                                "type": "text",
                                "text": "cumulative_runner_tv",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " listener kwarg?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1667723583.603719",
        "client_msg_id": "b2a49bf7-41c5-4e16-9da2-422db4baa1e1",
        "text": "<https:\/\/github.com\/betcode-org\/flumine\/blob\/9307dd5a0084c3583207921a521a1c39e430220f\/docs\/quickstart.md#listener-kwargs>\n\n```:param bool cumulative_runner_tv: Cumulative runner traded volume (should be True if using betfair purchased data)```\n",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667683757.775849",
        "parent_user_id": "U013K4VNB6D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ro5v",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/betcode-org\/flumine\/blob\/9307dd5a0084c3583207921a521a1c39e430220f\/docs\/quickstart.md#listener-kwargs"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": ":param bool cumulative_runner_tv: Cumulative runner traded volume (should be True if using betfair purchased data)"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": []
                    }
                ]
            }
        ]
    },
    {
        "user": "U013K4VNB6D",
        "type": "message",
        "ts": "1667723602.850089",
        "client_msg_id": "4a506b6f-0f99-4718-825a-e21a8ddc975a",
        "text": "Could the fact that I've just taken a couple of data files to test, rather than testing all my data files for a day, be distorting things?\n\nI would have thought the files would be self-contained, though?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf188478b89f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f188478b89f4a5e2c5af9eafa0433712.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "",
            "real_name": "Jeff Waters",
            "display_name": "Jeff Waters",
            "team": "T4G9NBD2M",
            "name": "watersjg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667683757.775849",
        "parent_user_id": "U013K4VNB6D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "im4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Could the fact that I've just taken a couple of data files to test, rather than testing all my data files for a day, be distorting things?\n\nI would have thought the files would be self-contained, though?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013K4VNB6D",
        "type": "message",
        "ts": "1667723758.220289",
        "client_msg_id": "2e4d6594-8ea1-461f-9d69-1ee7d5ed763b",
        "text": "I'm not using it to the best of my knowledge.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf188478b89f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f188478b89f4a5e2c5af9eafa0433712.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "",
            "real_name": "Jeff Waters",
            "display_name": "Jeff Waters",
            "team": "T4G9NBD2M",
            "name": "watersjg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667683757.775849",
        "parent_user_id": "U013K4VNB6D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2spNB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm not using it to the best of my knowledge."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "These are my filters:",
        "files": [
            {
                "id": "F04ACS14F9N",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U013K4VNB6D",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DrRia",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "These are my filters:"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1667723828.644089",
        "client_msg_id": "e838505f-a0a5-4785-b4c5-b760ca916b28",
        "thread_ts": "1667683757.775849",
        "parent_user_id": "U013K4VNB6D"
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1667723844.121649",
        "client_msg_id": "ab05f8d7-bad1-4721-8760-e5ded3791f88",
        "text": "Then that will be the problem",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667683757.775849",
        "parent_user_id": "U013K4VNB6D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TdIb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Then that will be the problem"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "I've just added a full day of data, but I'm still getting results that aren't what would be expected.\n\nIn case it's relevant, although I've put 'seconds to start : 0' in my filter, that isn't reflected in the output.\n\nI've just pushed my latest code, with the new data files, if you want to take a look.",
        "files": [
            {
                "id": "F049P5VKP8A",
                "mode": "hidden_by_limit"
            },
            {
                "id": "F049L7GKDKP",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U013K4VNB6D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ey36S",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've just added a full day of data, but I'm still getting results that aren't what would be expected.\n\nIn case it's relevant, although I've put 'seconds to start : 0' in my filter, that isn't reflected in the output.\n\nI've just pushed my latest code, with the new data files, if you want to take a look."
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1667724923.017129",
        "client_msg_id": "c8202fea-950d-4607-b1cc-f750956132bf",
        "thread_ts": "1667683757.775849",
        "parent_user_id": "U013K4VNB6D"
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1667725065.314429",
        "client_msg_id": "15522E5F-0E2D-41F4-BAC9-B43DBE0E410C",
        "text": "But you haven’t added the kwarg?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667683757.775849",
        "parent_user_id": "U013K4VNB6D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VaTp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "But you haven’t added the kwarg?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013K4VNB6D",
        "type": "message",
        "ts": "1667725166.048599",
        "client_msg_id": "d3e5d5e5-ba10-4acb-a3d9-dc81f535879e",
        "text": "Apologies, I thought you were checking if I had done something that could cause issues. I'll try that and let you know how I get on.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf188478b89f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f188478b89f4a5e2c5af9eafa0433712.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "",
            "real_name": "Jeff Waters",
            "display_name": "Jeff Waters",
            "team": "T4G9NBD2M",
            "name": "watersjg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667683757.775849",
        "parent_user_id": "U013K4VNB6D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uT=P",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Apologies, I thought you were checking if I had done something that could cause issues. I'll try that and let you know how I get on."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013K4VNB6D",
        "type": "message",
        "ts": "1667726025.268079",
        "client_msg_id": "2dc5d46a-b1f4-41b5-bfc6-590c2faefcc2",
        "text": "That seems to have fixed the issue. Thank you, Mo.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf188478b89f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f188478b89f4a5e2c5af9eafa0433712.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "",
            "real_name": "Jeff Waters",
            "display_name": "Jeff Waters",
            "team": "T4G9NBD2M",
            "name": "watersjg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667683757.775849",
        "parent_user_id": "U013K4VNB6D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=mXMg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That seems to have fixed the issue. Thank you, Mo."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1667726038.183759",
        "client_msg_id": "4ac311e1-7853-4936-9ffb-9d2405de8ced",
        "text": "Nice :+1:",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667683757.775849",
        "parent_user_id": "U013K4VNB6D",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IjYm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Nice "
                            },
                            {
                                "type": "emoji",
                                "name": "+1",
                                "unicode": "1f44d"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03CL4F39M4",
        "type": "message",
        "ts": "1667728793.721979",
        "client_msg_id": "6998d09f-53ce-4fa8-aa56-c21da799ce65",
        "text": "Thank you very much for your prompt and clear reply Mo, it was exactly what I was looking for!\nI will investigate point 4, and see if I can pinpoint when the market definition object is formed.\nCheers!",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "914e66aa98f5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-04-25\/3458558719456_914e66aa98f5dcdbe576_72.png",
            "first_name": "Nicholas",
            "real_name": "Nicholas vizard",
            "display_name": "Nicholas vizard",
            "team": "T4G9NBD2M",
            "name": "nsavizard",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667664296.113319",
        "parent_user_id": "U03CL4F39M4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9=PM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thank you very much for your prompt and clear reply Mo, it was exactly what I was looking for!\nI will investigate point 4, and see if I can pinpoint when the market definition object is formed.\nCheers!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0322P0CK0E",
        "type": "message",
        "ts": "1667738981.328329",
        "client_msg_id": "89683d53-09ff-42f5-81bf-67bd9a74b447",
        "text": "Once you have already placed an order how do you find out the price that you specified for the order? Running `vars()` I can see it has side, status, bet_id etc, but nothing for price",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "ab1918814707",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-07-31\/3867647231206_ab191881470773932048_72.jpg",
            "first_name": "Vincent",
            "real_name": "Vincent Lim",
            "display_name": "Guy Incognito",
            "team": "T4G9NBD2M",
            "name": "nelsonmathsspecialist",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667738981.328329",
        "reply_count": 6,
        "reply_users_count": 3,
        "latest_reply": "1667763371.462709",
        "reply_users": [
            "U4H19D1D2",
            "U0322P0CK0E",
            "U02RN7YDRQ9"
        ],
        "replies": [
            {
                "user": "U4H19D1D2",
                "ts": "1667743443.002519"
            },
            {
                "user": "U0322P0CK0E",
                "ts": "1667743961.278639"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1667745087.850649"
            },
            {
                "user": "U02RN7YDRQ9",
                "ts": "1667750301.810399"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1667757346.441119"
            },
            {
                "user": "U02RN7YDRQ9",
                "ts": "1667763371.462709"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1667763371.462709",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Uij",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Once you have already placed an order how do you find out the price that you specified for the order? Running "
                            },
                            {
                                "type": "text",
                                "text": "vars()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " I can see it has side, status, bet_id etc, but nothing for price"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U9JHLMZB4",
        "type": "message",
        "ts": "1667741889.066479",
        "client_msg_id": "c5e13f27-7c99-46e6-b796-10bb2408e798",
        "text": "Not sure what you mean by automatically, but most of what you need is already there and easy to implement. Take a look at this <https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/examples\/example.py|example strategy>. In particular the process_orders method and the the pieces of code that are commented out.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g951ddcb43e7",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3951ddcb43e788a387d6daf330dad5ca.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0018-72.png",
            "first_name": "",
            "real_name": "Peter Coles",
            "display_name": "Peter",
            "team": "T4G9NBD2M",
            "name": "peter",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667689339.581529",
        "parent_user_id": "U04980ZT6UX",
        "attachments": [
            {
                "id": 1,
                "footer_icon": "https:\/\/slack.github.com\/static\/img\/favicon-neutral.png",
                "color": "24292f",
                "bot_id": "B021ZJYSBMW",
                "app_unfurl_url": "https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/examples\/example.py",
                "is_app_unfurl": true,
                "app_id": "A01BP7R4KNY",
                "fallback": "<https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/examples\/example.py | example.py>",
                "text": "```\nimport time\nimport logging\nimport betfairlightweight\nfrom betfairlightweight.filters import streaming_market_filter\nfrom pythonjsonlogger import jsonlogger\n\nfrom flumine import Flumine, clients, BaseStrategy\nfrom flumine.order.trade import Trade\nfrom flumine.order.ordertype import LimitOrder\nfrom flumine.order.order import OrderStatus\n\nlogger = logging.getLogger()\n\ncustom_format = \"%(asctime) %(levelname) %(message)\"\nlog_handler = logging.StreamHandler()\nformatter = jsonlogger.JsonFormatter(custom_format)\nformatter.converter = time.gmtime\nlog_handler.setFormatter(formatter)\nlogger.addHandler(log_handler)\nlogger.setLevel(<http:\/\/logging.INFO|logging.INFO>)\n\n\nclass ExampleStrategy(BaseStrategy):\n    def start(self):\n        # subscribe to streams\n        print(\"starting strategy 'ExampleStrategy'\")\n\n    def check_market_book(self, market, market_book):\n        # process_market_book only executed if this returns True\n        if market_book.status != \"CLOSED\":\n            return True\n\n    def process_market_book(self, market, market_book):\n        # process marketBook object\n        for runner in market_book.runners:\n            if (\n                runner.status == \"ACTIVE\"\n                and runner.last_price_traded\n                and runner.selection_id == 11982403\n            ):\n                trade = Trade(\n                    market_id=market_book.market_id,\n                    selection_id=runner.selection_id,\n                    handicap=runner.handicap,\n                    strategy=self,\n                )\n                order = trade.create_order(\n                    side=\"LAY\", order_type=LimitOrder(price=1.01, size=2.00)\n                )\n                market.place_order(order)\n\n    def process_orders(self, market, orders):\n        for order in orders:\n            if order.status == OrderStatus.EXECUTABLE:\n                if order.elapsed_seconds and order.elapsed_seconds > 5:\n                    # print(order.bet_id, order.average_price_matched, order.size_matched)\n                    if order.size_remaining == 2.00:\n                        market.cancel_order(order, size_reduction=1.51)\n                # market.update_order(order, \"PERSIST\")\n                # if order.order_type.price == 1.01 and order.size_remaining == 0.49:\n                #     market.replace_order(order, 1.02)\n                # if order.order_type.price == 1.02:\n                #     market.replace_order(order, 1.03)\n                # if order.order_type.price == 1.03:\n                #     market.replace_order(order, 1.05)\n\n\ntrading = betfairlightweight.APIClient(\"username\")\nclient = clients.BetfairClient(trading)\n\nframework = Flumine(client=client)\n\nstrategy = ExampleStrategy(\n    market_filter=streaming_market_filter(market_ids=[\"1.170378175\"]),\n)\nframework.add_strategy(strategy)\n\nframework.run()\n\n```",
                "title": "<https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/examples\/example.py | example.py>",
                "footer": "<https:\/\/github.com\/betcode-org\/flumine|betcode-org\/flumine>",
                "mrkdwn_in": [
                    "text"
                ]
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "L0o\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not sure what you mean by automatically, but most of what you need is already there and easy to implement. Take a look at this "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/examples\/example.py",
                                "text": "example strategy"
                            },
                            {
                                "type": "text",
                                "text": ". In particular the process_orders method and the the pieces of code that are commented out."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U04980ZT6UX"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1667743443.002519",
        "client_msg_id": "54F2DD18-6F79-4638-B291-7522EEFF1634",
        "text": "Is this the place response? currentOrders? streaming?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667738981.328329",
        "parent_user_id": "U0322P0CK0E",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MHd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is this the place response? currentOrders? streaming?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0322P0CK0E",
        "type": "message",
        "ts": "1667743961.278639",
        "client_msg_id": "300682ce-48db-43e6-86f4-8dda29103ab7",
        "text": "This is after I do `market.place_order(order)` in `process_market_book`, after placing the order I store order in a dictionary and I'm referencing the order stored in the dictionary",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "ab1918814707",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-07-31\/3867647231206_ab191881470773932048_72.jpg",
            "first_name": "Vincent",
            "real_name": "Vincent Lim",
            "display_name": "Guy Incognito",
            "team": "T4G9NBD2M",
            "name": "nelsonmathsspecialist",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667738981.328329",
        "parent_user_id": "U0322P0CK0E",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MiM1E",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is after I do "
                            },
                            {
                                "type": "text",
                                "text": "market.place_order(order)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " in "
                            },
                            {
                                "type": "text",
                                "text": "process_market_book",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", after placing the order I store order in a dictionary and I'm referencing the order stored in the dictionary"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1667745087.850649",
        "client_msg_id": "936F806A-3CCF-4DC6-B4A1-1F4355165AE2",
        "text": "Tbh I don’t understand, what are you using to develop, just open up the debugger ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667738981.328329",
        "parent_user_id": "U0322P0CK0E",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ijA3u",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Tbh I "
                            },
                            {
                                "type": "text",
                                "text": "don’t"
                            },
                            {
                                "type": "text",
                                "text": " understand, what are you using to develop, just open up the debugger "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U04980ZT6UX",
        "type": "message",
        "ts": "1667746209.633859",
        "edited": {
            "user": "U04980ZT6UX",
            "ts": "1667746231.000000"
        },
        "client_msg_id": "e1f7db08-a928-4e3c-8b38-1b9d126b335b",
        "text": "Thanks <@U9JHLMZB4>! To access the open orders I need to go through `market.blotter.live_orders` ?\n\nAlso, if I am trading multiple market_ids independently (trading decision are never based on other markets), is there a way to get the open orders for that market only? So that I don't need to filter myself the orders for each market? An example would be a dictionary of live orders whose key is the `market_id`",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb1b2f82a1a4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b1b2f82a1a49a547cbc7487b48805187.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "AI",
            "real_name": "AI Trader",
            "display_name": "AI Trader",
            "team": "T4G9NBD2M",
            "name": "menocineto",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667689339.581529",
        "parent_user_id": "U04980ZT6UX",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WrR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks "
                            },
                            {
                                "type": "user",
                                "user_id": "U9JHLMZB4"
                            },
                            {
                                "type": "text",
                                "text": "! To access the open orders I need to go through "
                            },
                            {
                                "type": "text",
                                "text": "market.blotter.live_orders",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " ?\n\nAlso, if I am trading multiple market_ids independently (trading decision are never based on other markets), is there a way to get the open orders for that market only? So that I don't need to filter myself the orders for each market? An example would be a dictionary of live orders whose key is the "
                            },
                            {
                                "type": "text",
                                "text": "market_id",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U04980ZT6UX",
        "type": "message",
        "ts": "1667749626.312419",
        "edited": {
            "user": "U04980ZT6UX",
            "ts": "1667756939.000000"
        },
        "client_msg_id": "843cdd5b-be7b-4eb2-a425-ff2f6f24507d",
        "text": "Hi guys,\nI placed some orders using a Client\/Strategy, and then restarted the program. After that, I cannot get anymore the matched orders using\n• `makret.blotter.client_orders(client)` or\n• `makret.blotter.client_orders(strategy_name)`\nThis worries me as if the code restarts for some reason (like crashing), I will basically loose all my matched orders and get a wrong `market_exposure`. Could someone provide some help to better understand if this is indeed an issue?\n\nIs there any built-in mechanism to fetch the existing orders from the rest API when the program starts?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb1b2f82a1a4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b1b2f82a1a49a547cbc7487b48805187.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "AI",
            "real_name": "AI Trader",
            "display_name": "AI Trader",
            "team": "T4G9NBD2M",
            "name": "menocineto",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667749626.312419",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1667769895.831919",
        "reply_users": [
            "U4H19D1D2",
            "U04980ZT6UX"
        ],
        "replies": [
            {
                "user": "U4H19D1D2",
                "ts": "1667757376.991199"
            },
            {
                "user": "U04980ZT6UX",
                "ts": "1667769895.831919"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1667769895.831919",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dTDzS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi guys,\nI placed some orders using a Client\/Strategy, and then restarted the program. After that, I cannot get anymore the matched orders using\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "makret.blotter.client_orders(client)",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " or"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "makret.blotter.client_orders(strategy_name)",
                                        "style": {
                                            "code": true
                                        }
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThis worries me as if the code restarts for some reason (like crashing), I will basically loose all my matched orders and get a wrong "
                            },
                            {
                                "type": "text",
                                "text": "market_exposure",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". Could someone provide some help to better understand if this is indeed an issue?\n\nIs there any built-in mechanism to fetch the existing orders from the rest API when the program starts?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02RN7YDRQ9",
        "type": "message",
        "ts": "1667750301.810399",
        "client_msg_id": "b4fbb34f-1a77-4154-91da-cda13c576452",
        "text": "All orders and their status for a market are in the blotter whenever needed - no need to store another copy\n```for order in market.blotter:\n     ...\n     ask = order.order_type.price\n     actual = order.average_price_matched\n     matched = order.size_matched\n     ...```\n",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "ge46f1f8b708",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e46f1f8b708a630e3191de7b2c42b1d1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "edblock",
            "real_name": "edblock",
            "display_name": "foxwood",
            "team": "T4G9NBD2M",
            "name": "eanb",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667738981.328329",
        "parent_user_id": "U0322P0CK0E",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "x2XI3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "All orders and their status for a market are in the blotter whenever needed - no need to store another copy\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "for order in market.blotter:\n     ...\n     ask = order.order_type.price\n     actual = order.average_price_matched\n     matched = order.size_matched\n     ..."
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": []
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1667757346.441119",
        "client_msg_id": "D58D322A-6F53-4520-8AB9-E4A24F2B38A0",
        "text": "Not sure Guy is a flumine convert ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667738981.328329",
        "parent_user_id": "U0322P0CK0E",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/a\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not sure Guy is a flumine convert "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1667757376.991199",
        "client_msg_id": "97C56782-3371-46C1-83FF-84990B9417F4",
        "text": "There is a middleware for this in the examples ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667749626.312419",
        "parent_user_id": "U04980ZT6UX",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eXuZ8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There is a middleware for this in the examples "
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U04980ZT6UX"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02RN7YDRQ9",
        "type": "message",
        "ts": "1667763371.462709",
        "client_msg_id": "475d3c54-c0bc-42b2-9ade-5900db3ae48e",
        "text": "Assumed so since `process_market_book`  was mentioned but maybe that is also in bflw",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "ge46f1f8b708",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e46f1f8b708a630e3191de7b2c42b1d1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "edblock",
            "real_name": "edblock",
            "display_name": "foxwood",
            "team": "T4G9NBD2M",
            "name": "eanb",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667738981.328329",
        "parent_user_id": "U0322P0CK0E",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8XkKd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Assumed so since "
                            },
                            {
                                "type": "text",
                                "text": "process_market_book",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "  was mentioned but maybe that is also in bflw"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U04980ZT6UX",
        "type": "message",
        "ts": "1667769895.831919",
        "edited": {
            "user": "U04980ZT6UX",
            "ts": "1667769913.000000"
        },
        "client_msg_id": "1b8d9b1d-0b41-48ef-ac43-0695232ba6ff",
        "text": "Thank you so much <@U4H19D1D2>! I've managed to use it.\nThe only thing is that when I use it, it considers that my orders under status *EXECUTION_COMPLETE* are `live_orders`. This is confusing to me. Should't live_orders be only of type *EXECUTABLE* ?  Otheriwse, what is the difference between *live_trade* and *trade* ?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb1b2f82a1a4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b1b2f82a1a49a547cbc7487b48805187.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "AI",
            "real_name": "AI Trader",
            "display_name": "AI Trader",
            "team": "T4G9NBD2M",
            "name": "menocineto",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667749626.312419",
        "parent_user_id": "U04980ZT6UX",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MF9i",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thank you so much "
                            },
                            {
                                "type": "user",
                                "user_id": "U4H19D1D2"
                            },
                            {
                                "type": "text",
                                "text": "! I've managed to use it.\nThe only thing is that when I use it, it considers that my orders under status "
                            },
                            {
                                "type": "text",
                                "text": "EXECUTION_COMPLETE",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " are "
                            },
                            {
                                "type": "text",
                                "text": "live_orders",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". This is confusing to me. Should't live_orders be only of type "
                            },
                            {
                                "type": "text",
                                "text": "EXECUTABLE ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "?  Otheriwse, what is the difference between "
                            },
                            {
                                "type": "text",
                                "text": "live_trade",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "trade",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " ?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U027P3N2WMQ",
        "type": "message",
        "ts": "1667770868.768639",
        "client_msg_id": "2cf33e9b-c789-470d-869c-733342fcccab",
        "text": "Betfair API question - how do I put dates into date_range?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gc41721181dc",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c41721181dc4833c08c32f14cddc81b6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0026-72.png",
            "first_name": "Michael",
            "real_name": "Michael Leary",
            "display_name": "Michael",
            "team": "T4G9NBD2M",
            "name": "michaelleary15",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dcBWE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Betfair API question - how do I put dates into date_range?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U04980ZT6UX",
        "type": "message",
        "ts": "1667771491.275069",
        "edited": {
            "user": "U04980ZT6UX",
            "ts": "1667789036.000000"
        },
        "client_msg_id": "0c8ad0ef-ede0-4cc4-a27d-8dd2ac6abd75",
        "text": "*INCLUSION OF MANUAL ORDERS (UI) IN BLOTTER.CLIENT_ORDERS()*\nHi guys,\nCurrently, I have a single strategy, and when using blotter functionalities such as market_exposure or selection_exposure I need to specify a strategy. The problem with that is that it does not include manual orders from the UI (such as manual cashout orders). Is there a way (without rewriting these functions) to get the market\/selection exposure for all client orders (not only from a particular strategy), *including orders placed from the UI (cashout orders included*)?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb1b2f82a1a4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b1b2f82a1a49a547cbc7487b48805187.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "AI",
            "real_name": "AI Trader",
            "display_name": "AI Trader",
            "team": "T4G9NBD2M",
            "name": "menocineto",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667771491.275069",
        "reply_count": 5,
        "reply_users_count": 2,
        "latest_reply": "1667963234.796299",
        "reply_users": [
            "U04980ZT6UX",
            "UFTBRB3F1"
        ],
        "replies": [
            {
                "user": "U04980ZT6UX",
                "ts": "1667771547.345629"
            },
            {
                "user": "UFTBRB3F1",
                "ts": "1667811058.323869"
            },
            {
                "user": "UFTBRB3F1",
                "ts": "1667811066.738179"
            },
            {
                "user": "UFTBRB3F1",
                "ts": "1667811130.403099"
            },
            {
                "user": "U04980ZT6UX",
                "ts": "1667963234.796299"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8mdwB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "INCLUSION OF MANUAL ORDERS (UI) IN BLOTTER.CLIENT_ORDERS()",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\nHi guys,\nCurrently, I have a single strategy, and when using blotter functionalities such as market_exposure or selection_exposure I need to specify a strategy. The problem with that is that it does not include manual orders from the UI (such as manual cashout orders). Is there a way (without rewriting these functions) to get the market\/selection exposure for all client orders (not only from a particular strategy), "
                            },
                            {
                                "type": "text",
                                "text": "including orders placed from the UI (cashout orders included",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ")?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U04980ZT6UX",
        "type": "message",
        "ts": "1667771547.345629",
        "edited": {
            "user": "U04980ZT6UX",
            "ts": "1667773008.000000"
        },
        "client_msg_id": "da20559c-835c-4a72-9a87-8898a56e9099",
        "text": "Additional info: I've checked, and orders placed through manual UI cashout have *customer_strategy_ref = None*. The problem is that after fetching past orders through the middleware available in the <https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/examples\/middleware\/orders.py|examples>, the cashout orders don't appear even when *not* filtering orders by strategy, ie, *market.blotter.client_orders(client)* or in Blotter.strategy_orders(None).\n\nI have also tried to modify the middleware example and remove line <https:\/\/github.com\/betcode-org\/flumine\/blob\/47af44b2173cf9d6b32fd9daef22dae510adea3f\/examples\/middleware\/orders.py#L24|24> :`(customer_strategy_refs=[config.customer_strategy_ref])`, but this causes an issue as in lines <https:\/\/github.com\/betcode-org\/flumine\/blob\/47af44b2173cf9d6b32fd9daef22dae510adea3f\/examples\/middleware\/orders.py#L49|46-49> we try to access *customer_order_ref* and *customer_order_ref,* which are both `null` for orders placed by cashout (UI).\n\nlines 46-49:\n```strategy_name_hash = current_order.customer_order_ref[            :STRATEGY_NAME_HASH_LENGTH]\norder_id = current_order.customer_order_ref[STRATEGY_NAME_HASH_LENGTH + 1 :]```",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb1b2f82a1a4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b1b2f82a1a49a547cbc7487b48805187.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "AI",
            "real_name": "AI Trader",
            "display_name": "AI Trader",
            "team": "T4G9NBD2M",
            "name": "menocineto",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1667771491.275069",
        "parent_user_id": "U04980ZT6UX",
        "attachments": [
            {
                "id": 1,
                "footer_icon": "https:\/\/slack.github.com\/static\/img\/favicon-neutral.png",
                "color": "24292f",
                "bot_id": "B021ZJYSBMW",
                "app_unfurl_url": "https:\/\/github.com\/betcode-org\/flumine\/blob\/47af44b2173cf9d6b32fd9daef22dae510adea3f\/examples\/middleware\/orders.py#L24",
                "is_app_unfurl": true,
                "app_id": "A01BP7R4KNY",
                "fallback": "<https:\/\/github.com\/betcode-org\/flumine\/blob\/47af44b2173cf9d6b32fd9daef22dae510adea3f\/examples\/middleware\/orders.py | orders.py>",
                "title": "<https:\/\/github.com\/betcode-org\/flumine\/blob\/47af44b2173cf9d6b32fd9daef22dae510adea3f\/examples\/middleware\/orders.py | orders.py>",
                "footer": "<https:\/\/github.com\/betcode-org\/flumine|betcode-org\/flumine>",
                "mrkdwn_in": [
                    "text"
                ]
            },
            {
                "id": 2,
                "footer_icon": "https:\/\/slack.github.com\/static\/img\/favicon-neutral.png",
                "color": "24292f",
                "bot_id": "B021ZJYSBMW",
                "app_unfurl_url": "https:\/\/github.com\/betcode-org\/flumine\/blob\/47af44b2173cf9d6b32fd9daef22dae510adea3f\/examples\/middleware\/orders.py#L49",
                "is_app_unfurl": true,
                "app_id": "A01BP7R4KNY",
                "fallback": "<https:\/\/github.com\/betcode-org\/flumine\/blob\/47af44b2173cf9d6b32fd9daef22dae510adea3f\/examples\/middleware\/orders.py | orders.py>",
                "title": "<https:\/\/github.com\/betcode-org\/flumine\/blob\/47af44b2173cf9d6b32fd9daef22dae510adea3f\/examples\/middleware\/orders.py | orders.py>",
                "footer": "<https:\/\/github.com\/betcode-org\/flumine|betcode-org\/flumine>",
                "mrkdwn_in": [
                    "text"
                ]
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "o\/wI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Additional info: I've checked, and orders placed through manual UI cashout have "
                            },
                            {
                                "type": "text",
                                "text": "customer_strategy_ref = None",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". The problem is that after fetching past orders through the middleware available in the "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/examples\/middleware\/orders.py",
                                "text": "examples"
                            },
                            {
                                "type": "text",
                                "text": ", the cashout orders don't appear even when "
                            },
                            {
                                "type": "text",
                                "text": "not",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " filtering orders by strategy, ie, "
                            },
                            {
                                "type": "text",
                                "text": "market.blotter.client_orders(client) ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "or in Blotter.strategy_orders(None).\n\nI have also tried to modify the middleware example and remove line "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/betcode-org\/flumine\/blob\/47af44b2173cf9d6b32fd9daef22dae510adea3f\/examples\/middleware\/orders.py#L24",
                                "text": "24"
                            },
                            {
                                "type": "text",
                                "text": " :"
                            },
                            {
                                "type": "text",
                                "text": "(customer_strategy_refs=[config.customer_strategy_ref])",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", but this causes an issue as in lines "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/betcode-org\/flumine\/blob\/47af44b2173cf9d6b32fd9daef22dae510adea3f\/examples\/middleware\/orders.py#L49",
                                "text": "46-49"
                            },
                            {
                                "type": "text",
                                "text": " we try to access "
                            },
                            {
                                "type": "text",
                                "text": "customer_order_ref",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "customer_order_ref, ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "which are both "
                            },
                            {
                                "type": "text",
                                "text": "null",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " for orders placed by cashout (UI).\n\nlines 46-49:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "strategy_name_hash = current_order.customer_order_ref[            :STRATEGY_NAME_HASH_LENGTH]\norder_id = current_order.customer_order_ref[STRATEGY_NAME_HASH_LENGTH + 1 :]"
                            }
                        ],
                        "border": 0
                    }
                ]
            }
        ]
    }
]