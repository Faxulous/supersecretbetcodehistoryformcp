[
    {
        "user": "U01EZ613ZCZ",
        "type": "message",
        "ts": "1605615266.009100",
        "client_msg_id": "7a3b730a-5b84-49a8-84e6-426d06079272",
        "text": "Hi all,\n\nI'm wondering, if it's possible and if so, what's the best outlet for consuming historical exchange prices over time periods throughout the day for Horse Racing.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gee1fd669100",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ee1fd6691003d1a11867dc2baf04174d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "Graham",
            "display_name": "Graham",
            "team": "T4G9NBD2M",
            "name": "sharkey88",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wKVq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi all,\n\nI'm wondering, if it's possible and if so, what's the best outlet for consuming historical exchange prices over time periods throughout the day for Horse Racing."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1605615558.009600",
        "client_msg_id": "131b13d7-c9d5-4a47-b568-37519af751d9",
        "text": "Can you be more specific? Are you talking about the official Betfair historic data? Data that you have scraped yourself?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7Vf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Can you be more specific? Are you talking about the official Betfair historic data? Data that you have scraped yourself?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01EZ613ZCZ",
        "type": "message",
        "ts": "1605615589.010100",
        "client_msg_id": "4f86462a-3f18-49bd-94f6-50e5e8caca97",
        "text": "yes, that was quite vague. Official data if possible.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gee1fd669100",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ee1fd6691003d1a11867dc2baf04174d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "Graham",
            "display_name": "Graham",
            "team": "T4G9NBD2M",
            "name": "sharkey88",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aR8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "yes, that was quite vague. Official data if possible."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01EZ613ZCZ",
        "type": "message",
        "ts": "1605615643.011100",
        "client_msg_id": "450798ea-f135-45fb-988f-d487f9225444",
        "text": "in fact, even if it isn't I don't mind too much. I know of some pieces of software the capture it, but wondering if it was accessible outside of those services.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gee1fd669100",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ee1fd6691003d1a11867dc2baf04174d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "Graham",
            "display_name": "Graham",
            "team": "T4G9NBD2M",
            "name": "sharkey88",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Qu3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "in fact, even if it isn't I don't mind too much. I know of some pieces of software the capture it, but wondering if it was accessible outside of those services."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1605615677.011300",
        "edited": {
            "user": "UBS7QANF3",
            "ts": "1605615705.000000"
        },
        "client_msg_id": "2c61b936-e71b-422c-be3d-e684f7756452",
        "text": "betfairlightweight can handle the official historic data. Start here: <https:\/\/github.com\/liampauling\/betfair\/blob\/master\/examples\/examplestreaminghistorical.py>",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "fallback": "[liampauling\/betfair] examples\/examplestreaminghistorical.py",
                "text": "```\nimport logging\n\nimport betfairlightweight\nfrom betfairlightweight import StreamListener\n\n\"\"\"\nData needs to be downloaded from:\n    <https:\/\/historicdata.betfair.com>\n\"\"\"\n\n# setup logging\nlogging.basicConfig(level=<http:\/\/logging.INFO|logging.INFO>)\n\n# create trading instance (don't need username\/password)\ntrading = betfairlightweight.APIClient(\"username\", \"password\")\n\n# create listener\nlistener = StreamListener(max_latency=None)\n\n# create historical stream (update file_path to your file location)\nstream = trading.streaming.create_historical_generator_stream(\n    file_path=\"\/tmp\/BASIC-1.132153978\",\n    listener=listener,\n)\n\n# create generator\ngen = stream.get_generator()\n\n# print marketBooks\nfor market_books in gen():\n    for market_book in market_books:\n        print(market_book)\n\n# print based on seconds to start\nfor market_books in gen():\n    for market_book in market_books:\n        seconds_to_start = (\n            market_book.market_definition.market_time - market_book.publish_time\n        ).total_seconds()\n        if seconds_to_start &lt; 100:\n            print(market_book.market_id, seconds_to_start, market_book.total_matched)\n\n        # print winner details once market is closed\n        if market_book.status == \"CLOSED\":\n            for runner in market_book.runners:\n                if runner.status == \"WINNER\":\n                    print(\n                        \"{0}: {1} with sp of {2}\".format(\n                            runner.status, runner.selection_id, runner.sp.actual_sp\n                        )\n                    )\n\n# record prices to a file\nwith open(\"output.txt\", \"w\") as output:\n    output.write(\"Time,MarketId,Status,Inplay,SelectionId,LastPriceTraded\\n\")\n\nfor market_books in gen():\n    for market_book in market_books:\n        with open(\"output.txt\", \"a\") as output:\n            for runner in market_book.runners:\n                # how to get runner details from the market definition\n                market_def = market_book.market_definition\n                runners_dict = {\n                    (runner.selection_id, runner.handicap): runner\n                    for runner in market_def.runners\n                }\n                runner_def = runners_dict.get((runner.selection_id, runner.handicap))\n\n                output.write(\n                    \"%s,%s,%s,%s,%s,%s\\n\"\n                    % (\n                        market_book.publish_time,\n                        market_book.market_id,\n                        market_book.status,\n                        market_book.inplay,\n                        runner.selection_id,\n                        runner.last_price_traded or \"\",\n                    )\n                )\n\n```",
                "title": "examples\/examplestreaminghistorical.py",
                "footer": "<https:\/\/github.com\/liampauling\/betfair|liampauling\/betfair>",
                "id": 1,
                "title_link": "https:\/\/github.com\/liampauling\/betfair\/blob\/master\/examples\/examplestreaminghistorical.py",
                "footer_icon": "https:\/\/github.githubassets.com\/favicon.ico",
                "color": "24292f",
                "mrkdwn_in": [
                    "text"
                ],
                "bot_id": "B01144Z0734",
                "app_unfurl_url": "https:\/\/github.com\/liampauling\/betfair\/blob\/master\/examples\/examplestreaminghistorical.py",
                "is_app_unfurl": true
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DJMCd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "betfairlightweight can handle the official historic data. Start here: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/liampauling\/betfair\/blob\/master\/examples\/examplestreaminghistorical.py"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "white_check_mark",
                "users": [
                    "U01EZ613ZCZ"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UUCD6P13J",
        "type": "message",
        "ts": "1605633703.013100",
        "client_msg_id": "10edb069-0671-485a-8045-037d0ffee99f",
        "text": "Am i right in my understanding, I pay the NSW turnover charge if i match over $6k of back bets in a week. Otherwise I just pay the market base rate + PC?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g6898272ab81",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6898272ab810e419c2c9ca9af1e53da8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0012-72.png",
            "first_name": "Lee",
            "real_name": "Lee U",
            "display_name": "Lee",
            "team": "T4G9NBD2M",
            "name": "lunswor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lBL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Am i right in my understanding, I pay the NSW turnover charge if i match over $6k of back bets in a week. Otherwise I just pay the market base rate + PC?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UV6F64HPG",
        "type": "message",
        "ts": "1605634838.015500",
        "client_msg_id": "28CB1A9D-67F8-4151-8D3C-4A672C0A364C",
        "text": "I would avoid any markets that have a turnover charge. It’s not a percentage of profit.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "c268dc84f257",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-08-18\/1312781667300_c268dc84f257fee36619_72.png",
            "first_name": "Amanda",
            "real_name": "Amanda",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "amandahere2020",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kdVh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I would avoid any markets that have a turnover charge. It’s not a percentage of profit."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UPMUFSGCR"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U016TGY3676",
        "type": "message",
        "ts": "1605646326.022600",
        "edited": {
            "user": "U016TGY3676",
            "ts": "1605646372.000000"
        },
        "client_msg_id": "c589a9b1-2e33-4222-8334-4fbedf02500a",
        "text": "Anyone know of a way to track approximate progress from python multiprocessing? This is specifically for Flumine backtesting but I have no idea how long the backtest will take. In single processes, it's easy enough to keep track of the market count vs total markets (file paths) and calculate % progress, but it's not so easy when multiprocessing.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g6a681220e11",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6a681220e11c1a2ed3685375d658dadb.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "",
            "real_name": "birchy",
            "display_name": "birchy",
            "team": "T4G9NBD2M",
            "name": "birchy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EIZ+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Anyone know of a way to track approximate progress from python multiprocessing? This is specifically for Flumine backtesting but I have no idea how long the backtest will take. In single processes, it's easy enough to keep track of the market count vs total markets (file paths) and calculate % progress, but it's not so easy when multiprocessing."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUCD6P13J",
        "type": "message",
        "ts": "1605646525.023500",
        "client_msg_id": "ef1be8ce-cda4-4201-9e60-4e807206c77d",
        "text": "```with futures.ProcessPoolExecutor(max_workers=multiprocessing.cpu_count()) as pool:\n    results = [\n        pool.submit(backtest_market, markets=[market], strategy_cls=strategy_cls)\n        for market in markets\n    ]\n    for _ in tqdm(futures.as_completed(results), total=len(results)):\n        pass```\n",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g6898272ab81",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6898272ab810e419c2c9ca9af1e53da8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0012-72.png",
            "first_name": "Lee",
            "real_name": "Lee U",
            "display_name": "Lee",
            "team": "T4G9NBD2M",
            "name": "lunswor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1605646525.023500",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1605656908.033000",
        "reply_users": [
            "U016TGY3676"
        ],
        "replies": [
            {
                "user": "U016TGY3676",
                "ts": "1605656908.033000"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oeSwi",
                "elements": [
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "with futures.ProcessPoolExecutor(max_workers=multiprocessing.cpu_count()) as pool:\n    results = [\n        pool.submit(backtest_market, markets=[market], strategy_cls=strategy_cls)\n        for market in markets\n    ]\n    for _ in tqdm(futures.as_completed(results), total=len(results)):\n        pass"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": []
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UBS7QANF3",
                    "U016TGY3676",
                    "UU1URJ8L8"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "U01C12ZEADQ",
        "type": "message",
        "ts": "1605648245.023900",
        "client_msg_id": "65180d3a-ac62-45d6-afbb-466f7cbff5a6",
        "text": "tqdm",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "e3b7687b0ef8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-10-06\/1432945617648_e3b7687b0ef86e4f28b8_72.png",
            "first_name": "Alessio",
            "real_name": "Alessio",
            "display_name": "Alessio",
            "team": "T4G9NBD2M",
            "name": "alessio",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xrXI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "tqdm"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013KSMFN85",
        "type": "message",
        "ts": "1605651073.026500",
        "edited": {
            "user": "U013KSMFN85",
            "ts": "1605651336.000000"
        },
        "client_msg_id": "d40614aa-2195-48d9-a694-8673e1ec38c9",
        "text": "Apologies if this is an obvious question, but is there a way to go from a json serialised MarketBook object to a new MarketBook object?\n```#m_book is a valid MarketBook\nj = m_book.json()\n\n# Solution is:\ncopied_m_book = MarketBook(**json.loads(j))```",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g20ba476642e",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/20ba476642e860bb94a0092f414abdf5.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0026-72.png",
            "first_name": "",
            "real_name": "Vincent Mele",
            "display_name": "Vincent Mele",
            "team": "T4G9NBD2M",
            "name": "vincentmele",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NmP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Apologies if this is an obvious question, but is there a way to go from a json serialised MarketBook object to a new MarketBook object?\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "#m_book is a valid MarketBook\nj = m_book.json()\n\n# Solution is:\ncopied_m_book = MarketBook(**json.loads(j))"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1605651150.027400",
        "edited": {
            "user": "UBS7QANF3",
            "ts": "1605651174.000000"
        },
        "client_msg_id": "3FA8D6AE-28A4-4A61-B3B2-3BBB8CAC8EF1",
        "text": "MarketBook(**json.loads(j))?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9Wq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "MarketBook(**json.loads(j))?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013KSMFN85",
        "type": "message",
        "ts": "1605651218.027800",
        "client_msg_id": "d38f17ac-bf0f-49cd-bc01-b1acb7d445f0",
        "text": "Perfect, that's it. Thank you :-)",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g20ba476642e",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/20ba476642e860bb94a0092f414abdf5.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0026-72.png",
            "first_name": "",
            "real_name": "Vincent Mele",
            "display_name": "Vincent Mele",
            "team": "T4G9NBD2M",
            "name": "vincentmele",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "g7i1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Perfect, that's it. Thank you :-)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U016535QCJ2",
        "type": "message",
        "ts": "1605651550.028400",
        "client_msg_id": "d27efffa-a129-4d2a-98bf-c54b344ff7c4",
        "text": "You're not copying by serialising and deserialising are you?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "048f61bdc189",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-01\/1216267094995_048f61bdc189acecaafc_72.jpg",
            "first_name": "Misha",
            "real_name": "Misha Charrett",
            "display_name": "Misha",
            "team": "T4G9NBD2M",
            "name": "misha",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "f\/S",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You're not copying by serialising and deserialising are you?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013KSMFN85",
        "type": "message",
        "ts": "1605651738.030300",
        "client_msg_id": "86beb051-2b89-4ddd-860a-9b20d4fac3df",
        "text": "No, I'm trying to serialize historic streaming data at checkpoints (like 30 seconds to start time) and then store that snapshot in Postgres (as jsonb) for feature building and examination in the future at a lower resolution than streaming ticks.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g20ba476642e",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/20ba476642e860bb94a0092f414abdf5.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0026-72.png",
            "first_name": "",
            "real_name": "Vincent Mele",
            "display_name": "Vincent Mele",
            "team": "T4G9NBD2M",
            "name": "vincentmele",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ng4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "No, I'm trying to serialize historic streaming data at checkpoints (like 30 seconds to start time) and then store that snapshot in Postgres (as jsonb) for feature building and examination in the future at a lower resolution than streaming ticks."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U016535QCJ2",
        "type": "message",
        "ts": "1605651926.031900",
        "edited": {
            "user": "U016535QCJ2",
            "ts": "1605651939.000000"
        },
        "client_msg_id": "526b0d39-9dc5-431c-b488-564c8a64c7b5",
        "text": "Just noting (with all the performance discussion), that in terms of performance, serialisation and deserialisation is very slow, and should be done as little as possible)",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "048f61bdc189",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-01\/1216267094995_048f61bdc189acecaafc_72.jpg",
            "first_name": "Misha",
            "real_name": "Misha Charrett",
            "display_name": "Misha",
            "team": "T4G9NBD2M",
            "name": "misha",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "54jQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Just noting (with all the performance discussion), that in terms of performance, serialisation and deserialisation is very slow, and should be done as little as possible)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U016535QCJ2",
        "type": "message",
        "ts": "1605651994.032900",
        "client_msg_id": "42ab7e20-7001-49db-8f25-13edbfbd4589",
        "text": "It's several orders of magnitude slower than manipulation of in-memory fields (with C#)",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "048f61bdc189",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-01\/1216267094995_048f61bdc189acecaafc_72.jpg",
            "first_name": "Misha",
            "real_name": "Misha Charrett",
            "display_name": "Misha",
            "team": "T4G9NBD2M",
            "name": "misha",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tCz5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's several orders of magnitude slower than manipulation of in-memory fields (with C#)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U016TGY3676",
        "type": "message",
        "ts": "1605656908.033000",
        "client_msg_id": "da9851dc-fec1-4518-b2e9-f3aa09d66d90",
        "text": "Did see `tqdm` mentioned on a couple of SO discussions, but not tried it yet as I thought there may have been a native way to achieve it via shared memory queues or similar. I'm currently using `ProcessPoolExecutor.map()` rather than `submit()` as it's a bit faster due to the way it chunks the data.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g6a681220e11",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6a681220e11c1a2ed3685375d658dadb.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "",
            "real_name": "birchy",
            "display_name": "birchy",
            "team": "T4G9NBD2M",
            "name": "birchy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1605646525.023500",
        "parent_user_id": "UUCD6P13J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "C\/PM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Did see "
                            },
                            {
                                "type": "text",
                                "text": "tqdm",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " mentioned on a couple of SO discussions, but not tried it yet as I thought there may have been a native way to achieve it via shared memory queues or similar. I'm currently using "
                            },
                            {
                                "type": "text",
                                "text": "ProcessPoolExecutor.map()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " rather than "
                            },
                            {
                                "type": "text",
                                "text": "submit()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " as it's a bit faster due to the way it chunks the data."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]