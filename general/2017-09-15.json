[
    {
        "user": "U5D4ZBEAG",
        "type": "message",
        "ts": "1505467709.000018",
        "text": "<@U4H19D1D2> got a number of RunnerCatalogue's with missing init args last night",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g147ed91a398",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7147ed91a39866d363a9cfa66ef64cb8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "seaders",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "seaders",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XOg0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U4H19D1D2"
                            },
                            {
                                "type": "text",
                                "text": " got a number of RunnerCatalogue's with missing init args last night"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5D4ZBEAG",
        "type": "message",
        "ts": "1505467743.000023",
        "text": "```\n   File \"\/home\/ubuntu\/Envs\/bfstream\/lib\/python2.7\/site-packages\/betfairlightweight\/endpoints\/betting.py\", line 158, in list_market_catalogue\n    return self.process_response(response, resources.MarketCatalogue, elapsed_time, lightweight)\n  File \"\/home\/ubuntu\/Envs\/bfstream\/lib\/python2.7\/site-packages\/betfairlightweight\/endpoints\/baseendpoint.py\", line 100, in process_response\n    return [resource(elapsed_time=elapsed_time, **x) for x in result]\n  File \"\/home\/ubuntu\/Envs\/bfstream\/lib\/python2.7\/site-packages\/betfairlightweight\/resources\/bettingresources.py\", line 248, in __init__\n    self.runners = [RunnerCatalogue(**i) for i in kwargs.get('runners', [])]\nTypeError: __init__() takes at least 5 arguments (4 given)```",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g147ed91a398",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7147ed91a39866d363a9cfa66ef64cb8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "seaders",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "seaders",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OTnB+",
                "elements": [
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "   File \"\/home\/ubuntu\/Envs\/bfstream\/lib\/python2.7\/site-packages\/betfairlightweight\/endpoints\/betting.py\", line 158, in list_market_catalogue\n    return self.process_response(response, resources.MarketCatalogue, elapsed_time, lightweight)\n  File \"\/home\/ubuntu\/Envs\/bfstream\/lib\/python2.7\/site-packages\/betfairlightweight\/endpoints\/baseendpoint.py\", line 100, in process_response\n    return [resource(elapsed_time=elapsed_time, **x) for x in result]\n  File \"\/home\/ubuntu\/Envs\/bfstream\/lib\/python2.7\/site-packages\/betfairlightweight\/resources\/bettingresources.py\", line 248, in __init__\n    self.runners = [RunnerCatalogue(**i) for i in kwargs.get('runners', [])]\nTypeError: __init__() takes at least 5 arguments (4 given)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5D4ZBEAG",
        "type": "message",
        "ts": "1505467775.000424",
        "text": "on my local branch, I've converted RunnerCatalogue to the anonymous kwargs design you're moving to",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g147ed91a398",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7147ed91a39866d363a9cfa66ef64cb8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "seaders",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "seaders",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "en\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "on my local branch, I've converted RunnerCatalogue to the anonymous kwargs design you're moving to"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5D4ZBEAG",
        "type": "message",
        "ts": "1505467787.000134",
        "text": "was just thinking though, for bug-tracking purposes",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g147ed91a398",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7147ed91a39866d363a9cfa66ef64cb8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "seaders",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "seaders",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DMVVe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "was just thinking though, for bug-tracking purposes"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5D4ZBEAG",
        "type": "message",
        "ts": "1505467875.000089",
        "text": "to wrap process_response in try\/catch, and catch and raise any error there, but with a `invalid_response` field (or something like that) that preserves the unhandled response from BF?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g147ed91a398",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7147ed91a39866d363a9cfa66ef64cb8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "seaders",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "seaders",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7222",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "to wrap process_response in try\/catch, and catch and raise any error there, but with a "
                            },
                            {
                                "type": "text",
                                "text": "invalid_response",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " field (or something like that) that preserves the unhandled response from BF?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5D4ZBEAG",
        "type": "message",
        "ts": "1505467933.000106",
        "text": "so that when it bubbles up, we could check a `BetFairLightweightError.invalid_response` to know exactly what's breaking the response processor",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g147ed91a398",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7147ed91a39866d363a9cfa66ef64cb8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "seaders",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "seaders",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BlKPP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "so that when it bubbles up, we could check a "
                            },
                            {
                                "type": "text",
                                "text": "BetFairLightweightError.invalid_response",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to know exactly what's breaking the response processor"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5D4ZBEAG",
        "type": "message",
        "ts": "1505468069.000085",
        "text": "like, per BF's documentation, <http:\/\/docs.developer.betfair.com\/docs\/display\/1smk3cen4v3lu3yomq5qye0ni\/Betting+Type+Definitions#BettingTypeDefinitions-RunnerCatalog> what you have should work, but they were obviously not sending one of selectionId, runnerName, handicap or sortPriority, but ew don't see that because the response is swallowed &amp; lost with the exception",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g147ed91a398",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7147ed91a39866d363a9cfa66ef64cb8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "seaders",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "seaders",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Z5bb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "like, per BF's documentation, "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/docs.developer.betfair.com\/docs\/display\/1smk3cen4v3lu3yomq5qye0ni\/Betting+Type+Definitions#BettingTypeDefinitions-RunnerCatalog"
                            },
                            {
                                "type": "text",
                                "text": " what you have should work, but they were obviously not sending one of selectionId, runnerName, handicap or sortPriority, but ew don't see that because the response is swallowed & lost with the exception"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]