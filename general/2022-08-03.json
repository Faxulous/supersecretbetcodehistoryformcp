[
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1659594636.093779",
        "client_msg_id": "d93301c8-178f-440d-b7c4-03be318ce570",
        "text": "Does anyone have any tips for organising backtest results? The output of my backtests is one file per event so each backtest occupies a single directory. I'm currently distinguishing between the different parameters used in each backtest in the directory name but this is quickly becoming unwieldy as I add more parameters and it's hardly the best way to encode this information. For example:\n\n```...\/backtests\/results-new-min-roi-0.0-max-roi-120.0-max-price-1000-bankroll-10000-bet-latency-100ms-cooldown-20000ms-entire-race-with-tags```\nI'm thinking of having some kind of \"meta file\" in each backtest directory that could contain these parameters and other useful information for example:\n\n```{\n    \"git_commit\": \"00e8402a7395de0b91d24a2fa15953a9f3271dca\",\n    \"number_of_events\": 19214,\n    \"event_status_breakdown\": {\n        \"SUCCESS\": 12007,\n        \"ERROR\": 43,\n        \"MISSING_DATA\": 7167\n    },\n    \"parameters\": {\n        \"min_roi\": 0.0,\n        \"max_roi\": 120.0,\n        ...\n    },\n    \"profit\": -143762.12,\n    ...\n}```\nand\/or possibly have a top-level index of the backtests, either in a flat file or SQLite database and then the directories can have uninformative names like \"00000043\" or \"cc097b8048064a3acd969de313e52f9b3fd896c7\"",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1659594636.093779",
        "reply_count": 25,
        "reply_users_count": 8,
        "latest_reply": "1659704310.583139",
        "reply_users": [
            "URMM9463X",
            "U02RN7YDRQ9",
            "U01C12ZEADQ",
            "UBS7QANF3",
            "U01DCR5PXDY",
            "U02GGCCLTKM",
            "U4H19D1D2",
            "U02JKLK9B0V"
        ],
        "replies": [
            {
                "user": "URMM9463X",
                "ts": "1659596534.705959"
            },
            {
                "user": "U02RN7YDRQ9",
                "ts": "1659602091.134869"
            },
            {
                "user": "U01C12ZEADQ",
                "ts": "1659602096.896899"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1659602280.212739"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1659602514.849229"
            },
            {
                "user": "U01C12ZEADQ",
                "ts": "1659602734.552359"
            },
            {
                "user": "U01C12ZEADQ",
                "ts": "1659602774.571259"
            },
            {
                "user": "U01C12ZEADQ",
                "ts": "1659603237.224799"
            },
            {
                "user": "URMM9463X",
                "ts": "1659604584.108679"
            },
            {
                "user": "U01C12ZEADQ",
                "ts": "1659604750.144689"
            },
            {
                "user": "U01C12ZEADQ",
                "ts": "1659604849.248779"
            },
            {
                "user": "URMM9463X",
                "ts": "1659605661.761159"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1659608412.957549"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1659608488.406469"
            },
            {
                "user": "U01C12ZEADQ",
                "ts": "1659608779.881619"
            },
            {
                "user": "U01DCR5PXDY",
                "ts": "1659616456.084099"
            },
            {
                "user": "U01C12ZEADQ",
                "ts": "1659616710.132309"
            },
            {
                "user": "U01DCR5PXDY",
                "ts": "1659616794.523309"
            },
            {
                "user": "U02GGCCLTKM",
                "ts": "1659617046.479059"
            },
            {
                "user": "URMM9463X",
                "ts": "1659617903.130379"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1659636384.109739"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1659637110.405629"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1659639445.141969"
            },
            {
                "user": "U02JKLK9B0V",
                "ts": "1659688883.251159"
            },
            {
                "user": "U01C12ZEADQ",
                "ts": "1659704310.583139"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1659704310.583139",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "37=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Does anyone have any tips for organising backtest results? The output of my backtests is one file per event so each backtest occupies a single directory. I'm currently distinguishing between the different parameters used in each backtest in the directory name but this is quickly becoming unwieldy as I add more parameters and it's hardly the best way to encode this information. For example:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "...\/backtests\/results-new-min-roi-0.0-max-roi-120.0-max-price-1000-bankroll-10000-bet-latency-100ms-cooldown-20000ms-entire-race-with-tags"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nI'm thinking of having some kind of \"meta file\" in each backtest directory that could contain these parameters and other useful information for example:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "{\n    \"git_commit\": \"00e8402a7395de0b91d24a2fa15953a9f3271dca\",\n    \"number_of_events\": 19214,\n    \"event_status_breakdown\": {\n        \"SUCCESS\": 12007,\n        \"ERROR\": 43,\n        \"MISSING_DATA\": 7167\n    },\n    \"parameters\": {\n        \"min_roi\": 0.0,\n        \"max_roi\": 120.0,\n        ...\n    },\n    \"profit\": -143762.12,\n    ...\n}"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nand\/or possibly have a top-level index of the backtests, either in a flat file or SQLite database and then the directories can have uninformative names like \"00000043\" or \"cc097b8048064a3acd969de313e52f9b3fd896c7\""
                            }
                        ]
                    }
                ]
            }
        ]
    }
]