[
    {
        "user": "U01FQH5FA8M",
        "type": "message",
        "ts": "1613813273.000200",
        "client_msg_id": "2f566eeb-d4ff-4eab-a6f7-f559a7745225",
        "text": "I wish I'd never mentioned the tie breaking idea... but do you dispute my more general point, namely \"if you have multiple imperfect forecasters of something then employing a weighted sum of their estimates will yield greater accuracy than simply choosing the best of them. You can tune the weights from historical data.\"",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "c2ad96dd9f4b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-11-30\/1550305177569_c2ad96dd9f4b70daf43d_72.jpg",
            "first_name": "Michael",
            "real_name": "Michael Reiss",
            "display_name": "Mick",
            "team": "T4G9NBD2M",
            "name": "reissgo",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613752022.127700",
        "parent_user_id": "U01FQH5FA8M",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "z4b",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I wish I'd never mentioned the tie breaking idea... but do you dispute my more general point, namely \"if you have multiple imperfect forecasters of something then employing a weighted sum of their estimates will yield greater accuracy than simply choosing the best of them. You can tune the weights from historical data.\""
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0128E7BEHW",
        "type": "message",
        "ts": "1613814532.000400",
        "client_msg_id": "dac46a9c-58ae-4fc9-a050-263ecb9970f9",
        "text": "Ensembles are a very popular modelling technique yes.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb57a2bdd15a",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b57a2bdd15acccdb845ce257f38940cc.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Dave",
            "real_name": "Dave R",
            "display_name": "Dave",
            "team": "T4G9NBD2M",
            "name": "d7m",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613752022.127700",
        "parent_user_id": "U01FQH5FA8M",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3oTj3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ensembles are a very popular modelling technique yes."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01FQH5FA8M",
        "type": "message",
        "ts": "1613814850.000600",
        "client_msg_id": "31a4f9c3-9679-49fc-a80d-656df861ba60",
        "text": "We're on the same page then. Good.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "c2ad96dd9f4b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-11-30\/1550305177569_c2ad96dd9f4b70daf43d_72.jpg",
            "first_name": "Michael",
            "real_name": "Michael Reiss",
            "display_name": "Mick",
            "team": "T4G9NBD2M",
            "name": "reissgo",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613752022.127700",
        "parent_user_id": "U01FQH5FA8M",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SI7hi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "We're on the same page then. Good."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01FQH5FA8M",
        "type": "message",
        "ts": "1613815068.000800",
        "client_msg_id": "a294c560-cc1c-4eec-b90a-4f8ce78a6d6a",
        "text": "That's why I was hoping to find scrapable sources of predictions and\/or ratings even if they're not great quality.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "c2ad96dd9f4b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-11-30\/1550305177569_c2ad96dd9f4b70daf43d_72.jpg",
            "first_name": "Michael",
            "real_name": "Michael Reiss",
            "display_name": "Mick",
            "team": "T4G9NBD2M",
            "name": "reissgo",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613752022.127700",
        "parent_user_id": "U01FQH5FA8M",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "l5nr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That's why I was hoping to find scrapable sources of predictions and\/or ratings even if they're not great quality."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0128E7BEHW",
        "type": "message",
        "ts": "1613818642.001100",
        "client_msg_id": "4f447aad-9447-44ca-a846-4419775baef0",
        "text": "Good luck with it!",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb57a2bdd15a",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b57a2bdd15acccdb845ce257f38940cc.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Dave",
            "real_name": "Dave R",
            "display_name": "Dave",
            "team": "T4G9NBD2M",
            "name": "d7m",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613752022.127700",
        "parent_user_id": "U01FQH5FA8M",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2\/aa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Good luck with it!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01B8031PM1",
        "type": "message",
        "ts": "1613844912.003300",
        "client_msg_id": "3a997653-af59-4bce-8fe7-3b93d8a96029",
        "text": "currently access live orders from the blotter but I see that there is also these in `RunnerBook`:\n```self.orders = [RunnerBookOrder(**i) for i in orders] if orders else []\nself.matches = [RunnerBookMatch(**i) for i in matches] if matches else []```\nIn back test at least these are staying empty. Could you please let me know how I can populate these data structures. Thanks",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g6e482a0e41b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6e482a0e41b232f48d801454006dfa56.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "river_shah",
            "real_name": "river_shah",
            "display_name": "river_shah",
            "team": "T4G9NBD2M",
            "name": "ansar.sa",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CUXVW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "currently access live orders from the blotter but I see that there is also these in "
                            },
                            {
                                "type": "text",
                                "text": "RunnerBook",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ":\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "self.orders = [RunnerBookOrder(**i) for i in orders] if orders else []\nself.matches = [RunnerBookMatch(**i) for i in matches] if matches else []"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In back test at least these are staying empty. Could you please let me know how I can populate these data structures. Thanks"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1613845013.003600",
        "client_msg_id": "94343D15-9B48-4FEF-BDD8-626E09F600DE",
        "text": "Not populated when streaming ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6wDM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not populated when streaming "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUZNBS732",
        "type": "message",
        "ts": "1613853949.006200",
        "client_msg_id": "f7b6df4e-2a7c-4505-a0d6-e604a7bdcee8",
        "text": "Hi everyone, long time lurker first time poster. How would I get a rolling 2 minute window of total volume traded for each runner every 30 seconds on the streaming data?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g833f8ac2ec1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/833f8ac2ec17481fecd511b5dec7a12a.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "",
            "real_name": "Richard",
            "display_name": "Richard",
            "team": "T4G9NBD2M",
            "name": "quantitativekid",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "07U",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi everyone, long time lurker first time poster. How would I get a rolling 2 minute window of total volume traded for each runner every 30 seconds on the streaming data?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "ULDAVFDRP",
        "type": "message",
        "ts": "1613855769.007100",
        "client_msg_id": "a465d59a-d03d-44f9-8fd6-02c9fa95480c",
        "text": "not sure if liam has implemented anything specific, but sounds just like you need to capture the trade volume a x secs, then capture at x + 30 secs and find the delta",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g46fe1c1bf03",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b46fe1c1bf03e18d951e7032fb494283.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "",
            "real_name": "Oliver Varney",
            "display_name": "Oliver Varney",
            "team": "T4G9NBD2M",
            "name": "oliverashleyvarney",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yhMJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "not sure if liam has implemented anything specific, but sounds just like you need to capture the trade volume a x secs, then capture at x + 30 secs and find the delta"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U016535QCJ2",
        "type": "message",
        "ts": "1613858971.008400",
        "client_msg_id": "339f3a9b-6a1c-41c2-8e77-356f5d266ad3",
        "text": "To do a true rolling window is hard. You need to keep all the updates in a list, and every time you check remove updates older than your time period. Then do a delta between first and last",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "048f61bdc189",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-01\/1216267094995_048f61bdc189acecaafc_72.jpg",
            "first_name": "Misha",
            "real_name": "Misha Charrett",
            "display_name": "Misha",
            "team": "T4G9NBD2M",
            "name": "misha",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GNEN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "To do a true rolling window is hard. You need to keep all the updates in a list, and every time you check remove updates older than your time period. Then do a delta between first and last"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U016535QCJ2",
        "type": "message",
        "ts": "1613859002.009000",
        "client_msg_id": "23dce8fe-d78b-48d3-8d48-4ee373ccc231",
        "text": "Would have to be heavily optimised if you do so for a decent number of markets",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "048f61bdc189",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-01\/1216267094995_048f61bdc189acecaafc_72.jpg",
            "first_name": "Misha",
            "real_name": "Misha Charrett",
            "display_name": "Misha",
            "team": "T4G9NBD2M",
            "name": "misha",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "28ZSC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Would have to be heavily optimised if you do so for a decent number of markets"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U016535QCJ2",
        "type": "message",
        "ts": "1613859072.009800",
        "client_msg_id": "6b4d1616-5f74-4f18-bec9-b6fa47e9ccf2",
        "text": "The approximation above is a lot easier and may well do for your needs",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "048f61bdc189",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-01\/1216267094995_048f61bdc189acecaafc_72.jpg",
            "first_name": "Misha",
            "real_name": "Misha Charrett",
            "display_name": "Misha",
            "team": "T4G9NBD2M",
            "name": "misha",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wHLH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The approximation above is a lot easier and may well do for your needs"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UPMUFSGCR",
        "type": "message",
        "ts": "1613859124.010100",
        "client_msg_id": "3acaf639-5304-447b-ad55-0f00c74f20db",
        "text": "I do something similar on most horse markets using a linked list datastructure. It doesn't seem to use that much CPU.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "31c0bb5a442c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-28\/812386967189_31c0bb5a442c5b8d2c61_72.png",
            "first_name": "Jon",
            "real_name": "Jon Jon Jon Jon Jon Jon Jon Jon",
            "display_name": "Jonjonjon",
            "team": "T4G9NBD2M",
            "name": "fcmisc",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6jKQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I do something similar on most horse markets using a linked list datastructure. It doesn't seem to use that much CPU."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U016535QCJ2",
        "type": "message",
        "ts": "1613859309.012900",
        "edited": {
            "user": "U016535QCJ2",
            "ts": "1613859383.000000"
        },
        "client_msg_id": "58c022a0-ed62-4b8a-9760-de7d3ca3bff6",
        "text": "I have an optimised design that uses lists filled out with one second intervals that link to a sparse list\/array with actual data objects. The lists you read from are indexed by second so easy to find data at any delta instantly. Referencing the same object multiple times in the current list ensures you only have one instance that can be represented in the list multiple times",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "048f61bdc189",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-01\/1216267094995_048f61bdc189acecaafc_72.jpg",
            "first_name": "Misha",
            "real_name": "Misha Charrett",
            "display_name": "Misha",
            "team": "T4G9NBD2M",
            "name": "misha",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NJA58",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have an optimised design that uses lists filled out with one second intervals that link to a sparse list\/array with actual data objects. The lists you read from are indexed by second so easy to find data at any delta instantly. Referencing the same object multiple times in the current list ensures you only have one instance that can be represented in the list multiple times"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "sunglasses",
                "users": [
                    "UPMUFSGCR"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U0135SLHQBW",
        "type": "message",
        "ts": "1613861954.015000",
        "edited": {
            "user": "U0135SLHQBW",
            "ts": "1613862054.000000"
        },
        "client_msg_id": "1e7b4997-c4db-4e74-9a6e-8c727a242657",
        "text": "If you know the length of your rolling window then you just keep a deque and a count of the volume, append each new update to the back of the deque and increase your volume counter, and check the timestamp on the front item each update. Then each time the front item is too old, you pop from the front and decrease your volume by that amount. Should be O(1) update average case, O(N) worst case (in the case you need to remove every value from the list)",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g316814ce896",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/316814ce896c34a9c72e2ddd6fa17b86.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0007-72.png",
            "first_name": "",
            "real_name": "MacrcoPolo",
            "display_name": "MacrcoPolo",
            "team": "T4G9NBD2M",
            "name": "omverran",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "N\/cc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If you know the length of your rolling window then you just keep a deque and a count of the volume, append each new update to the back of the deque and increase your volume counter, and check the timestamp on the front item each update. Then each time the front item is too old, you pop from the front and decrease your volume by that amount. Should be O(1) update average case, O(N) worst case (in the case you need to remove every value from the list)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U01C12ZEADQ",
                    "U01DCR5PXDY",
                    "U0128E7BEHW",
                    "UUZNBS732"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "U016535QCJ2",
        "type": "message",
        "ts": "1613863067.016300",
        "client_msg_id": "c7b3a783-53b5-4132-952f-2413bf2b30d1",
        "text": "The length of the rolling window is variable. Updates come in at irregular times",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "048f61bdc189",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-01\/1216267094995_048f61bdc189acecaafc_72.jpg",
            "first_name": "Misha",
            "real_name": "Misha Charrett",
            "display_name": "Misha",
            "team": "T4G9NBD2M",
            "name": "misha",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "R5X1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The length of the rolling window is variable. Updates come in at irregular times"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0135SLHQBW",
        "type": "message",
        "ts": "1613863088.016600",
        "client_msg_id": "1ce0c3f7-4a8c-4233-a5aa-57f83e8fc31e",
        "text": "doesn't matter",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g316814ce896",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/316814ce896c34a9c72e2ddd6fa17b86.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0007-72.png",
            "first_name": "",
            "real_name": "MacrcoPolo",
            "display_name": "MacrcoPolo",
            "team": "T4G9NBD2M",
            "name": "omverran",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FQes",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "doesn't matter"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U016535QCJ2",
        "type": "message",
        "ts": "1613863117.017500",
        "client_msg_id": "3ffa5521-e6f4-46d6-8da7-3faadc80ccf4",
        "text": "I keep a link to the object since I may want to calculate anything",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "048f61bdc189",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-01\/1216267094995_048f61bdc189acecaafc_72.jpg",
            "first_name": "Misha",
            "real_name": "Misha Charrett",
            "display_name": "Misha",
            "team": "T4G9NBD2M",
            "name": "misha",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QfsY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I keep a link to the object since I may want to calculate anything"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0135SLHQBW",
        "type": "message",
        "ts": "1613863122.017700",
        "client_msg_id": "5841bdbc-d2f7-437b-b95b-6546b8c4acfe",
        "text": "I mean, if you change the amount of time you're suddenly interested in from 'last 1 minute' to 'last 5' then yeah",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g316814ce896",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/316814ce896c34a9c72e2ddd6fa17b86.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0007-72.png",
            "first_name": "",
            "real_name": "MacrcoPolo",
            "display_name": "MacrcoPolo",
            "team": "T4G9NBD2M",
            "name": "omverran",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bKnJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I mean, if you change the amount of time you're suddenly interested in from 'last 1 minute' to 'last 5' then yeah"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0135SLHQBW",
        "type": "message",
        "ts": "1613863129.018000",
        "client_msg_id": "79c79e4b-1c63-4836-a3ce-abb5efa80df6",
        "text": "yeah in that case better to keep a proper history as you do",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g316814ce896",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/316814ce896c34a9c72e2ddd6fa17b86.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0007-72.png",
            "first_name": "",
            "real_name": "MacrcoPolo",
            "display_name": "MacrcoPolo",
            "team": "T4G9NBD2M",
            "name": "omverran",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yeI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "yeah in that case better to keep a proper history as you do"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U016535QCJ2",
        "type": "message",
        "ts": "1613863142.018300",
        "client_msg_id": "82ac5545-b28e-462c-b823-8589da7a29d5",
        "text": "Calculation is quick",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "048f61bdc189",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-01\/1216267094995_048f61bdc189acecaafc_72.jpg",
            "first_name": "Misha",
            "real_name": "Misha Charrett",
            "display_name": "Misha",
            "team": "T4G9NBD2M",
            "name": "misha",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fx2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Calculation is quick"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUZNBS732",
        "type": "message",
        "ts": "1613884848.024500",
        "client_msg_id": "f3cf22a9-2d6f-449b-baf0-cf59f60903ad",
        "text": "Thanks for the advice I'll experiement with a few of those idea, I tried dataframes, grouping by runner and using a resample window to get my 2 minutes but it is so slow and resource intense. I have come to the conclusion that DataFrames are probably not optimal for this sort of stuff",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g833f8ac2ec1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/833f8ac2ec17481fecd511b5dec7a12a.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "",
            "real_name": "Richard",
            "display_name": "Richard",
            "team": "T4G9NBD2M",
            "name": "quantitativekid",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5m70",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for the advice I'll experiement with a few of those idea, I tried dataframes, grouping by runner and using a resample window to get my 2 minutes but it is so slow and resource intense. I have come to the conclusion that DataFrames are probably not optimal for this sort of stuff"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U016535QCJ2",
        "type": "message",
        "ts": "1613885047.026100",
        "client_msg_id": "5624a14e-77d5-4fec-93de-896cde3a7f85",
        "text": "You need a sorted list. Keep everything in the time window plus one reading earlier. Every time you read from the list, check the oldest and keep deleting till you have just one older than the time window. The delta between first and last is what you want",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "048f61bdc189",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-01\/1216267094995_048f61bdc189acecaafc_72.jpg",
            "first_name": "Misha",
            "real_name": "Misha Charrett",
            "display_name": "Misha",
            "team": "T4G9NBD2M",
            "name": "misha",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "I10n",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You need a sorted list. Keep everything in the time window plus one reading earlier. Every time you read from the list, check the oldest and keep deleting till you have just one older than the time window. The delta between first and last is what you want"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "raised_hands",
                "users": [
                    "UUZNBS732"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U016535QCJ2",
        "type": "message",
        "ts": "1613885073.026400",
        "client_msg_id": "49af5dde-1622-4b37-9a89-db79c36856ff",
        "text": "That is the most efficient way to do it",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "048f61bdc189",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-01\/1216267094995_048f61bdc189acecaafc_72.jpg",
            "first_name": "Misha",
            "real_name": "Misha Charrett",
            "display_name": "Misha",
            "team": "T4G9NBD2M",
            "name": "misha",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=YEJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That is the most efficient way to do it"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]