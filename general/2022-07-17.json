[
    {
        "user": "U0128E7BEHW",
        "type": "message",
        "ts": "1658055861.565889",
        "client_msg_id": "bdec054b-bb64-4347-af54-939356d9f243",
        "text": "your guess is correct - just check the src\n• .copy() does a slice under the hood: <https:\/\/github.com\/python\/cpython\/blob\/main\/Objects\/listobject.c#L840>\n• slice operator doesn't make copies of the objects when creating the new list (<https:\/\/github.com\/python\/cpython\/blob\/main\/Objects\/listobject.c#L481>)\ngenerally it is the reason why shallow\/deepcopy principle exists (i.e. shallow copying tends to be very common)",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb57a2bdd15a",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b57a2bdd15acccdb845ce257f38940cc.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Dave",
            "real_name": "Dave R",
            "display_name": "Dave",
            "team": "T4G9NBD2M",
            "name": "d7m",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "id": 1,
                "footer_icon": "https:\/\/slack.github.com\/static\/img\/favicon-neutral.png",
                "color": "24292f",
                "bot_id": "B021ZJYSBMW",
                "app_unfurl_url": "https:\/\/github.com\/python\/cpython\/blob\/main\/Objects\/listobject.c#L840",
                "is_app_unfurl": true,
                "app_id": "A01BP7R4KNY",
                "fallback": "<https:\/\/github.com\/python\/cpython\/blob\/main\/Objects\/listobject.c | listobject.c>",
                "title": "<https:\/\/github.com\/python\/cpython\/blob\/main\/Objects\/listobject.c | listobject.c>",
                "footer": "<https:\/\/github.com\/python\/cpython|python\/cpython>",
                "mrkdwn_in": [
                    "text"
                ]
            },
            {
                "id": 2,
                "footer_icon": "https:\/\/slack.github.com\/static\/img\/favicon-neutral.png",
                "color": "24292f",
                "bot_id": "B021ZJYSBMW",
                "app_unfurl_url": "https:\/\/github.com\/python\/cpython\/blob\/main\/Objects\/listobject.c#L481",
                "is_app_unfurl": true,
                "app_id": "A01BP7R4KNY",
                "fallback": "<https:\/\/github.com\/python\/cpython\/blob\/main\/Objects\/listobject.c | listobject.c>",
                "title": "<https:\/\/github.com\/python\/cpython\/blob\/main\/Objects\/listobject.c | listobject.c>",
                "footer": "<https:\/\/github.com\/python\/cpython|python\/cpython>",
                "mrkdwn_in": [
                    "text"
                ]
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "At1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "your guess is correct - just check the src\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": ".copy() does a slice under the hood: "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/github.com\/python\/cpython\/blob\/main\/Objects\/listobject.c#L840"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "slice operator doesn't make copies of the objects when creating the new list ("
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/github.com\/python\/cpython\/blob\/main\/Objects\/listobject.c#L481"
                                    },
                                    {
                                        "type": "text",
                                        "text": ")"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\ngenerally it is the reason why shallow\/deepcopy principle exists (i.e. shallow copying tends to be very common)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U016TGY3676"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U016TGY3676",
        "type": "message",
        "ts": "1658057732.766279",
        "client_msg_id": "3546a749-07b6-4850-8c51-e78f28979664",
        "text": "Now I need to check my boilerplate functions to make sure I'm not accidentally changing anything in Flumine. :grinning: \nFFR this also works as expected:\n`atbs = [d.copy() for d in runner.ex.available_to_back]`",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g6a681220e11",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6a681220e11c1a2ed3685375d658dadb.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "",
            "real_name": "birchy",
            "display_name": "birchy",
            "team": "T4G9NBD2M",
            "name": "birchy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UhRly",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Now I need to check my boilerplate functions to make sure I'm not accidentally changing anything in Flumine. "
                            },
                            {
                                "type": "emoji",
                                "name": "grinning",
                                "unicode": "1f600"
                            },
                            {
                                "type": "text",
                                "text": " \nFFR this also works as expected:\n"
                            },
                            {
                                "type": "text",
                                "text": "atbs = [d.copy() for d in runner.ex.available_to_back]",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0128E7BEHW",
        "type": "message",
        "ts": "1658059652.503539",
        "client_msg_id": "789d35fe-b488-401e-8057-e18caab2339d",
        "text": "This reminds me, I wonder how much of a boost BFLW would get if it used SortedKeyList from <https:\/\/grantjenks.com\/docs\/sortedcontainers\/sortedlist.html> rather than a raw list of dicts in the Available class, which currently involves re-sorting when a new level enters the book.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb57a2bdd15a",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b57a2bdd15acccdb845ce257f38940cc.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Dave",
            "real_name": "Dave R",
            "display_name": "Dave",
            "team": "T4G9NBD2M",
            "name": "d7m",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "q+o=n",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This reminds me, I wonder how much of a boost BFLW would get if it used SortedKeyList from "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/grantjenks.com\/docs\/sortedcontainers\/sortedlist.html"
                            },
                            {
                                "type": "text",
                                "text": " rather than a raw list of dicts in the Available class, which currently involves re-sorting when a new level enters the book."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0128E7BEHW",
        "type": "message",
        "ts": "1658059744.603539",
        "client_msg_id": "97be2e08-aefb-4dc5-8c93-8326f7d8ae69",
        "text": "Maybe not much when the bottlenecks really are in network latency\/in play delay\/matching cycle itself.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb57a2bdd15a",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b57a2bdd15acccdb845ce257f38940cc.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Dave",
            "real_name": "Dave R",
            "display_name": "Dave",
            "team": "T4G9NBD2M",
            "name": "d7m",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XgH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Maybe not much when the bottlenecks really are in network latency\/in play delay\/matching cycle itself."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01DCR5PXDY",
        "type": "message",
        "ts": "1658085021.356399",
        "client_msg_id": "fd807d0c-c205-4434-a216-0c9b7d2f9d75",
        "text": "That specific change (though in a different language) is on my todo list to speed up my backtest. Doesn't matter much in production though",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "903bc20cd9db",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-10-26\/1448127317798_903bc20cd9dba9a758e0_72.png",
            "first_name": "thambie1",
            "real_name": "thambie1",
            "display_name": "thambie1",
            "team": "T4G9NBD2M",
            "name": "thambie1",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KP6OB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That specific change (though in a different language) is on my todo list to speed up my backtest. Doesn't matter much in production though"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1658085613.799489",
        "client_msg_id": "E33E3112-1C20-4972-BD7C-91DA9A949DC2",
        "text": "I think I tried this and it didn’t make a difference ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sZy2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think I tried this and it didn’t make a difference "
                            }
                        ]
                    }
                ]
            }
        ]
    }
]