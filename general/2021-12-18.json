[
    {
        "user": "URMM9463X",
        "type": "message",
        "ts": "1639814944.475500",
        "edited": {
            "user": "URMM9463X",
            "ts": "1639815568.000000"
        },
        "client_msg_id": "3370ea25-77cc-4ad3-89e7-4f55d2bcf417",
        "text": "Just to add another viewpoint to all the good advice above: I used RDS (postgres) for quite a while but it started to seem expensive, especially for historical data I was hardly ever querying. My current approach is to upload csv, parquet and json data to S3 locations and use Athena to query them into pandas dataframes. Don't have any issues so far; performance is good and I can add new data to my json files without breaking existing queries.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf57720914be",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f57720914be90dd532faed6bdadad7ca.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "Xxx",
            "real_name": "Xxx",
            "display_name": "D",
            "team": "T4G9NBD2M",
            "name": "derekclements67",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "waV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Just to add another viewpoint to all the good advice above: I used RDS (postgres) for quite a while but it started to seem expensive, especially for historical data I was hardly ever querying. My current approach is to upload csv, parquet and json data to S3 locations and use Athena to query them into pandas dataframes. Don't have any issues so far; performance is good and I can add new data to my json files without breaking existing queries."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U01MPC0GUK1"
                ],
                "count": 1
            }
        ]
    },
    {
        "subtype": "channel_join",
        "user": "U02RN7YDRQ9",
        "text": "<@U02RN7YDRQ9> has joined the channel",
        "type": "message",
        "ts": "1639851065.476000"
    },
    {
        "user": "U01DVUAE2G1",
        "type": "message",
        "ts": "1639877566.477700",
        "edited": {
            "user": "U01DVUAE2G1",
            "ts": "1639877627.000000"
        },
        "client_msg_id": "b2dc11b4-d379-44af-acfd-165b62ac57c4",
        "text": "Is it possible for a market to close and reopen again and therefore calling `_process_closed_market`   multiple times per market?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gd87aca58eae",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/d87aca58eaeabd0a953b4bc4204bbbaf.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Aaron Smith",
            "display_name": "Aaron Smith",
            "team": "T4G9NBD2M",
            "name": "smiffyaaron",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1639877566.477700",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1639925032.480800",
        "reply_users": [
            "U9JHLMZB4",
            "U01DVUAE2G1"
        ],
        "replies": [
            {
                "user": "U9JHLMZB4",
                "ts": "1639896345.479400"
            },
            {
                "user": "U01DVUAE2G1",
                "ts": "1639925032.480800"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pvt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is it possible for a market to close and reopen again and therefore calling "
                            },
                            {
                                "type": "text",
                                "text": "_process_closed_market",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "   multiple times per market?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02QU7JSVL5",
        "type": "message",
        "ts": "1639883260.479300",
        "client_msg_id": "a123bb82-df14-41ce-aef1-056ad7fe7fb2",
        "text": "When using the streaming error handling that is provided in the examples. My stream only provides the following and never retrieves any market data. I feel like I am missing something simple.\n\n`INFO:__main__:Starting MarketStreaming`\n`INFO:__main__:Starting MarketStreaming`\n`INFO:__main__:Starting MarketStreaming`\n`INFO:__main__:Starting MarketStreaming`\n`INFO:__main__:Starting MarketStreaming`",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g05b4fd7a3c5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/05b4fd7a3c560416f9c0a3d88e32fa10.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "Zach",
            "real_name": "Zach Godsell",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "zacharyjamesgodsell",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PPzX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "When using the streaming error handling that is provided in the examples. My stream only provides the following and never retrieves any market data. I feel like I am missing something simple.\n\n"
                            },
                            {
                                "type": "text",
                                "text": "INFO:__main__:Starting MarketStreaming",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "INFO:__main__:Starting MarketStreaming",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "INFO:__main__:Starting MarketStreaming",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "INFO:__main__:Starting MarketStreaming",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "INFO:__main__:Starting MarketStreaming",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U9JHLMZB4",
        "type": "message",
        "ts": "1639896345.479400",
        "client_msg_id": "b3135242-2cbc-4d8c-ba1a-f9c48169c902",
        "text": "Yes",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g951ddcb43e7",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3951ddcb43e788a387d6daf330dad5ca.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0018-72.png",
            "first_name": "",
            "real_name": "Peter Coles",
            "display_name": "Peter",
            "team": "T4G9NBD2M",
            "name": "peter",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1639877566.477700",
        "parent_user_id": "U01DVUAE2G1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "URLEX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U4H19D1D2",
                    "U01DVUAE2G1"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U9JHLMZB4",
        "type": "message",
        "ts": "1639897884.479600",
        "edited": {
            "user": "U9JHLMZB4",
            "ts": "1639897974.000000"
        },
        "client_msg_id": "c1789a1a-3e21-4018-92e1-9f923996640b",
        "text": "Depends. That's an option. Most of the time though it's just a connection string that includes the host address. E,g,\n\n```import pymysql\nimport pandas as pd\nfrom sqlalchemy import create_engine\n\nengine = create_engine(\"mysql+pymysql:\/\/{user}:{password}@{host}\/{database}\".format(\n    user=os.getenv(\"DB_USERNAME\"),\n    password=os.getenv(\"DB_PASSWORD\"),\n    host=os.getenv(\"DB_HOST\"),\n    database=os.getenv(\"DB_DATABASE\")\n))```\nthen\n\n```sql = \"some sql in here\"\ndf = pd.read_sql(sql, engine)```\n",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g951ddcb43e7",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3951ddcb43e788a387d6daf330dad5ca.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0018-72.png",
            "first_name": "",
            "real_name": "Peter Coles",
            "display_name": "Peter",
            "team": "T4G9NBD2M",
            "name": "peter",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1639773720.468300",
        "parent_user_id": "UUE6E1LA1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xYefN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Depends. That's an option. Most of the time though it's just a connection string that includes the host address. E,g,\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "import pymysql\nimport pandas as pd\nfrom sqlalchemy import create_engine\n\nengine = create_engine(\"mysql+pymysql:\/\/{user}:{password}@{host}\/{database}\".format(\n    user=os.getenv(\"DB_USERNAME\"),\n    password=os.getenv(\"DB_PASSWORD\"),\n    host=os.getenv(\"DB_HOST\"),\n    database=os.getenv(\"DB_DATABASE\")\n))"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nthen\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "sql = \"some sql in here\"\ndf = pd.read_sql(sql, engine)"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": []
                    }
                ]
            }
        ]
    }
]