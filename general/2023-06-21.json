[
    {
        "user": "UUE6E1LA1",
        "type": "message",
        "ts": "1687331715.402479",
        "client_msg_id": "8d2b3308-3663-4606-9922-316dbde06166",
        "text": "A session token will expire after about 20 hours (I think). Calls to keepAlive operation will refresh the session token.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf53cae45edd",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f53cae45edd7f7b67bbe98819597612e.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "D C",
            "display_name": "D C",
            "team": "T4G9NBD2M",
            "name": "oddsvantage",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1687292856.725489",
        "parent_user_id": "U059W9V61QC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Pj\/A",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A session token will expire after about 20 hours (I think). Calls to keepAlive operation will refresh the session token."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U059W9V61QC",
        "type": "message",
        "ts": "1687332331.044579",
        "client_msg_id": "e3534f78-1175-4fec-aa2c-b37f60561a4c",
        "text": "Okey, thanks, I'll check that out",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb56c245a46c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b56c245a46cb73df572265c933464962.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0007-72.png",
            "first_name": "Alejandro",
            "real_name": "Alejandro Pablos Sánchez",
            "display_name": "Alejandro Pablos Sánchez",
            "team": "T4G9NBD2M",
            "name": "alejandropablos",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1687292856.725489",
        "parent_user_id": "U059W9V61QC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XLita",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Okey, thanks, I'll check that out"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0322P0CK0E",
        "type": "message",
        "ts": "1687334362.163709",
        "client_msg_id": "6a1f10fd-c57f-4d83-9c58-c770b4458f60",
        "text": "Within process market book I can get self.context and market.context, currently I am storing data into self.context and want to save it to an s3 bucket. But instead of using process market book I want to use a worker. How can you access self.context in a worker I can't seem to find it",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "ab1918814707",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-07-31\/3867647231206_ab191881470773932048_72.jpg",
            "first_name": "Vincent",
            "real_name": "Vincent Lim",
            "display_name": "Guy Incognito",
            "team": "T4G9NBD2M",
            "name": "nelsonmathsspecialist",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1687334362.163709",
        "reply_count": 3,
        "reply_users_count": 2,
        "latest_reply": "1687335186.119199",
        "reply_users": [
            "U0322P0CK0E",
            "U4H19D1D2"
        ],
        "replies": [
            {
                "user": "U0322P0CK0E",
                "ts": "1687334460.305539"
            },
            {
                "user": "U0322P0CK0E",
                "ts": "1687334523.238649"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1687335186.119199"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1687335186.119199",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "znHy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Within process market book I can get self.context and market.context, currently I am storing data into self.context and want to save it to an s3 bucket. But instead of using process market book I want to use a worker. How can you access self.context in a worker I can't seem to find it"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0322P0CK0E",
        "type": "message",
        "ts": "1687334460.305539",
        "client_msg_id": "cfc012a3-6134-49a1-bf74-a3bbbe3a8af8",
        "text": "I've spent about an hour looking for this and as soon as I posted the question I found it within 10 seconds",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "ab1918814707",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-07-31\/3867647231206_ab191881470773932048_72.jpg",
            "first_name": "Vincent",
            "real_name": "Vincent Lim",
            "display_name": "Guy Incognito",
            "team": "T4G9NBD2M",
            "name": "nelsonmathsspecialist",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1687334362.163709",
        "parent_user_id": "U0322P0CK0E",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Wj9kR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've spent about an hour looking for this and as soon as I posted the question I found it within 10 seconds"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0322P0CK0E",
        "type": "message",
        "ts": "1687334523.238649",
        "client_msg_id": "1121fc97-fef3-4500-b833-2755c8b6c1c3",
        "text": "You can just reference the variable you defined your stratergy as",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "ab1918814707",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-07-31\/3867647231206_ab191881470773932048_72.jpg",
            "first_name": "Vincent",
            "real_name": "Vincent Lim",
            "display_name": "Guy Incognito",
            "team": "T4G9NBD2M",
            "name": "nelsonmathsspecialist",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1687334362.163709",
        "parent_user_id": "U0322P0CK0E",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Jtw\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You can just reference the variable you defined your stratergy as"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1687335186.119199",
        "edited": {
            "user": "U4H19D1D2",
            "ts": "1687335199.000000"
        },
        "client_msg_id": "afe58368-7af7-4bd7-88ad-2dd560c6a36c",
        "text": "Or\n\n```def incognito_worker(context: dict, flumine) -&gt; None:\n    for strategy in flumine.strategies:\n        print(strategy.context)```",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1687334362.163709",
        "parent_user_id": "U0322P0CK0E",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=NlV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Or\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "def incognito_worker(context: dict, flumine) -> None:\n    for strategy in flumine.strategies:\n        print(strategy.context)"
                            }
                        ],
                        "border": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "U02K5EBKNBF",
        "type": "message",
        "ts": "1687346501.917649",
        "client_msg_id": "79c9461f-9cb4-4386-bec9-25d299fad921",
        "text": "Hey <@U4H19D1D2>!\n\nI think in the latest betfairlightweight release (2.17.2) you haven’t actually upgraded orjson to 3.8.7 as per release notes? It’s still at 3.8.5?\n\n<https:\/\/github.com\/betcode-org\/betfair\/blob\/master\/requirements-speed.txt#L2>\n<https:\/\/github.com\/betcode-org\/betfair\/pull\/519\/files>\n\nThe latest orjson version is now 3.9.1, maybe worth bumping to that? They (orjson) seem to have been doing loads of minor releases recently.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "ge478bab10fc",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e478bab10fca685df6987c00526939c9.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "casper",
            "real_name": "casper",
            "display_name": "casper",
            "team": "T4G9NBD2M",
            "name": "vladislav.vyuzhanin",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "id": 1,
                "footer_icon": "https:\/\/slack.github.com\/static\/img\/favicon-neutral.png",
                "color": "24292f",
                "bot_id": "B021ZJYSBMW",
                "app_unfurl_url": "https:\/\/github.com\/betcode-org\/betfair\/blob\/master\/requirements-speed.txt#L2",
                "is_app_unfurl": true,
                "app_id": "A01BP7R4KNY",
                "fallback": "<https:\/\/github.com\/betcode-org\/betfair\/blob\/master\/requirements-speed.txt | requirements-speed.txt>",
                "title": "<https:\/\/github.com\/betcode-org\/betfair\/blob\/master\/requirements-speed.txt | requirements-speed.txt>",
                "footer": "<https:\/\/github.com\/betcode-org\/betfair|betcode-org\/betfair>",
                "mrkdwn_in": [
                    "text"
                ]
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/MiE1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hey "
                            },
                            {
                                "type": "user",
                                "user_id": "U4H19D1D2"
                            },
                            {
                                "type": "text",
                                "text": "!\n\nI think in the latest betfairlightweight release (2.17.2) you haven’t actually upgraded orjson to 3.8.7 as per release notes? It’s still at 3.8.5?\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/betcode-org\/betfair\/blob\/master\/requirements-speed.txt#L2"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/betcode-org\/betfair\/pull\/519\/files"
                            },
                            {
                                "type": "text",
                                "text": "\n\nThe latest orjson version is now 3.9.1, maybe worth bumping to that? They (orjson) seem to have been doing loads of minor releases recently."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "man-facepalming",
                "users": [
                    "U4H19D1D2"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U059W9V61QC",
        "type": "message",
        "ts": "1687361346.792409",
        "client_msg_id": "22ceaeaf-f4c9-4bcb-81c5-8aefa08ff2d1",
        "text": "Coming back to this, I'm still not able to fix it with the keep_alive method",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb56c245a46c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b56c245a46cb73df572265c933464962.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0007-72.png",
            "first_name": "Alejandro",
            "real_name": "Alejandro Pablos Sánchez",
            "display_name": "Alejandro Pablos Sánchez",
            "team": "T4G9NBD2M",
            "name": "alejandropablos",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1687292856.725489",
        "parent_user_id": "U059W9V61QC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "F7v",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Coming back to this, I'm still not able to fix it with the keep_alive method"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U059W9V61QC",
        "type": "message",
        "ts": "1687361354.909269",
        "client_msg_id": "5391e11d-46e1-443e-956f-a4ba29d7a638",
        "text": "`*APIError*: AccountAPING\/v1.0\/getAccountFunds` \nParams: {}\nException: None\nError: {'code': -32099, 'message': 'AANGX-0002', 'data': {'exceptionname': 'AccountAPINGException', 'AccountAPINGException': {'requestUUID': 'null', 'errorCode': 'INVALID_SESSION_INFORMATION', 'errorDetails': ''}}}\nFull Response: {'jsonrpc': '2.0', 'error': {'code': -32099, 'message': 'AANGX-0002', 'data': {'exceptionname': 'AccountAPINGException', 'AccountAPINGException': {'requestUUID': 'null', 'errorCode': 'INVALID_SESSION_INFORMATION', 'errorDetails': ''}}}, 'id': 1}",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb56c245a46c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b56c245a46cb73df572265c933464962.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0007-72.png",
            "first_name": "Alejandro",
            "real_name": "Alejandro Pablos Sánchez",
            "display_name": "Alejandro Pablos Sánchez",
            "team": "T4G9NBD2M",
            "name": "alejandropablos",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1687292856.725489",
        "parent_user_id": "U059W9V61QC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+40RO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "APIError",
                                "style": {
                                    "bold": true,
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ": AccountAPING\/v1.0\/getAccountFunds ",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\nParams: {}\nException: None\nError: {'code': -32099, 'message': 'AANGX-0002', 'data': {'exceptionname': 'AccountAPINGException', 'AccountAPINGException': {'requestUUID': 'null', 'errorCode': 'INVALID_SESSION_INFORMATION', 'errorDetails': ''}}}\nFull Response: {'jsonrpc': '2.0', 'error': {'code': -32099, 'message': 'AANGX-0002', 'data': {'exceptionname': 'AccountAPINGException', 'AccountAPINGException': {'requestUUID': 'null', 'errorCode': 'INVALID_SESSION_INFORMATION', 'errorDetails': ''}}}, 'id': 1}"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U059W9V61QC",
        "type": "message",
        "ts": "1687361389.889139",
        "client_msg_id": "73d94cec-87b8-4b34-b411-535a22a61d29",
        "text": "This is the exact error message I get, is the same for whatever API function I wanna use",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb56c245a46c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b56c245a46cb73df572265c933464962.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0007-72.png",
            "first_name": "Alejandro",
            "real_name": "Alejandro Pablos Sánchez",
            "display_name": "Alejandro Pablos Sánchez",
            "team": "T4G9NBD2M",
            "name": "alejandropablos",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1687292856.725489",
        "parent_user_id": "U059W9V61QC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7yxqL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is the exact error message I get, is the same for whatever API function I wanna use"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U059W9V61QC",
        "type": "message",
        "ts": "1687361401.544109",
        "client_msg_id": "00177434-7e3f-498c-b6e5-6758c08bc3a0",
        "text": "Anyone encountered this before?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb56c245a46c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b56c245a46cb73df572265c933464962.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0007-72.png",
            "first_name": "Alejandro",
            "real_name": "Alejandro Pablos Sánchez",
            "display_name": "Alejandro Pablos Sánchez",
            "team": "T4G9NBD2M",
            "name": "alejandropablos",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1687292856.725489",
        "parent_user_id": "U059W9V61QC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ntIJE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Anyone encountered this before?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05847KNJ02",
        "type": "message",
        "ts": "1687392635.062849",
        "client_msg_id": "c160cc21-3fd4-4772-9491-1c6d213c7f8c",
        "text": "going with sql :shrug:",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "d4c338dac3b9",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-05-16\/5273305786581_d4c338dac3b94fa045a4_72.png",
            "first_name": "vtaco",
            "real_name": "vtaco",
            "display_name": "vtaco",
            "team": "T4G9NBD2M",
            "name": "vishal",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1684302310.494249",
        "parent_user_id": "U4H19D1D2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gSIq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "going with sql "
                            },
                            {
                                "type": "emoji",
                                "name": "shrug",
                                "unicode": "1f937"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "joy",
                "users": [
                    "UU6AE43V0"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U042NB80A1X",
        "type": "message",
        "ts": "1687399339.092759",
        "edited": {
            "user": "U042NB80A1X",
            "ts": "1687399846.000000"
        },
        "client_msg_id": "7543c52f-059a-4af3-ab49-e2870c5a2731",
        "text": "Hey guys, what is the best way to amend orders in Flumine? Is there any dummy code for this available? It's just checking price and size and re-establishing the order to new market conditions. I've got to get my head around this blotter as well - is that how most of you are managing your orders? Will it retrieve all existing orders if you re-start your strategy?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g3ab37102618",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ab37102618df1ba57a0e6b5c8538c66.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0021-72.png",
            "first_name": "Tom",
            "real_name": "Tom",
            "display_name": "Tom",
            "team": "T4G9NBD2M",
            "name": "tkuhnau",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1687399339.092759",
        "reply_count": 6,
        "reply_users_count": 4,
        "latest_reply": "1687846329.753989",
        "reply_users": [
            "U9JHLMZB4",
            "U4H19D1D2",
            "U042NB80A1X",
            "U01MPC0GUK1"
        ],
        "replies": [
            {
                "user": "U9JHLMZB4",
                "ts": "1687412376.549349"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1687413055.408589"
            },
            {
                "user": "U042NB80A1X",
                "ts": "1687427876.516639"
            },
            {
                "user": "U01MPC0GUK1",
                "ts": "1687432161.929009"
            },
            {
                "user": "U9JHLMZB4",
                "ts": "1687433022.489209"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1687846329.753989"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1687910920.189409",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zEjz1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hey guys, what is the best way to amend orders in Flumine? Is there any dummy code for this available? It's just checking price and size and re-establishing the order to new market conditions. I've got to get my head around this blotter as well - is that how most of you are managing your orders? Will it retrieve all existing orders if you re-start your strategy?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U9JHLMZB4",
        "type": "message",
        "ts": "1687412376.549349",
        "edited": {
            "user": "U9JHLMZB4",
            "ts": "1687413626.000000"
        },
        "client_msg_id": "334c0989-0664-4c3f-b43c-d3f029334cb8",
        "text": "Flumine has an `order.replace` replace method, but it only allows you to change the price, not the size, as that's all that Betfair allows on an existing order. You will of course also lose your place in the matching queue, re-entering at the back of your new price's queue. Because it's limited, I suspect that most people simply do an `order.cancel` and then place a new bet with the adjusted price and size. Using that approach though, you need to be aware that there may be a delay before your cancelation is executed, and indeed it can still be matched in the small window between you requesting the cancellation and it taking effect, so it's prudent to verify the cancellation before placing the adjusted bet.\n\nThe blotter is certainly very useful, I'd say equally with the orders object received by a strategy's `process_orders` method. Note an important difference is that the blotter has all orders for the current market, but the `process_orders` method receives only the orders for the current strategy.\n\nYes, existing orders will be retrieved and added to the blotter if you restart your strategy, but there may be a small delay as those with execution complete status won't come through the order stream, so instead Flumine makes an API call to Betfair to get them and add them to the blotter. Better practise though is to design your strategies to run continuously (whilst acknowledging that during development that may not be feasible or desirable).",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g951ddcb43e7",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3951ddcb43e788a387d6daf330dad5ca.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0018-72.png",
            "first_name": "",
            "real_name": "Peter Coles",
            "display_name": "Peter",
            "team": "T4G9NBD2M",
            "name": "peter",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1687399339.092759",
        "parent_user_id": "U042NB80A1X",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Qw\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Flumine has an "
                            },
                            {
                                "type": "text",
                                "text": "order.replace",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " replace method, but it only allows you to change the price, not the size, as that's all that Betfair allows on an existing order. You will of course also lose your place in the matching queue, re-entering at the back of your new price's queue. Because it's limited, I suspect that most people simply do an "
                            },
                            {
                                "type": "text",
                                "text": "order.cancel",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and then place a new bet with the adjusted price and size. Using that approach though, you need to be aware that there may be a delay before your cancelation is executed, and indeed it can still be matched in the small window between you requesting the cancellation and it taking effect, so it's prudent to verify the cancellation before placing the adjusted bet.\n\nThe blotter is certainly very useful, I'd say equally with the orders object received by a strategy's "
                            },
                            {
                                "type": "text",
                                "text": "process_orders",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " method. Note an important difference is that the blotter has all orders for the current market, but the "
                            },
                            {
                                "type": "text",
                                "text": "process_orders",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " method receives only the orders for the current strategy.\n\nYes, existing orders will be retrieved and added to the blotter if you restart your strategy, but there may be a small delay as those with execution complete status won't come through the order stream, so instead Flumine makes an API call to Betfair to get them and add them to the blotter. Better practise though is to design your strategies to run continuously (whilst acknowledging that during development that may not be feasible or desirable)."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U4H19D1D2",
                    "U042NB80A1X"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1687413055.408589",
        "client_msg_id": "d34989ba-b6f9-4e53-abb7-7aa0bcb05600",
        "text": "In addition to above note that flumine won't add 'execution complete' orders by default without the example <https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/examples\/middleware\/orders.py|middleware>",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1687399339.092759",
        "parent_user_id": "U042NB80A1X",
        "attachments": [
            {
                "id": 1,
                "footer_icon": "https:\/\/slack.github.com\/static\/img\/favicon-neutral.png",
                "color": "24292f",
                "bot_id": "B021ZJYSBMW",
                "app_unfurl_url": "https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/examples\/middleware\/orders.py",
                "is_app_unfurl": true,
                "app_id": "A01BP7R4KNY",
                "fallback": "<https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/examples\/middleware\/orders.py | orders.py>",
                "text": "```\nimport logging\nfrom flumine import config\nfrom flumine.utils import STRATEGY_NAME_HASH_LENGTH\nfrom flumine.markets.middleware import Middleware\nfrom flumine.order.trade import Trade\n\nlogger = logging.getLogger(__name__)\n\n\nclass OrdersMiddleware(Middleware):\n    \"\"\"\n    Middleware to add execution complete orders\n    to the blotter. This is required on a restart\n    as the order stream does not include\n    EXECUTION_COMPLETE orders\n    \"\"\"\n\n    def __init__(self, flumine):\n        self.flumine = flumine\n\n    def add_market(self, market) -> None:\n        for client in self.flumine.clients:\n            resp = client.betting_client.betting.list_current_orders(\n                customer_strategy_refs=[config.customer_strategy_ref],\n                order_projection=\"EXECUTION_COMPLETE\",\n            )\n            for current_order in resp.orders:\n                <http:\/\/logger.info|logger.info>(\n                    \"OrdersMiddleware: Processing order {0}\".format(\n                        current_order.bet_id\n                    ),\n                    extra={\n                        \"bet_id\": current_order.bet_id,\n                        \"market_id\": current_order.market_id,\n                        \"customer_strategy_ref\": current_order.customer_strategy_ref,\n                        \"customer_order_ref\": current_order.customer_order_ref,\n                        \"client_username\": client.username,\n                    },\n                )\n                order = self._create_order_from_current(client, current_order, market)\n                if order:\n                    order.update_current_order(current_order)\n                    order.execution_complete()\n\n    def _create_order_from_current(self, client, current_order, market):\n        strategy_name_hash = current_order.customer_order_ref[\n            :STRATEGY_NAME_HASH_LENGTH\n        ]\n        order_id = current_order.customer_order_ref[STRATEGY_NAME_HASH_LENGTH + 1 :]\n        # get strategy\n        strategy = self.flumine.strategies.hashes.get(strategy_name_hash)\n        if strategy is None:\n            logger.warning(\n                \"OrdersMiddleware: Strategy not available to create order {0}\".format(\n                    order_id\n                ),\n                extra={\n                    \"bet_id\": current_order.bet_id,\n                    \"market_id\": current_order.market_id,\n                    \"customer_strategy_ref\": current_order.customer_strategy_ref,\n                    \"customer_order_ref\": current_order.customer_order_ref,\n                    \"strategy_name\": str(strategy),\n                    \"client_username\": client.username,\n                },\n            )\n            return\n        # add trade\/order\n        trade = Trade(\n            market.market_id,\n            current_order.selection_id,\n            current_order.handicap,\n            strategy,\n        )\n        order = trade.create_order_from_current(client, current_order, order_id)\n        market.blotter[order.id] = order\n        runner_context = strategy.get_runner_context(*order.lookup)\n        runner_context.place(trade.id)\n        <http:\/\/logger.info|logger.info>(\n            \"OrdersMiddleware: New order trade created\",\n            extra={\n                \"bet_id\": current_order.bet_id,\n                \"market_id\": current_order.market_id,\n                \"customer_strategy_ref\": current_order.customer_strategy_ref,\n                \"customer_order_ref\": current_order.customer_order_ref,\n                \"strategy_name\": str(strategy),\n                \"client_username\": client.username,\n            },\n        )\n        return order\n\n```",
                "title": "<https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/examples\/middleware\/orders.py | orders.py>",
                "footer": "<https:\/\/github.com\/betcode-org\/flumine|betcode-org\/flumine>",
                "mrkdwn_in": [
                    "text"
                ]
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UOx=k",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In addition to above note that flumine won't add 'execution complete' orders by default without the example "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/examples\/middleware\/orders.py",
                                "text": "middleware"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U042NB80A1X"
                ],
                "count": 1
            }
        ]
    }
]