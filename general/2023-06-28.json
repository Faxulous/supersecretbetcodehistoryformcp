[
    {
        "user": "U04980ZT6UX",
        "type": "message",
        "ts": "1687948483.134389",
        "client_msg_id": "9fdf3e9c-f561-47dd-9e0a-286dda170ed9",
        "text": "Hi guys,\nIs it possible to retrieve the *customerRef* (which is different from customerOrderRef) from my orders? I can't find it in any endpoint.\nThe reason I need this is that I need a field to keep my order's metadata, and it is not possible to change *customerOrderRef* when modifying (replacing) an order. On the other hand, it is possible to change *customerRef* when replacing an order, but I just can't retrieve it from my orders using <https:\/\/docs.developer.betfair.com\/display\/1smk3cen4v3lu3yomq5qye0ni\/listCurrentOrders|listCurrentOrders>.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb1b2f82a1a4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b1b2f82a1a49a547cbc7487b48805187.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "AI",
            "real_name": "AI Trader",
            "display_name": "AI Trader",
            "team": "T4G9NBD2M",
            "name": "menocineto",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1687948483.134389",
        "reply_count": 6,
        "reply_users_count": 2,
        "latest_reply": "1687959156.076829",
        "reply_users": [
            "UBS7QANF3",
            "U04980ZT6UX"
        ],
        "replies": [
            {
                "user": "UBS7QANF3",
                "ts": "1687949167.804659"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1687949314.831129"
            },
            {
                "user": "U04980ZT6UX",
                "ts": "1687956868.995179"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1687958355.142669"
            },
            {
                "user": "U04980ZT6UX",
                "ts": "1687958917.923609"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1687959156.076829"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CskzQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi guys,\nIs it possible to retrieve the "
                            },
                            {
                                "type": "text",
                                "text": "customerRef ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "(which is different from customerOrderRef) from my orders? I can't find it in any endpoint.\nThe reason I need this is that I need a field to keep my order's metadata, and it is not possible to change "
                            },
                            {
                                "type": "text",
                                "text": "customerOrderRef",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " when modifying (replacing) an order. On the other hand, it is possible to change "
                            },
                            {
                                "type": "text",
                                "text": "customerRef ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "when replacing an order, but I just can't retrieve it from my orders using "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/docs.developer.betfair.com\/display\/1smk3cen4v3lu3yomq5qye0ni\/listCurrentOrders",
                                "text": "listCurrentOrders"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1687949167.804659",
        "client_msg_id": "EE8DD850-F769-4DF5-BE17-DE8E547FF931",
        "text": "customerRef is for avoiding placing duplicate orders ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1687948483.134389",
        "parent_user_id": "U04980ZT6UX",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/NHGe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "customerRef is for avoiding placing duplicate orders "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1687949314.831129",
        "edited": {
            "user": "UBS7QANF3",
            "ts": "1687949358.000000"
        },
        "client_msg_id": "A397F789-6EC2-4172-B01F-B12071C3CA2C",
        "text": "I would use the customerOrderRef to store a UUID to identify the order then log the metadata (and any changes to that) along with the UUID locally",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1687948483.134389",
        "parent_user_id": "U04980ZT6UX",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "P2Te",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I would use the customerOrderRef to store a UUID to identify the order then log the metadata (and any changes to that) along with the UUID locally"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U04980ZT6UX",
        "type": "message",
        "ts": "1687956868.995179",
        "client_msg_id": "23446b07-22fd-4829-b9c3-6552d2a95c3f",
        "text": "Yeah, I thought about this, but right now I have different serivces and it would require communicating this information between them. Thanks anyways",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb1b2f82a1a4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b1b2f82a1a49a547cbc7487b48805187.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "AI",
            "real_name": "AI Trader",
            "display_name": "AI Trader",
            "team": "T4G9NBD2M",
            "name": "menocineto",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1687948483.134389",
        "parent_user_id": "U04980ZT6UX",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pqR=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, I thought about this, but right now I have different serivces and it would require communicating this information between them. Thanks anyways"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1687958355.142669",
        "client_msg_id": "75c1350c-9908-4b76-a7a6-421b032e2f26",
        "text": "No offence but sounds like you are being lazy to use Betfair as the way to communicate between your services",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1687948483.134389",
        "parent_user_id": "U04980ZT6UX",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8oaW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "No offence but sounds like you are being lazy to use Betfair as the way to communicate between your services"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U04980ZT6UX",
        "type": "message",
        "ts": "1687958917.923609",
        "client_msg_id": "43f0eac2-8098-4004-83df-3d7f623c93b2",
        "text": "that's 100% correct",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb1b2f82a1a4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b1b2f82a1a49a547cbc7487b48805187.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "AI",
            "real_name": "AI Trader",
            "display_name": "AI Trader",
            "team": "T4G9NBD2M",
            "name": "menocineto",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1687948483.134389",
        "parent_user_id": "U04980ZT6UX",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SXJpf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "that's 100% correct"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1687959156.076829",
        "client_msg_id": "6fcfedd3-5723-4244-a1af-a7e979ecdad6",
        "text": ":sunglasses:",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1687948483.134389",
        "parent_user_id": "U04980ZT6UX",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9vz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "emoji",
                                "name": "sunglasses",
                                "unicode": "1f60e"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCQB6S222",
        "type": "message",
        "ts": "1687964741.744029",
        "client_msg_id": "830b82ab-e2b6-46ff-a9d2-e0c06b7c3047",
        "text": "<https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/examples\/workers\/inplayservice.py#L13>\nCan I ask, why does this function require `context` as an input? It doesn't appear to be used within the function?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g953ffd5e3b7",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5813be539113b05ece8212c2a06d006a.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "George",
            "real_name": "George",
            "display_name": "George",
            "team": "T4G9NBD2M",
            "name": "gd",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1687964741.744029",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1687969532.852089",
        "reply_users": [
            "U4H19D1D2",
            "UCQB6S222"
        ],
        "replies": [
            {
                "user": "U4H19D1D2",
                "ts": "1687969117.912469"
            },
            {
                "user": "UCQB6S222",
                "ts": "1687969532.852089"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1687969532.852089",
        "attachments": [
            {
                "id": 1,
                "footer_icon": "https:\/\/slack.github.com\/static\/img\/favicon-neutral.png",
                "color": "24292f",
                "bot_id": "B021ZJYSBMW",
                "app_unfurl_url": "https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/examples\/workers\/inplayservice.py#L13",
                "is_app_unfurl": true,
                "app_id": "A01BP7R4KNY",
                "fallback": "<https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/examples\/workers\/inplayservice.py | inplayservice.py>",
                "text": "```\ndef poll_in_play_service(context: dict, flumine, event_type_id: str) -> None:\n```",
                "title": "<https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/examples\/workers\/inplayservice.py | inplayservice.py>",
                "footer": "<https:\/\/github.com\/betcode-org\/flumine|betcode-org\/flumine>",
                "mrkdwn_in": [
                    "text"
                ]
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mTU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/examples\/workers\/inplayservice.py#L13"
                            },
                            {
                                "type": "text",
                                "text": "\nCan I ask, why does this function require "
                            },
                            {
                                "type": "text",
                                "text": "context",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " as an input? It doesn't appear to be used within the function?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1687969117.912469",
        "client_msg_id": "2C86347B-63F5-4759-939E-36799416950E",
        "text": "It’s the default, see the <https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/flumine\/worker.py|code>, just not used in this example",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1687964741.744029",
        "parent_user_id": "UCQB6S222",
        "attachments": [
            {
                "id": 1,
                "footer_icon": "https:\/\/slack.github.com\/static\/img\/favicon-neutral.png",
                "color": "24292f",
                "bot_id": "B021ZJYSBMW",
                "app_unfurl_url": "https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/flumine\/worker.py",
                "is_app_unfurl": true,
                "app_id": "A01BP7R4KNY",
                "fallback": "<https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/flumine\/worker.py | worker.py>",
                "text": "```\nimport time\nimport threading\nimport logging\nfrom typing import Callable, Optional\nfrom betfairlightweight import BetfairError, filters, exceptions\n\nfrom . import config\nfrom .events import events\nfrom .utils import chunks\nfrom .clients import ExchangeType\n\nlogger = logging.getLogger(__name__)\n\n\nclass BackgroundWorker(threading.Thread):\n    def __init__(\n        self,\n        flumine,\n        function: Callable,\n        interval: Optional[int],\n        func_args: tuple = None,\n        func_kwargs: dict = None,\n        start_delay: int = 0,\n        context: dict = None,\n        name: str = None,\n        **kwargs\n    ):\n        name = name or function.__name__\n        threading.Thread.__init__(self, daemon=True, name=name, **kwargs)\n        self.flumine = flumine\n        self.function = function\n        self.interval = interval\n        self.func_args = func_args if func_args is not None else []\n        self.func_kwargs = func_kwargs if func_kwargs is not None else {}\n        self.start_delay = start_delay\n        self.context = context or {}\n        self._running = False\n\n    def run(self) -> None:\n        <http:\/\/logger.info|logger.info>(\n            \"BackgroundWorker {0} starting\".format(self.name),\n            extra={\n                \"worker_name\": self.name,\n                \"function\": self.function,\n                \"context\": self.context,\n                \"start_delay\": self.start_delay,\n                \"interval\": self.interval,\n                \"func_args\": self.func_args,\n                \"func_kwargs\": self.func_kwargs,\n            },\n        )\n        time.sleep(self.start_delay)\n        self._running = True\n        while self._running:\n            logger.debug(\n                \"BackgroundWorker {0} executing\".format(self.name),\n                extra={\n                    \"worker_name\": self.name,\n                    \"function\": self.function,\n                    \"context\": self.context,\n                },\n            )\n            try:\n                self.function(\n                    self.context, self.flumine, *self.func_args, **self.func_kwargs\n                )\n            except Exception as e:\n                logger.error(\n                    \"Error in BackgroundWorker {0}: {1}\".format(self.name, e),\n                    extra={\n                        \"worker_name\": self.name,\n                        \"function\": self.function,\n                        \"context\": self.context,\n                    },\n                    exc_info=True,\n                )\n            if self.interval is None:\n                break\n            time.sleep(self.interval)\n\n    def shutdown(self, timeout: int = 4) -> None:\n        <http:\/\/logger.info|logger.info>(\n            \"BackgroundWorker {0} shutting down\".format(self.name),\n            extra={\n                \"worker_name\": self.name,\n                \"function\": self.function,\n            },\n        )\n        self._running = False\n        self.join(timeout)\n\n\ndef keep_alive(context: dict, flumine) -> None:\n    \"\"\"Attempt keep alive if required or\n    login if keep alive failed\n    \"\"\"\n    for client in flumine.clients:\n        if client.EXCHANGE == ExchangeType.BETFAIR:\n            if client.betting_client.session_token:\n                resp = client.keep_alive()\n                if resp is None or resp.status == \"SUCCESS\":\n                    continue\n        elif client.EXCHANGE == ExchangeType.BETCONNECT:\n            resp = client.keep_alive()\n            if resp:\n                continue\n        # keep-alive failed lets try a login\n        client.login()\n\n\ndef poll_market_catalogue(context: dict, flumine) -> None:\n    # get betfair client\n    client = flumine.clients.get_betfair_default()\n    markets = [\n        m.market_id\n        for m in list(flumine.markets.markets.values())\n        if m.update_market_catalogue and not m.closed\n    ]\n    for market_ids in chunks(markets, 25):\n        try:\n            market_catalogues = client.betting_client.betting.list_market_catalogue(\n                filter=filters.market_filter(market_ids=market_ids),\n                max_results=25,\n                market_projection=[\n                    \"COMPETITION\",\n                    \"EVENT\",\n                    \"EVENT_TYPE\",\n                    \"RUNNER_DESCRIPTION\",\n                    \"RUNNER_METADATA\",\n                    \"MARKET_START_TIME\",\n                    \"MARKET_DESCRIPTION\",\n                ],\n            )\n        except exceptions.StatusCodeError as e:\n            # log as warning to prevent duplicate logs on betfair meltdown\n            logger.warning(\n                \"poll_market_catalogue StatusCodeError\",\n                extra={\"trading_function\": \"list_market_catalogue\", \"response\": e},\n                exc_info=True,\n            )\n            continue\n        except BetfairError as e:\n            logger.error(\n                \"poll_market_catalogue error\",\n                exc_info=True,\n                extra={\"trading_function\": \"list_market_catalogue\", \"response\": e},\n            )\n            continue\n\n        if market_catalogues:\n            flumine.handler_queue.put(events.MarketCatalogueEvent(market_catalogues))\n\n\ndef poll_account_balance(context: dict, flumine) -> None:\n    for client in flumine.clients:\n        client.update_account_details()\n        <http:\/\/logger.info|logger.info>(\"Client update account details\", extra=<http:\/\/client.info|client.info>)\n        if client.account_funds:\n            flumine.log_control(events.BalanceEvent(client))\n\n\ndef poll_market_closure(context: dict, flumine) -> None:\n    markets = [\n        market for market in list(flumine.markets.markets.values()) if market.closed\n    ]\n    for client in flumine.clients:\n        if (\n            client.EXCHANGE != ExchangeType.BETFAIR\n            or client.paper_trade\n            or client.market_recording_mode\n        ):\n            continue\n        for market in markets:\n            if client.username not in market.orders_cleared:\n                if _get_cleared_orders(\n                    flumine, client.betting_client, market.market_id\n                ):\n                    market.orders_cleared.append(client.username)\n            if client.username not in market.market_cleared:\n                if _get_cleared_market(\n                    flumine, client.betting_client, market.market_id\n                ):\n                    market.market_cleared.append(client.username)\n\n\ndef _get_cleared_orders(flumine, betting_client, market_id: str) -> bool:\n    from_record = 0\n    while True:\n        try:\n            cleared_orders = betting_client.betting.list_cleared_orders(\n                bet_status=\"SETTLED\",\n                from_record=from_record,\n                market_ids=[market_id],\n                customer_strategy_refs=[config.customer_strategy_ref],\n            )\n        except exceptions.StatusCodeError as e:\n            # log as warning to prevent duplicate logs on betfair meltdown\n            logger.warning(\n                \"_get_cleared_orders StatusCodeError\",\n                extra={\"trading_function\": \"list_cleared_orders\", \"response\": e},\n                exc_info=True,\n            )\n            return False\n        except BetfairError as e:\n            logger.warning(\n                \"_get_cleared_orders error\",\n                extra={\"trading_function\": \"list_cleared_orders\", \"response\": e},\n                exc_info=True,\n            )\n            return False\n\n        <http:\/\/logger.info|logger.info>(\n            \"{0}: {1} cleared orders found, more available: {2}\".format(\n                market_id, len(cleared_orders.orders), cleared_orders.more_available\n            )\n        )\n        cleared_orders.market_id = market_id\n        flumine.handler_queue.put(events.ClearedOrdersEvent(cleared_orders))\n        flumine.log_control(events.ClearedOrdersEvent(cleared_orders))\n\n        from_record += len(cleared_orders.orders)\n        if not cleared_orders.more_available:\n            break\n    return True\n\n\ndef _ge…",
                "title": "<https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/flumine\/worker.py | worker.py>",
                "footer": "<https:\/\/github.com\/betcode-org\/flumine|betcode-org\/flumine>",
                "mrkdwn_in": [
                    "text"
                ]
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6Ys8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It’s the"
                            },
                            {
                                "type": "text",
                                "text": " default, see the "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/flumine\/worker.py",
                                "text": "code"
                            },
                            {
                                "type": "text",
                                "text": ", just not used in this example"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCQB6S222",
        "type": "message",
        "ts": "1687969532.852089",
        "client_msg_id": "f61d1815-46ff-4e8b-b8a4-c7f65d9d52bd",
        "text": "yes indeed. thanks very much.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g953ffd5e3b7",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5813be539113b05ece8212c2a06d006a.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "George",
            "real_name": "George",
            "display_name": "George",
            "team": "T4G9NBD2M",
            "name": "gd",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1687964741.744029",
        "parent_user_id": "UCQB6S222",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/p5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "yes indeed. thanks very much."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCQB6S222",
        "type": "message",
        "ts": "1687970055.163799",
        "edited": {
            "user": "UCQB6S222",
            "ts": "1687970407.000000"
        },
        "client_msg_id": "3d5335ab-1022-4990-a31d-ba5a373b9f2a",
        "text": "Now I think I understand workers and my code is working - thanks very much. But I still have an issue.\nWhilst the simulation is of course much faster than \"real-time\", there is no equivalent way to speed up the worker code which is inherently slow (e.g. calls to an external database or API).\nThis means that the worker output - which writes to `market.context` - is totally misaligned (in terms of 'clock') with the market-book. Isn't this a huge issue for some users?\nNow I am lucky, because my worker output does not change frequently over time. However, I do need the worker to execute its \"first pass\" before the first `process_market_book`  is called. I can, of course, instruct my worker to start 10 \"minutes\" before `check_market_book` returns True, but 10 simulation-minutes is much quicker than the time it takes for the worker output to be generated, so it solves the issue in live trading but not in simulation.\nI think that I can workaround this issue by checking the `market.context` during the `check_market_book`. However, it is not ideal, because `check_market_book` will return False in the simulation, whereas, in real life it would have returned True.\nDepending on how slow the worker is, most of the simulated trading window could have been missed, just waiting for the worker's first pass!\nI imagine this is not a new question - what is the standard answer to dealing with this?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g953ffd5e3b7",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5813be539113b05ece8212c2a06d006a.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "George",
            "real_name": "George",
            "display_name": "George",
            "team": "T4G9NBD2M",
            "name": "gd",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1687970055.163799",
        "reply_count": 4,
        "reply_users_count": 3,
        "latest_reply": "1687973364.610709",
        "reply_users": [
            "U9JHLMZB4",
            "U4H19D1D2",
            "UCQB6S222"
        ],
        "replies": [
            {
                "user": "U9JHLMZB4",
                "ts": "1687972264.636019"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1687972501.045529"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1687972800.380389"
            },
            {
                "user": "UCQB6S222",
                "ts": "1687973364.610709"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1687973364.610709",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1H3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Now I think I understand workers and my code is working - thanks very much. But I still have an issue.\nWhilst the simulation is of course much faster than \"real-time\", there is no equivalent way to speed up the worker code which is inherently slow (e.g. calls to an external database or API).\nThis means that the worker output - which writes to "
                            },
                            {
                                "type": "text",
                                "text": "market.context",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " - is totally misaligned (in terms of 'clock') with the market-book. Isn't this a huge issue for some users?\nNow I am lucky, because my worker output does not change frequently over time. However, I do need the worker to execute its \"first pass\" before the first "
                            },
                            {
                                "type": "text",
                                "text": "process_market_book",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "  is called. I can, of course, instruct my worker to start 10 \"minutes\" before "
                            },
                            {
                                "type": "text",
                                "text": "check_market_book",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " returns True, but 10 simulation-minutes is much quicker than the time it takes for the worker output to be generated, so it solves the issue in live trading but not in simulation.\nI think that I can workaround this issue by checking the "
                            },
                            {
                                "type": "text",
                                "text": "market.context",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " during the "
                            },
                            {
                                "type": "text",
                                "text": "check_market_book",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". However, it is not ideal, because "
                            },
                            {
                                "type": "text",
                                "text": "check_market_book",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " will return False in the simulation, whereas, in real life it would have returned True.\nDepending on how slow the worker is, most of the simulated trading window could have been missed, just waiting for the worker's first pass!\nI imagine this is not a new question - what is the standard answer to dealing with this?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "thread_broadcast",
        "user": "U01DVUAE2G1",
        "thread_ts": "1687588139.753539",
        "root": {
            "user": "U03N4QBJ0TV",
            "type": "message",
            "ts": "1687588139.753539",
            "client_msg_id": "3b3c9ac9-4794-4e90-affe-0a392908948a",
            "text": "Morning all. How do you access the Runner name via a strategy when backtesting? I can see it in RunnerCatalogue but can't figure out how to get there. Market Catalogue is 'none'.",
            "team": "T4G9NBD2M",
            "thread_ts": "1687588139.753539",
            "reply_count": 9,
            "reply_users_count": 3,
            "latest_reply": "1687972501.168899",
            "reply_users": [
                "UBS7QANF3",
                "U03N4QBJ0TV",
                "U01DVUAE2G1"
            ],
            "replies": [
                {
                    "user": "UBS7QANF3",
                    "ts": "1687590770.289779"
                },
                {
                    "user": "U03N4QBJ0TV",
                    "ts": "1687599204.725729"
                },
                {
                    "user": "UBS7QANF3",
                    "ts": "1687604151.085079"
                },
                {
                    "user": "U01DVUAE2G1",
                    "ts": "1687971949.155089"
                },
                {
                    "user": "UBS7QANF3",
                    "ts": "1687972004.763339"
                },
                {
                    "user": "U01DVUAE2G1",
                    "ts": "1687972154.433989"
                },
                {
                    "user": "UBS7QANF3",
                    "ts": "1687972201.491509"
                },
                {
                    "user": "U01DVUAE2G1",
                    "ts": "1687972318.278339"
                },
                {
                    "user": "UBS7QANF3",
                    "ts": "1687972501.168899"
                }
            ],
            "is_locked": false,
            "subscribed": false,
            "blocks": [
                {
                    "type": "rich_text",
                    "block_id": "rMJ",
                    "elements": [
                        {
                            "type": "rich_text_section",
                            "elements": [
                                {
                                    "type": "text",
                                    "text": "Morning all. How do you access the Runner name via a strategy when backtesting? I can see it in RunnerCatalogue but can't figure out how to get there. Market Catalogue is 'none'."
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "type": "message",
        "ts": "1687971949.155089",
        "client_msg_id": "dd44025f-d549-4f3e-becd-cfc508fcb76b",
        "text": "i usually look at the MarketCatalogue for names, all i get from \"market_book.market_definition.runners[0].name\" is None (during simulation with self recorded data, would it return something in when live?)",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "04f",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i usually look at the MarketCatalogue for names, all i get from \"market_book.market_definition.runners[0].name\" is None (during simulation with self recorded data, would it return something in when live?)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1687972004.763339",
        "edited": {
            "user": "UBS7QANF3",
            "ts": "1687972032.000000"
        },
        "client_msg_id": "DBD6EACD-F93C-42B7-820B-25F23724CF15",
        "text": "Names aren’t in the live stream. Which is what you would have recorded…",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1687588139.753539",
        "parent_user_id": "U03N4QBJ0TV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "azck",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Names aren’t in the live stream"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " Which is what you would have recorded"
                            },
                            {
                                "type": "text",
                                "text": "…"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "white_check_mark",
                "users": [
                    "U01DVUAE2G1"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U01DVUAE2G1",
        "type": "message",
        "ts": "1687972154.433989",
        "client_msg_id": "a7ab53bd-2471-4aa0-b23e-4663ebd174ce",
        "text": "where are they then? in the bought data? Before i start a strategy, i normally populate a selection_id_to_name dict if i need a name, but this always seemed weird to me. Is this what everyone else does aswell?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gd87aca58eae",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/d87aca58eaeabd0a953b4bc4204bbbaf.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Aaron Smith",
            "display_name": "Aaron Smith",
            "team": "T4G9NBD2M",
            "name": "smiffyaaron",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1687588139.753539",
        "parent_user_id": "U03N4QBJ0TV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "csPY9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "where are they then? in the bought data? Before i start a strategy, i normally populate a selection_id_to_name dict if i need a name, but this always seemed weird to me. Is this what everyone else does aswell?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1687972201.491509",
        "client_msg_id": "144CD3FD-61F6-428D-99C0-6A2DAE81F30F",
        "text": "They’re in the market catalogue or historic data",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1687588139.753539",
        "parent_user_id": "U03N4QBJ0TV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dJFrU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "They’re"
                            },
                            {
                                "type": "text",
                                "text": " in the market catalogue or historic data"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U9JHLMZB4",
        "type": "message",
        "ts": "1687972264.636019",
        "client_msg_id": "c4d069c2-3b37-4188-8eea-2fba31502246",
        "text": "Workers aren't inherently slow. How fast (or otherwise) they are is completely driven by the code you put in them. So the standard answer is to profile that code, identifying bottlenecks and dealing with them.\n\nSometimes that may mean refactoring the code to remove inefficiencies, sometimes compromising by simplifying to accept a less optimal but more performant outcome, or maybe implementing a more technical solution such as compiling the code or re-writing it in lower level language - depends really on why it's  slow.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g951ddcb43e7",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3951ddcb43e788a387d6daf330dad5ca.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0018-72.png",
            "first_name": "",
            "real_name": "Peter Coles",
            "display_name": "Peter",
            "team": "T4G9NBD2M",
            "name": "peter",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1687970055.163799",
        "parent_user_id": "UCQB6S222",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gUo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Workers aren't inherently slow. How fast (or otherwise) they are is completely driven by the code you put in them. So the standard answer is to profile that code, identifying bottlenecks and dealing with them.\n\nSometimes that may mean refactoring the code to remove inefficiencies, sometimes compromising by simplifying to accept a less optimal but more performant outcome, or maybe implementing a more technical solution such as compiling the code or re-writing it in lower level language - depends really on why it's  slow."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01DVUAE2G1",
        "type": "message",
        "ts": "1687972318.278339",
        "edited": {
            "user": "U01DVUAE2G1",
            "ts": "1687972338.000000"
        },
        "client_msg_id": "53e50bd0-98d3-4dc8-8f4f-ace380a7fec2",
        "text": "yea, catalogue is where i take them from. Historic data is what you buy from betfair? (as in pro data for example)",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gd87aca58eae",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/d87aca58eaeabd0a953b4bc4204bbbaf.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Aaron Smith",
            "display_name": "Aaron Smith",
            "team": "T4G9NBD2M",
            "name": "smiffyaaron",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1687588139.753539",
        "parent_user_id": "U03N4QBJ0TV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bMoDW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "yea, catalogue is where i take them from. Historic data is what you buy from betfair? (as in pro data for example)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1687972501.045529",
        "client_msg_id": "5A4AE4B9-0668-4EE8-BE9B-59F6BCE83998",
        "text": "Simulation won’t work with workers, you need to create some middleware to replicate the worker ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1687970055.163799",
        "parent_user_id": "UCQB6S222",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DCYRS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Simulation "
                            },
                            {
                                "type": "text",
                                "text": "won’t"
                            },
                            {
                                "type": "text",
                                "text": " work with workers, you need to create some middleware to replicate the worker "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1687972501.168899",
        "client_msg_id": "119D2735-A186-4776-9E4F-BEAE9D1944AF",
        "text": "Yes",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1687588139.753539",
        "parent_user_id": "U03N4QBJ0TV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CQ1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U01DVUAE2G1"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1687972800.380389",
        "client_msg_id": "794DB45B-2983-4B21-9A22-315D18292DB8",
        "text": "In your example you would make a single call to your db or read from a csv on startup that contains a time stamp which can be used as a lookup to return a response in sub ms within the middleware to inject into the context ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1687970055.163799",
        "parent_user_id": "UCQB6S222",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fHjCB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In your example you would make a single call to your db or read from a csv on startup that contains a time stamp which can be used as a lookup to return a response in sub ms within the middleware to inject into the context "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCQB6S222",
        "type": "message",
        "ts": "1687973364.610709",
        "client_msg_id": "d8ea6d6e-762c-413a-9ff7-3f3f2104c9db",
        "text": "perfect. i knew there would be a clever solution. nice one!",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g953ffd5e3b7",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5813be539113b05ece8212c2a06d006a.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "George",
            "real_name": "George",
            "display_name": "George",
            "team": "T4G9NBD2M",
            "name": "gd",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1687970055.163799",
        "parent_user_id": "UCQB6S222",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yEAiS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "perfect. i knew there would be a clever solution. nice one!"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]