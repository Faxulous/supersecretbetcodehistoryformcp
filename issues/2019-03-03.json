[
    {
        "user": "UFNS553AQ",
        "type": "message",
        "ts": "1551621077.002600",
        "client_msg_id": "894e96c9-6a95-4fa9-985e-22c25ddad36f",
        "text": "Is it possible to get the total sizes available to bet on at a called time with the streaming function?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g35782da8b2d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e35782da8b2d15b0c94c4cf4e01341cf.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Shahab Garoosi",
            "display_name": "ShahGar",
            "team": "T4G9NBD2M",
            "name": "shahab.garoosi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KFjI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is it possible to get the total sizes available to bet on at a called time with the streaming function?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1551622034.003400",
        "client_msg_id": "DA164059-4787-40C8-A667-51F939948D6D",
        "text": "What does a called time mean? Streaming gives you the same data as a market book request ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UKbBE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What does a called time mean? Streaming gives you the same data as a market book request"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFNS553AQ",
        "type": "message",
        "ts": "1551622190.004700",
        "client_msg_id": "d8322ac1-0e9d-48c7-a9f8-5440843e862f",
        "text": "I mean the latest (=the latest time, =live time)",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g35782da8b2d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e35782da8b2d15b0c94c4cf4e01341cf.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Shahab Garoosi",
            "display_name": "ShahGar",
            "team": "T4G9NBD2M",
            "name": "shahab.garoosi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JTPfJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I mean the latest (=the latest time, =live time)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1551622255.005000",
        "client_msg_id": "811210D7-5C57-4C88-BE7A-5EA524B5EEE6",
        "text": " Yeah snap the listener ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "D8V",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah snap the listener"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1551622296.005200",
        "edited": {
            "user": "U4H19D1D2",
            "ts": "1551622336.000000"
        },
        "client_msg_id": "F4EE0F6E-E321-4014-805A-7A10B8B46C57",
        "text": "<https:\/\/github.com\/liampauling\/betfair\/blob\/master\/examples\/examplestreaming.py#L55>",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "liampauling\/betfair",
                "title_link": "https:\/\/github.com\/liampauling\/betfair\/blob\/master\/examples\/examplestreaming.py",
                "text": "Lightweight python wrapper for Betfair API-NG (with streaming) - liampauling\/betfair",
                "fallback": "GitHub: liampauling\/betfair",
                "from_url": "https:\/\/github.com\/liampauling\/betfair\/blob\/master\/examples\/examplestreaming.py",
                "thumb_url": "https:\/\/avatars2.githubusercontent.com\/u\/12016537?s=400&v=4",
                "thumb_width": 250,
                "thumb_height": 250,
                "service_icon": "https:\/\/cfr.slack-edge.com\/bfaba\/img\/unfurl_icons\/github.png",
                "id": 1,
                "original_url": "https:\/\/github.com\/liampauling\/betfair\/blob\/master\/examples\/examplestreaming.py"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VrxkC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/liampauling\/betfair\/blob\/master\/examples\/examplestreaming.py#L55"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFNS553AQ",
        "type": "message",
        "ts": "1551625292.006100",
        "client_msg_id": "b1f0c795-39d9-44cb-9d95-641dc259de0c",
        "text": "Thanks!",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g35782da8b2d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e35782da8b2d15b0c94c4cf4e01341cf.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Shahab Garoosi",
            "display_name": "ShahGar",
            "team": "T4G9NBD2M",
            "name": "shahab.garoosi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rTvXH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFTBRB3F1",
        "type": "message",
        "ts": "1551648306.012100",
        "client_msg_id": "ab9efa9a-d3e3-4168-a192-aecd5d9667ce",
        "text": "I have another frustratingly dumb question...all I'm trying to do, is append runner name into market_book, based on selectionId. Logically this shouldn't be difficult, but I keep getting various errors, regardless of which method I use.\n\nAll I'm doing is, using the code posted the other day (or very similar):\n\n```\n    for market_book in market_books:\n       for runner in market_book.runners:\n\n        market_catalogues = trading.betting.list_market_catalogue(\n            market_projection=[\"RUNNER_DESCRIPTION\", \"RUNNER_METADATA\", \"COMPETITION\", \"EVENT\", \"EVENT_TYPE\", \"MARKET_DESCRIPTION\", \"MARKET_START_TIME\"],\n            filter=betfairlightweight.filters.market_filter(\n                market_ids=[market_book.market_id],\n            ),\n            max_results=100)\n\n        data = []\n        for market_catalogue in market_catalogues:\n            for runner in market_catalogue.runners:\n                data.append(\n                    (runner.selection_id, runner.runner_name)\n                )\n```\n\nThat all works fine, but I then want to add runner name into market_book, based on selection_id = selectionId and I can't seem to do it.\n\nIs this just a stupid idea (i.e. am I missing the obvious and market_book(s) is actually immutable?), should I simply be creating a new list and appending that with what I need from market_book(s) and the above 2 column data list, or is it a sensible approach and I'm just don't know how to do it correctly?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g771e110be94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a771e110be945b86bede9d5c1bb551e3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Newbie99",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "vjmehra",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "D\/9l",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have another frustratingly dumb question...all I'm trying to do, is append runner name into market_book, based on selectionId. Logically this shouldn't be difficult, but I keep getting various errors, regardless of which method I use.\n\nAll I'm doing is, using the code posted the other day (or very similar):\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "    for market_book in market_books:\n       for runner in market_book.runners:\n\n        market_catalogues = trading.betting.list_market_catalogue(\n            market_projection=[\"RUNNER_DESCRIPTION\", \"RUNNER_METADATA\", \"COMPETITION\", \"EVENT\", \"EVENT_TYPE\", \"MARKET_DESCRIPTION\", \"MARKET_START_TIME\"],\n            filter=betfairlightweight.filters.market_filter(\n                market_ids=[market_book.market_id],\n            ),\n            max_results=100)\n\n        data = []\n        for market_catalogue in market_catalogues:\n            for runner in market_catalogue.runners:\n                data.append(\n                    (runner.selection_id, runner.runner_name)\n                )\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nThat all works fine, but I then want to add runner name into market_book, based on selection_id = selectionId and I can't seem to do it.\n\nIs this just a stupid idea (i.e. am I missing the obvious and market_book(s) is actually immutable?), should I simply be creating a new list and appending that with what I need from market_book(s) and the above 2 column data list, or is it a sensible approach and I'm just don't know how to do it correctly?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1551648704.012500",
        "client_msg_id": "986C5C71-D6C6-4594-8AFF-D874B6E526DC",
        "text": "You using streaming still?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "y45",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You using streaming still?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFTBRB3F1",
        "type": "message",
        "ts": "1551648929.015100",
        "client_msg_id": "5f45afbe-d77d-4fa2-9fae-b4311dfdb670",
        "text": "yes, this is just stuck on the end of the example streaming code from github. All works fine...other than I'm being a bit dense around whether I can append back into market_book(s) or whether I should just create a new list and go down that route (the end game being to output to a browser, but that's sort of irrelevant for now as my python logic is possibly wrong)",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g771e110be94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a771e110be945b86bede9d5c1bb551e3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Newbie99",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "vjmehra",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DhJ0h",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "yes, this is just stuck on the end of the example streaming code from github. All works fine...other than I'm being a bit dense around whether I can append back into market_book(s) or whether I should just create a new list and go down that route (the end game being to output to a browser, but that's sort of irrelevant for now as my python logic is possibly wrong)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5D4ZBEAG",
        "type": "message",
        "ts": "1551653214.016300",
        "client_msg_id": "e8083ddf-e174-47ce-937e-abf27b984ed2",
        "text": "&gt; That all works fine, but I then want to add runner name into market_book, based on selection_id = selectionId and I can't seem to do it.\n\nWhat does\n\n&gt; add runner name into market_book\n\nmean?  How are you `adding` a runner name `into` a market_book?\n\nAnd what does\n\n&gt; I can't seem to do it\n\nmean?  How can't you do... what?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g147ed91a398",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7147ed91a39866d363a9cfa66ef64cb8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "seaders",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "seaders",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YfQG",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That all works fine, but I then want to add runner name into market_book, based on selection_id = selectionId and I can't seem to do it."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nWhat does\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "add runner name into market_book"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nmean?  How are you "
                            },
                            {
                                "type": "text",
                                "text": "adding",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " a runner name "
                            },
                            {
                                "type": "text",
                                "text": "into",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " a market_book?\n\nAnd what does\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I can't seem to do it"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nmean?  How can't you do... what?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5D4ZBEAG",
        "type": "message",
        "ts": "1551653256.017000",
        "client_msg_id": "a5d2934e-812f-4464-9f3d-73cec5df0d87",
        "text": "```for market_book in market_books:\n       for runner in market_book.runners:\n\n        market_catalogues = trading.betting.list_market_catalogue(\n            market_projection=[\"RUNNER_DESCRIPTION\", \"RUNNER_METADATA\", \"COMPETITION\", \"EVENT\", \"EVENT_TYPE\", \"MARKET_DESCRIPTION\", \"MARKET_START_TIME\"],\n            filter=betfairlightweight.filters.market_filter(\n                market_ids=[market_book.market_id],\n            ),\n            max_results=100)```\nAlso don't do ^^^ - if you've 1000 market_books, that'll be 1000 calls to list_market_catalogue",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g147ed91a398",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7147ed91a39866d363a9cfa66ef64cb8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "seaders",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "seaders",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MUjEe",
                "elements": [
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "for market_book in market_books:\n       for runner in market_book.runners:\n\n        market_catalogues = trading.betting.list_market_catalogue(\n            market_projection=[\"RUNNER_DESCRIPTION\", \"RUNNER_METADATA\", \"COMPETITION\", \"EVENT\", \"EVENT_TYPE\", \"MARKET_DESCRIPTION\", \"MARKET_START_TIME\"],\n            filter=betfairlightweight.filters.market_filter(\n                market_ids=[market_book.market_id],\n            ),\n            max_results=100)"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also don't do ^^^ - if you've 1000 market_books, that'll be 1000 calls to list_market_catalogue"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5D4ZBEAG",
        "type": "message",
        "ts": "1551653313.018000",
        "client_msg_id": "cee1e7c0-2b57-489a-a57a-916b01002553",
        "text": "Do _something like_,\n```\nmarket_catalogues = trading.betting.list_market_catalogue(\n            market_projection=[\"RUNNER_DESCRIPTION\", \"RUNNER_METADATA\", \"COMPETITION\", \"EVENT\", \"EVENT_TYPE\", \"MARKET_DESCRIPTION\", \"MARKET_START_TIME\"],\n            filter=betfairlightweight.filters.market_filter(\n                market_ids=[mb.market_id for mb in market_books],\n            ),\n            max_results=100)\nfor market_book in market_books:\n       for runner in market_book.runners:\n        ```",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g147ed91a398",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7147ed91a39866d363a9cfa66ef64cb8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "seaders",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "seaders",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oiff",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Do "
                            },
                            {
                                "type": "text",
                                "text": "something like",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ","
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "market_catalogues = trading.betting.list_market_catalogue(\n            market_projection=[\"RUNNER_DESCRIPTION\", \"RUNNER_METADATA\", \"COMPETITION\", \"EVENT\", \"EVENT_TYPE\", \"MARKET_DESCRIPTION\", \"MARKET_START_TIME\"],\n            filter=betfairlightweight.filters.market_filter(\n                market_ids=[mb.market_id for mb in market_books],\n            ),\n            max_results=100)\nfor market_book in market_books:\n       for runner in market_book.runners:\n        "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5D4ZBEAG",
        "type": "message",
        "ts": "1551653350.018700",
        "client_msg_id": "16edf04e-3d63-431f-87ce-3aaa5ffadeda",
        "text": "then store the catalogues for however you wanna access them (dict accessible with a market_id key?)",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g147ed91a398",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7147ed91a39866d363a9cfa66ef64cb8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "seaders",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "seaders",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "38r+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "then store the catalogues for however you wanna access them (dict accessible with a market_id key?)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFTBRB3F1",
        "type": "message",
        "ts": "1551655073.023400",
        "client_msg_id": "2e862703-97e0-4106-b08d-2dd6cb17a342",
        "text": "well I'm not adding runner names to market_book :slightly_smiling_face: That was my (perceived) problem!\n\nI have the 'market_book' i.e. the state of the market for any given market_id, which is all good. However, visually I can't see what that relates too, hence I want the runner name, so I can see what the id relates to.\n\nBut I think, if I'm understanding correctly, essentially I need to create a new dict, rather than trying to mess around with manipulating the existing market_book from market_books?\n\nMaybe I'm explaining  it badly, but in php for example, this is a really simple thing to do, so perhaps its not clear what I'm attempting here?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g771e110be94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a771e110be945b86bede9d5c1bb551e3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Newbie99",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "vjmehra",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kjAEx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "well I'm not adding runner names to market_book "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " That was my (perceived) problem!\n\nI have the 'market_book' i.e. the state of the market for any given market_id, which is all good. However, visually I can't see what that relates too, hence I want the runner name, so I can see what the id relates to.\n\nBut I think, if I'm understanding correctly, essentially I need to create a new dict, rather than trying to mess around with manipulating the existing market_book from market_books?\n\nMaybe I'm explaining  it badly, but in php for example, this is a really simple thing to do, so perhaps its not clear what I'm attempting here?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5D4ZBEAG",
        "type": "message",
        "ts": "1551655209.024000",
        "client_msg_id": "5548c1a5-8f32-44cb-a5d3-6f23a4339d7d",
        "text": "dict - {(market_id, selection_id): runner_catalogue}",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g147ed91a398",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7147ed91a39866d363a9cfa66ef64cb8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "seaders",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "seaders",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cIPW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "dict - {(market_id, selection_id): runner_catalogue}"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5D4ZBEAG",
        "type": "message",
        "ts": "1551655269.024800",
        "edited": {
            "user": "U5D4ZBEAG",
            "ts": "1551655323.000000"
        },
        "client_msg_id": "118a1557-cc66-46a8-a545-4c146ff5b512",
        "text": "`{(m.market_id, r.selection_id): r for m in market_catalogues for r in m.runners}`",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g147ed91a398",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7147ed91a39866d363a9cfa66ef64cb8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "seaders",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "seaders",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "B6U",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "{(m.market_id, r.selection_id): r for m in market_catalogues for r in m.runners}",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5D4ZBEAG",
        "type": "message",
        "ts": "1551655404.026100",
        "client_msg_id": "36a2b57f-3724-4ad7-b0dc-8de5d78d3a4b",
        "text": "then, when you're poking around with the runner books, you access the runner catalogue via `runner_catalogue_dict[market_book, runner.selection_id]`",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g147ed91a398",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7147ed91a39866d363a9cfa66ef64cb8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "seaders",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "seaders",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wPJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "then, when you're poking around with the runner books, you access the runner catalogue via "
                            },
                            {
                                "type": "text",
                                "text": "runner_catalogue_dict[market_book, runner.selection_id]",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5D4ZBEAG",
        "type": "message",
        "ts": "1551655439.026600",
        "client_msg_id": "c0a84a60-c0e4-436b-83bc-f6012020661f",
        "text": "same with market_catalogues,\n`{m.market_id: m for m in market_catalogues}`",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g147ed91a398",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7147ed91a39866d363a9cfa66ef64cb8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "seaders",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "seaders",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/AG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "same with market_catalogues,\n"
                            },
                            {
                                "type": "text",
                                "text": "{m.market_id: m for m in market_catalogues}",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5D4ZBEAG",
        "type": "message",
        "ts": "1551655461.026900",
        "client_msg_id": "d0593230-ee92-43b9-a49b-1a036607ef28",
        "text": "but again, you should *not* be doing this every \"tick\"",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g147ed91a398",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7147ed91a39866d363a9cfa66ef64cb8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "seaders",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "seaders",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/BH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "but again, you should "
                            },
                            {
                                "type": "text",
                                "text": "not",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " be doing this every \"tick\""
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5D4ZBEAG",
        "type": "message",
        "ts": "1551655484.027500",
        "client_msg_id": "c95b5ee3-c540-4657-a5fd-6760ce19519b",
        "text": "you should have your market catalogues, and runner catalogues stored \/ cached independently to the stream tick",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g147ed91a398",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7147ed91a39866d363a9cfa66ef64cb8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "seaders",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "seaders",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7\/rVN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "you should have your market catalogues, and runner catalogues stored \/ cached independently to the stream tick"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5D4ZBEAG",
        "type": "message",
        "ts": "1551655494.027800",
        "client_msg_id": "c2fb7848-2058-4b5b-b759-0440bcbea541",
        "text": "and only get the ones you don't already have",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g147ed91a398",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7147ed91a39866d363a9cfa66ef64cb8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "seaders",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "seaders",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iLh0e",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "and only get the ones you don't already have"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5D4ZBEAG",
        "type": "message",
        "ts": "1551655509.028200",
        "client_msg_id": "01e11a4f-dde9-4c03-93b5-6801dd02d4f6",
        "text": "doing it any other way is how you get BetFair to hate you",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g147ed91a398",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7147ed91a39866d363a9cfa66ef64cb8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "seaders",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "seaders",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ssfDT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "doing it any other way is how you get BetFair to hate you"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFTBRB3F1",
        "type": "message",
        "ts": "1551685637.029500",
        "client_msg_id": "f68bba65-3216-4a68-89fd-2c25fa2448fa",
        "text": "Ok thanks that does make sense actually, I have only been testing with a very small market cache (often only 1 market) and on the delayed key, but of course you're right, in a live environment my approach wouldn't be viable so I'll make that change now, rather than later!",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g771e110be94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a771e110be945b86bede9d5c1bb551e3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Newbie99",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "vjmehra",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Rko",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ok thanks that does make sense actually, I have only been testing with a very small market cache (often only 1 market) and on the delayed key, but of course you're right, in a live environment my approach wouldn't be viable so I'll make that change now, rather than later!"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]