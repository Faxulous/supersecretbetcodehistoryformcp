[
    {
        "user": "U0401NFA7M1",
        "type": "message",
        "ts": "1661687431.539609",
        "edited": {
            "user": "U0401NFA7M1",
            "ts": "1661687533.000000"
        },
        "client_msg_id": "d3e080af-d6f7-40dc-b2ba-03025dc928e9",
        "text": "I'm testing streaming historical data using betfairlightweight. I can't get smart_open to work to open the bz2 files.\nIf I unzip the files it works fine.\nI am importing in my python script before doing anything, so I think the imported open should override the built in, but it is not working.\nAny help on using smart_open when reading the historical bz2 files?\n\n```from smart_open import open\n\nimport betfairlightweight\nfrom betfairlightweight import StreamListener\n\n...```",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "941c1fe82fd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-08-28\/4025567580544_941c1fe82fd649c7204c_72.jpg",
            "first_name": "Alan",
            "real_name": "Alan Patterson",
            "display_name": "Alan Patterson",
            "team": "T4G9NBD2M",
            "name": "alan.patterson5",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1661687431.539609",
        "reply_count": 7,
        "reply_users_count": 2,
        "latest_reply": "1661690467.581129",
        "reply_users": [
            "UBS7QANF3",
            "U0401NFA7M1"
        ],
        "replies": [
            {
                "user": "UBS7QANF3",
                "ts": "1661689491.411839"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1661689641.929459"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1661690222.615629"
            },
            {
                "user": "U0401NFA7M1",
                "ts": "1661690237.072859"
            },
            {
                "user": "U0401NFA7M1",
                "ts": "1661690257.238379"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1661690384.306589"
            },
            {
                "user": "U0401NFA7M1",
                "ts": "1661690467.581129"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "togaC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm testing streaming historical data using betfairlightweight. I can't get smart_open to work to open the bz2 files.\nIf I unzip the files it works fine.\nI am importing in my python script before doing anything, so I think the imported open should override the built in, but it is not working.\nAny help on using smart_open when reading the historical bz2 files?\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "from smart_open import open\n\nimport betfairlightweight\nfrom betfairlightweight import StreamListener\n\n..."
                            }
                        ],
                        "border": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1661689491.411839",
        "edited": {
            "user": "UBS7QANF3",
            "ts": "1661689581.000000"
        },
        "client_msg_id": "123e1087-6f09-4c9d-a1ea-dec041c5a27e",
        "text": "Are you actually patching the built-in open with smart_open's open? It's not enough to just import it",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1661687431.539609",
        "parent_user_id": "U0401NFA7M1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xyYm6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Are you actually patching the built-in open with smart_open's open? It's not enough to just import it"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1661689641.929459",
        "client_msg_id": "36504347-5a57-4a59-ba10-999af51a6fe9",
        "text": "Look at how I do it in `betfairutil`: <https:\/\/github.com\/mberk\/betfairutil\/blob\/dbb4adae34314497233974faaf6463dfba4b4c0a\/betfairutil\/__init__.py#L2171-L2244>",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1661687431.539609",
        "parent_user_id": "U0401NFA7M1",
        "attachments": [
            {
                "id": 1,
                "footer_icon": "https:\/\/slack.github.com\/static\/img\/favicon-neutral.png",
                "color": "24292f",
                "bot_id": "B021ZJYSBMW",
                "app_unfurl_url": "https:\/\/github.com\/mberk\/betfairutil\/blob\/dbb4adae34314497233974faaf6463dfba4b4c0a\/betfairutil\/__init__.py#L2171-L2244",
                "is_app_unfurl": true,
                "app_id": "A01BP7R4KNY",
                "fallback": "<https:\/\/github.com\/mberk\/betfairutil\/blob\/dbb4adae34314497233974faaf6463dfba4b4c0a\/betfairutil\/__init__.py | __init__.py>",
                "text": "```\ndef read_prices_file(\n    path_to_prices_file: Union[str, Path],\n    lightweight: bool = True,\n    market_type_filter: Optional[Sequence[str]] = None,\n    market_catalogues: Optional[\n        Sequence[Union[Dict[str, Any], MarketCatalogue]]\n    ] = None,\n    **kwargs,\n) -&gt; Union[List[MarketBook], List[Dict[str, Any]]]:\n    \"\"\"\n    Read a Betfair prices file (either from the official historic data or data recorded from the streaming API in the same format) into memory as a list of dicts or betfairlightweight MarketBook objects\n\n    :param path_to_prices_file: Where the Betfair prices file to be processed is located. This can be a local file, one stored in AWS S3, or any of the other options that can be handled by the smart_open package. The file can be compressed or uncompressed\n    :param lightweight: Passed to StreamListener. When True, the returned list contains dicts. When false, the returned list contains betfairlightweight MarketBook objects\n    :param market_type_filter: Optionally filter out market books with a market type which does not exist in the given sequence. Generally only makes sense when reading files that contain multiple market types, such as event-level official historic data files\n    :param market_catalogues: Optionally provide a list of market catalogues, as either dicts or betfairlightweight MarketCatalogue objects, that can be used to add runner names to the market books. Only makes sense when the prices file has been recorded from the streaming API\n    :param kwargs: Passed to StreamListener\n    :return: A list of market books, either as dicts or betfairlightweight MarketBook objects depending on whether the lightweight parameter is True or False respectively\n    \"\"\"\n    import smart_open\n    from unittest.mock import patch\n\n    market_catalogues = market_catalogues or []\n\n    trading = APIClient(username=\"\", password=\"\", app_key=\"\")\n    stream = trading.streaming.create_historical_generator_stream(\n        file_path=path_to_prices_file,\n        listener=StreamListener(\n            max_latency=None, lightweight=lightweight, update_clk=False, **kwargs\n        ),\n    )\n\n    with patch(\"builtins.open\", smart_open.open):\n        g = stream.get_generator()\n        market_books = list(\n            mb\n            for mbs in g()\n            for mb in mbs\n            if market_type_filter is None\n            or (\n                lightweight\n                and mb[\"marketDefinition\"][\"marketType\"] in market_type_filter\n            )\n            or (\n                not lightweight\n                and mb.market_definition.market_type in market_type_filter\n            )\n        )\n\n    if (\n        market_books\n        and not does_market_book_contain_runner_names(market_books[0])\n        and market_catalogues\n    ):\n        selection_id_to_runner_name_map = {\n            selection_id: runner_name\n            for mc in market_catalogues\n            for selection_id, runner_name in get_selection_id_to_runner_name_map_from_market_catalogue(\n                mc\n            ).items()\n        }\n        for market_book in market_books:\n            if lightweight:\n                for runner in market_book[\"marketDefinition\"][\"runners\"]:\n                    if runner[\"id\"] in selection_id_to_runner_name_map:\n                        runner[\"name\"] = selection_id_to_runner_name_map[runner[\"id\"]]\n            else:\n                for runner in market_book.market_definition.runners:\n                    if runner.selection_id in selection_id_to_runner_name_map:\n                        runner.name = selection_id_to_runner_name_map[\n                            runner.selection_id\n                        ]\n\n    return market_books\n```",
                "title": "<https:\/\/github.com\/mberk\/betfairutil\/blob\/dbb4adae34314497233974faaf6463dfba4b4c0a\/betfairutil\/__init__.py | __init__.py>",
                "footer": "<https:\/\/github.com\/mberk\/betfairutil|mberk\/betfairutil>",
                "mrkdwn_in": [
                    "text"
                ]
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0Iha",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Look at how I do it in "
                            },
                            {
                                "type": "text",
                                "text": "betfairutil",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ": "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/mberk\/betfairutil\/blob\/dbb4adae34314497233974faaf6463dfba4b4c0a\/betfairutil\/__init__.py#L2171-L2244"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1661690222.615629",
        "client_msg_id": "ba299803-3ddf-483b-81be-0120e28cf7d7",
        "text": "```with patch(\"builtins.open\", smart_open.open):\n    # run code that uses open() in here```",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1661687431.539609",
        "parent_user_id": "U0401NFA7M1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WCm",
                "elements": [
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "with patch(\"builtins.open\", smart_open.open):\n    # run code that uses open() in here"
                            }
                        ],
                        "border": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "U0401NFA7M1",
        "type": "message",
        "ts": "1661690237.072859",
        "client_msg_id": "a786c90c-9149-4689-891a-ec21e6163265",
        "text": "Yeah, I use smart_open elsewhere and you usually just import its open before you use it.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "941c1fe82fd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-08-28\/4025567580544_941c1fe82fd649c7204c_72.jpg",
            "first_name": "Alan",
            "real_name": "Alan Patterson",
            "display_name": "Alan Patterson",
            "team": "T4G9NBD2M",
            "name": "alan.patterson5",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1661687431.539609",
        "parent_user_id": "U0401NFA7M1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "T0wq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, I use smart_open elsewhere and you usually just import its open before you use it."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0401NFA7M1",
        "type": "message",
        "ts": "1661690257.238379",
        "client_msg_id": "9bd74740-8ede-4e33-8f55-5c919e221c2c",
        "text": "But I must be wrong :slightly_smiling_face:  I'll take a look at what you are doing",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "941c1fe82fd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-08-28\/4025567580544_941c1fe82fd649c7204c_72.jpg",
            "first_name": "Alan",
            "real_name": "Alan Patterson",
            "display_name": "Alan Patterson",
            "team": "T4G9NBD2M",
            "name": "alan.patterson5",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1661687431.539609",
        "parent_user_id": "U0401NFA7M1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QCCNY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "But I must be wrong "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": "  I'll take a look at what you are doing"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1661690384.306589",
        "client_msg_id": "8c1e9401-16fc-4f71-b808-2c9632479f2e",
        "text": "That's true if you are calling open directly yourself. But if you're calling code from elsewhere you will need to patch",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1661687431.539609",
        "parent_user_id": "U0401NFA7M1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kJn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That's true if you are calling open directly yourself. But if you're calling code from elsewhere you will need to patch"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0401NFA7M1",
        "type": "message",
        "ts": "1661690467.581129",
        "client_msg_id": "dee47493-19d9-4151-b74f-00b69577af2e",
        "text": "Ah, got it.  Thanks for that. Makes sense.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "941c1fe82fd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-08-28\/4025567580544_941c1fe82fd649c7204c_72.jpg",
            "first_name": "Alan",
            "real_name": "Alan Patterson",
            "display_name": "Alan Patterson",
            "team": "T4G9NBD2M",
            "name": "alan.patterson5",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1661687431.539609",
        "parent_user_id": "U0401NFA7M1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AT0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah, got it.  Thanks for that. Makes sense."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02CYRC190R",
        "type": "message",
        "ts": "1661716328.450649",
        "client_msg_id": "18fb4dea-9cd7-407a-be5c-e3113cfc945c",
        "text": "is there any example code for doing so, Liam? (thank you in advance)",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g1eb70ee9874",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/1eb70ee9874cc4b2e32a68a0b743d4d5.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0014-72.png",
            "first_name": "Jimmy",
            "real_name": "Jimmy",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "james",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1661433740.424099",
        "parent_user_id": "U02CYRC190R",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Mob",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "is there any example code for doing so, Liam? (thank you in advance)"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]