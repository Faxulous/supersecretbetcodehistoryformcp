[
    {
        "subtype": "channel_join",
        "user": "U0332B4HC4R",
        "text": "<@U0332B4HC4R> has joined the channel",
        "type": "message",
        "ts": "1644579805.840609"
    },
    {
        "user": "U02RN7YDRQ9",
        "type": "message",
        "ts": "1644594205.416839",
        "edited": {
            "user": "U02RN7YDRQ9",
            "ts": "1644605922.000000"
        },
        "client_msg_id": "e70cc72e-f964-428e-8bf0-1a677eceffcb",
        "text": "<@U016TGY3676> It's on a Windows server so was easier to replicate my devenv and run it that way for now rather than setting up for command line. Early days with flumine and it has helped with some needed debugging and quick fixes. PyCharm is certainly a memory hog though which with other stuff that runs is pushing the hardware.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "ge46f1f8b708",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e46f1f8b708a630e3191de7b2c42b1d1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "edblock",
            "real_name": "edblock",
            "display_name": "foxwood",
            "team": "T4G9NBD2M",
            "name": "eanb",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1643891053.786049",
        "parent_user_id": "U02RN7YDRQ9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "t5P=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U016TGY3676"
                            },
                            {
                                "type": "text",
                                "text": " It's on a Windows server so was easier to replicate my devenv and run it that way for now rather than setting up for command line. Early days with flumine and it has helped with some needed debugging and quick fixes. PyCharm is certainly a memory hog though which with other stuff that runs is pushing the hardware."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "channel_join",
        "user": "U032RLDJAQ2",
        "text": "<@U032RLDJAQ2> has joined the channel",
        "type": "message",
        "ts": "1644600821.615509"
    },
    {
        "user": "UPMUFSGCR",
        "type": "message",
        "ts": "1644622803.500949",
        "client_msg_id": "1eae9776-399e-49a8-95e5-3395d842cc13",
        "text": "One thing to be careful of, if doing calculations with numpy, is that if your code returns float64 objects, it can't be converted with json.loads",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "31c0bb5a442c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-28\/812386967189_31c0bb5a442c5b8d2c61_72.png",
            "first_name": "Jon",
            "real_name": "Jon Jon Jon Jon Jon Jon Jon Jon",
            "display_name": "Jonjonjon",
            "team": "T4G9NBD2M",
            "name": "fcmisc",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "E86",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One thing to be careful of, if doing calculations with numpy, is that if your code returns float64 objects, it can't be converted with json.loads"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UPMUFSGCR",
        "type": "message",
        "ts": "1644622830.911489",
        "client_msg_id": "f7356a3c-6542-437c-a0e5-92855b02aea6",
        "text": "Only seems to affect orjson",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "31c0bb5a442c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-28\/812386967189_31c0bb5a442c5b8d2c61_72.png",
            "first_name": "Jon",
            "real_name": "Jon Jon Jon Jon Jon Jon Jon Jon",
            "display_name": "Jonjonjon",
            "team": "T4G9NBD2M",
            "name": "fcmisc",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "feWGO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Only seems to affect orjson"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UPMUFSGCR",
        "type": "message",
        "ts": "1644622839.904549",
        "edited": {
            "user": "UPMUFSGCR",
            "ts": "1644623723.000000"
        },
        "client_msg_id": "54b20ef4-3e1c-464c-b9f3-81ec223dc279",
        "text": "`x = np.float64(123)`\n`import json`\n`json.dumps({\"A\":x})`\n`Out[8]: '{\"A\": 123.0}'`\n`import orjson`\n`orjson.dumps({\"A\":x})`\n`Traceback (most recent call last):`\n  `File \"\/home\/jon\/miniconda3\/envs\/betfair\/lib\/python3.8\/site-packages\/IPython\/core\/interactiveshell.py\", line 3418, in run_code`\n    `exec(code_obj, self.user_global_ns, self.user_ns)`\n  `File \"&lt;ipython-input-10-801def5f984d&gt;\", line 1, in &lt;module&gt;`\n    `orjson.dumps({\"A\":x})`\n`TypeError: Type is not JSON serializable: numpy.float64`",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "31c0bb5a442c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-28\/812386967189_31c0bb5a442c5b8d2c61_72.png",
            "first_name": "Jon",
            "real_name": "Jon Jon Jon Jon Jon Jon Jon Jon",
            "display_name": "Jonjonjon",
            "team": "T4G9NBD2M",
            "name": "fcmisc",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "32F+8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "x = np.float64(123)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "import json",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "json.dumps({\"A\":x})",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "Out[8]: '{\"A\": 123.0}'",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "import orjson",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "orjson.dumps({\"A\":x})",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "Traceback (most recent call last):",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "  File \"\/home\/jon\/miniconda3\/envs\/betfair\/lib\/python3.8\/site-packages\/IPython\/core\/interactiveshell.py\", line 3418, in run_code",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "    exec(code_obj, self.user_global_ns, self.user_ns)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "  File \"<ipython-input-10-801def5f984d>\", line 1, in <module>",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "    orjson.dumps({\"A\":x})",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "TypeError: Type is not JSON serializable: numpy.float64",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UPMUFSGCR",
        "type": "message",
        "ts": "1644623130.265859",
        "client_msg_id": "891ef987-8ce8-4cb6-9a0b-1de48082923c",
        "text": "So that bug affects order placement, when the request is being generated to send an order.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "31c0bb5a442c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-28\/812386967189_31c0bb5a442c5b8d2c61_72.png",
            "first_name": "Jon",
            "real_name": "Jon Jon Jon Jon Jon Jon Jon Jon",
            "display_name": "Jonjonjon",
            "team": "T4G9NBD2M",
            "name": "fcmisc",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bagEQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So that bug affects order placement, when the request is being generated to send an order."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UPMUFSGCR",
        "type": "message",
        "ts": "1644623551.952699",
        "client_msg_id": "6bf1105a-3d25-4ee9-ade5-d555202e6f2b",
        "text": "Specifically, it will break this bit of BFLW, though I don't think tests will pick it up:\n\n<https:\/\/github.com\/liampauling\/betfair\/blob\/f76f60bf887dbbac156a7ed5f7a759b4194ae844\/betfairlightweight\/endpoints\/baseendpoint.py#L58-L67>",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "31c0bb5a442c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-28\/812386967189_31c0bb5a442c5b8d2c61_72.png",
            "first_name": "Jon",
            "real_name": "Jon Jon Jon Jon Jon Jon Jon Jon",
            "display_name": "Jonjonjon",
            "team": "T4G9NBD2M",
            "name": "fcmisc",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "id": 1,
                "footer_icon": "https:\/\/slack.github.com\/static\/img\/favicon-neutral.png",
                "color": "24292f",
                "bot_id": "B021ZJYSBMW",
                "app_unfurl_url": "https:\/\/github.com\/liampauling\/betfair\/blob\/f76f60bf887dbbac156a7ed5f7a759b4194ae844\/betfairlightweight\/endpoints\/baseendpoint.py#L58-L67",
                "is_app_unfurl": true,
                "app_id": "A01BP7R4KNY",
                "fallback": "<https:\/\/github.com\/liampauling\/betfair\/blob\/f76f60bf887dbbac156a7ed5f7a759b4194ae844\/betfairlightweight\/endpoints\/baseendpoint.py | baseendpoint.py>",
                "text": "```\n    @staticmethod\n    def create_req(method: str, params: dict) -&gt; Union[str, bytes]:\n        \"\"\"\n        :param method: Betfair api-ng method to be used.\n        :param params: Params to be used in request.\n        :return: Json payload.\n        \"\"\"\n        return json.dumps(\n            {\"jsonrpc\": \"2.0\", \"method\": method, \"params\": params, \"id\": 1}\n        )\n```",
                "title": "<https:\/\/github.com\/liampauling\/betfair\/blob\/f76f60bf887dbbac156a7ed5f7a759b4194ae844\/betfairlightweight\/endpoints\/baseendpoint.py | baseendpoint.py>",
                "footer": "<https:\/\/github.com\/liampauling\/betfair|liampauling\/betfair>",
                "mrkdwn_in": [
                    "text"
                ]
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jKOO2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Specifically, it will break this bit of BFLW, though I don't think tests will pick it up:\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/liampauling\/betfair\/blob\/f76f60bf887dbbac156a7ed5f7a759b4194ae844\/betfairlightweight\/endpoints\/baseendpoint.py#L58-L67"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UPMUFSGCR",
        "type": "message",
        "ts": "1644623630.787219",
        "client_msg_id": "93af97f4-c737-48ad-a9b9-74ead60b62d4",
        "text": "It accidentally popped up in my code after I un-commented some `numba` decorators that I'd commented out for debugging purposes many moons ago.:disappointed:",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "31c0bb5a442c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-28\/812386967189_31c0bb5a442c5b8d2c61_72.png",
            "first_name": "Jon",
            "real_name": "Jon Jon Jon Jon Jon Jon Jon Jon",
            "display_name": "Jonjonjon",
            "team": "T4G9NBD2M",
            "name": "fcmisc",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RN14",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It accidentally popped up in my code after I un-commented some "
                            },
                            {
                                "type": "text",
                                "text": "numba",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " decorators that I'd commented out for debugging purposes many moons ago."
                            },
                            {
                                "type": "emoji",
                                "name": "disappointed",
                                "unicode": "1f61e"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]