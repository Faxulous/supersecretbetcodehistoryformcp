[
    {
        "user": "UCQB6S222",
        "type": "message",
        "ts": "1659747147.079449",
        "edited": {
            "user": "UCQB6S222",
            "ts": "1659747195.000000"
        },
        "client_msg_id": "1a30a7f1-533b-4c48-9cd8-93f30d4adfea",
        "text": "Under some conditions, it doesn't seem to be possible to run a Flumine racing simulation with `SimulatedSportsDataMiddleware` across multiple markets.\nThe logic in the software appears to be as follows:\n• `add_market` is called for race 1\n• simulation begins to work normally taking in race 1 TPD data\n• `add_market` is called for race 2\n• simulation for race 1 continues abnormally, attempting to use race 2 TPD data\n• race 1 finishes\n• `remove_market` is called for race 1, but the TPD data was race 2 data, which is what is removed (the race 1 data was overwritten anyway)\n• simulation for race 2 is attempted, but there is now no TPD data at all, so the code crashes\nNow the question is - why would `add_market` be called for race 2, before race 1 has finished? I think this is occurring because I have `EX_MARKET_DEF` in my MarketRecorder script and, because the race status is SUSPENDED when these updates come around, they are not skipped. I'm not sure about this though, and in fact any update where the market is SUSPENDED would presumably cause this issue.\n\nTagging <@U4H19D1D2> as this appears to be a Flumine bug but I would rather be wrong and hoping it's just user error... please let me know either way!Thanks",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g953ffd5e3b7",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5813be539113b05ece8212c2a06d006a.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "George",
            "real_name": "George",
            "display_name": "George",
            "team": "T4G9NBD2M",
            "name": "gd",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1659747147.079449",
        "reply_count": 41,
        "reply_users_count": 2,
        "latest_reply": "1660039876.429019",
        "reply_users": [
            "U4H19D1D2",
            "UCQB6S222"
        ],
        "replies": [
            {
                "user": "U4H19D1D2",
                "ts": "1659767386.346579"
            },
            {
                "user": "UCQB6S222",
                "ts": "1659796059.699809"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1659796118.682649"
            },
            {
                "user": "UCQB6S222",
                "ts": "1659796143.768289"
            },
            {
                "user": "UCQB6S222",
                "ts": "1659796237.552889"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1659796272.031889"
            },
            {
                "user": "UCQB6S222",
                "ts": "1659796275.560249"
            },
            {
                "user": "UCQB6S222",
                "ts": "1659796288.115589"
            },
            {
                "user": "UCQB6S222",
                "ts": "1659796313.525139"
            },
            {
                "user": "UCQB6S222",
                "ts": "1659796368.216209"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1659796398.689769"
            },
            {
                "user": "UCQB6S222",
                "ts": "1659796532.681899"
            },
            {
                "user": "UCQB6S222",
                "ts": "1659796537.160879"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1659796554.744109"
            },
            {
                "user": "UCQB6S222",
                "ts": "1659796862.425239"
            },
            {
                "user": "UCQB6S222",
                "ts": "1659797103.806099"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1659801577.204919"
            },
            {
                "user": "UCQB6S222",
                "ts": "1659801834.327599"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1659801893.774919"
            },
            {
                "user": "UCQB6S222",
                "ts": "1659802007.731079"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1659802164.255959"
            },
            {
                "user": "UCQB6S222",
                "ts": "1659802195.858799"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1659945065.084479"
            },
            {
                "user": "UCQB6S222",
                "ts": "1659947738.057199"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1659948188.204969"
            },
            {
                "user": "UCQB6S222",
                "ts": "1659948595.002699"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1659948640.887509"
            },
            {
                "user": "UCQB6S222",
                "ts": "1659948719.884879"
            },
            {
                "user": "UCQB6S222",
                "ts": "1659948836.760829"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1659949092.724919"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1659949216.260829"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1659949271.985539"
            },
            {
                "user": "UCQB6S222",
                "ts": "1659949351.694109"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1659949421.016269"
            },
            {
                "user": "UCQB6S222",
                "ts": "1659949624.030069"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1659949755.100479"
            },
            {
                "user": "UCQB6S222",
                "ts": "1659949816.493009"
            },
            {
                "user": "UCQB6S222",
                "ts": "1659977129.820099"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1659982155.642529"
            },
            {
                "user": "UCQB6S222",
                "ts": "1659988246.279509"
            },
            {
                "user": "UCQB6S222",
                "ts": "1660039876.429019"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1660039876.429019",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=wqqq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Under some conditions, it doesn't seem to be possible to run a Flumine racing simulation with "
                            },
                            {
                                "type": "text",
                                "text": "SimulatedSportsDataMiddleware",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " across multiple markets.\nThe logic in the software appears to be as follows:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "add_market",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " is called for race 1"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "simulation begins to work normally taking in race 1 TPD data"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "add_market",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " is called for race 2"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "simulation for race 1 continues abnormally, attempting to use race 2 TPD data"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "race 1 finishes"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "remove_market",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " is called for race 1, but the TPD data was race 2 data, which is what is removed (the race 1 data was overwritten anyway)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "simulation for race 2 is attempted, but there is now no TPD data at all, so the code crashes"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nNow the question is - why would "
                            },
                            {
                                "type": "text",
                                "text": "add_market",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " be called for race 2, before race 1 has finished? I think this is occurring because I have "
                            },
                            {
                                "type": "text",
                                "text": "EX_MARKET_DEF",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " in my MarketRecorder script and, because the race status is SUSPENDED when these updates come around, they are not skipped. I'm not sure about this though, and in fact any update where the market is SUSPENDED would presumably cause this issue.\n\nTagging "
                            },
                            {
                                "type": "user",
                                "user_id": "U4H19D1D2"
                            },
                            {
                                "type": "text",
                                "text": " as this appears to be a Flumine bug but I would rather be wrong and hoping it's just user error... please let me know either way!Thanks"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1659767386.346579",
        "client_msg_id": "EC504F54-58D5-4052-AD96-2D13E9BF0C3C",
        "text": "Are you able to share some code on how you are running this? The simulation expects the market and race files to be in separate files per id, are you passing in files with more than one market?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1659747147.079449",
        "parent_user_id": "UCQB6S222",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WDt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A"
                            },
                            {
                                "type": "text",
                                "text": "re you able to share some code on how "
                            },
                            {
                                "type": "text",
                                "text": "you "
                            },
                            {
                                "type": "text",
                                "text": "are running this? The simulation expects "
                            },
                            {
                                "type": "text",
                                "text": "t"
                            },
                            {
                                "type": "text",
                                "text": "he market and race files to be in "
                            },
                            {
                                "type": "text",
                                "text": "separate "
                            },
                            {
                                "type": "text",
                                "text": "files per id, are you passing in files with more than one market?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1659767478.584589",
        "client_msg_id": "fbd9ec41-c9fd-45b8-af74-0a8cfabe99a1",
        "text": "This is a bit obscure but when backtesting using concurrent.futures i.e. multiprocessing I sometimes get a BrokenProcessPool because one of the worker processes has a segmentation fault. Using <https:\/\/docs.python.org\/3\/library\/faulthandler.html|faulthandler>, the stack trace shows me the segmentation fault occurs when using betfairlightweight to read the prices file on <https:\/\/github.com\/betcode-org\/betfair\/blob\/master\/betfairlightweight\/streaming\/cache.py#L83|this line in cache.py>:\n\n```class Available:\n...\n    def serialise(self) -&gt; None:\n-&gt;      self.serialised = [book[-1] for book in self.order_book.values()]```\nUsually I can just restart the backtest and then everything works fine. In fact, it usually happens once or twice after booting and after that I can run as many backtests as I like without error. Anyone experienced anything similar?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1659767478.584589",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1659768196.645339",
        "reply_users": [
            "U4H19D1D2"
        ],
        "replies": [
            {
                "user": "U4H19D1D2",
                "ts": "1659768196.645339"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1659768196.645339",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GqiqW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is a bit obscure but when backtesting using concurrent.futures i.e. multiprocessing I sometimes get a BrokenProcessPool because one of the worker processes has a segmentation fault. Using "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/docs.python.org\/3\/library\/faulthandler.html",
                                "text": "faulthandler"
                            },
                            {
                                "type": "text",
                                "text": ", the stack trace shows me the segmentation fault occurs when using betfairlightweight to read the prices file on "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/betcode-org\/betfair\/blob\/master\/betfairlightweight\/streaming\/cache.py#L83",
                                "text": "this line in cache.py",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ":\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "class Available:\n...\n    def serialise(self) -> None:\n->      self.serialised = [book[-1] for book in self.order_book.values()]"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nUsually I can just restart the backtest and then everything works fine. In fact, it usually happens once or twice after booting and after that I can run as many backtests as I like without error. Anyone experienced anything similar?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1659768196.645339",
        "client_msg_id": "1FAAA0EF-BABA-4183-B300-F0E83BF8D9E7",
        "text": "Never seen this, particular Python\/os specific issue?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1659767478.584589",
        "parent_user_id": "UBS7QANF3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "h2ye",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Never seen this, particular "
                            },
                            {
                                "type": "text",
                                "text": "Python"
                            },
                            {
                                "type": "text",
                                "text": "\/os specific issue?"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]