[
    {
        "user": "U92CASP1B",
        "type": "message",
        "ts": "1580042082.006900",
        "client_msg_id": "86ca9fd0-49a0-4637-81ae-255085919b20",
        "text": "I wonder if this is the intended behavior,\n\n<https:\/\/github.com\/liampauling\/betfair\/blob\/f41260e759b27ceb1b91444cb7fd626c8a5acfcc\/betfairlightweight\/streaming\/betfairstream.py#L210>\n\n``` while self._running and part[-2:] != crlf_bytes:\n            try:\n                part = self._socket.recv(self.buffer_size)```\nFirst could this not result in endless loop (theoretically)?\n\nAssume that we choose our receive read buffer small and that the server pushes messages faster then we can read. Then the kernel buffer will never empty if we are not lucky and find a delimiter.\n\nThis would not yield a real world problem but should we not read up until the first delimiter  and then process, or set some limit on how many maximum messages  we should receive?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g374352c822f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a374352c822fa856c4cfdd782bbb8669.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0007-72.png",
            "first_name": "Jonatan",
            "real_name": "Jonatan",
            "display_name": "Jonatan (skyw)",
            "team": "T4G9NBD2M",
            "name": "almen.jonatan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "liampauling\/betfair",
                "title_link": "https:\/\/github.com\/liampauling\/betfair\/blob\/f41260e759b27ceb1b91444cb7fd626c8a5acfcc\/betfairlightweight\/streaming\/betfairstream.py#L210",
                "text": "Lightweight python wrapper for Betfair API-NG (with streaming) - liampauling\/betfair",
                "fallback": "GitHub: liampauling\/betfair",
                "thumb_url": "https:\/\/avatars2.githubusercontent.com\/u\/12016537?s=400&v=4",
                "from_url": "https:\/\/github.com\/liampauling\/betfair\/blob\/f41260e759b27ceb1b91444cb7fd626c8a5acfcc\/betfairlightweight\/streaming\/betfairstream.py#L210",
                "thumb_width": 392,
                "thumb_height": 392,
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/github.png",
                "id": 1,
                "original_url": "https:\/\/github.com\/liampauling\/betfair\/blob\/f41260e759b27ceb1b91444cb7fd626c8a5acfcc\/betfairlightweight\/streaming\/betfairstream.py#L210"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ltcYN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I wonder if this is the intended behavior,\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/liampauling\/betfair\/blob\/f41260e759b27ceb1b91444cb7fd626c8a5acfcc\/betfairlightweight\/streaming\/betfairstream.py#L210"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": " while self._running and part[-2:] != crlf_bytes:\n            try:\n                part = self._socket.recv(self.buffer_size)"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nFirst could this not result in endless loop (theoretically)?\n\nAssume that we choose our receive read buffer small and that the server pushes messages faster then we can read. Then the kernel buffer will never empty if we are not lucky and find a delimiter.\n\nThis would not yield a real world problem but should we not read up until the first delimiter  and then process, or set some limit on how many maximum messages  we should receive?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1580042770.007800",
        "client_msg_id": "3174C50D-A4EC-414D-86E4-0D5BD693C4E5",
        "text": "Not lucky? Assumption has to be that a delimiter will be sent, no?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tg=l",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not lucky? Assumption has to be that a delimiter will be sent, no?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U92CASP1B",
        "type": "message",
        "ts": "1580042839.009000",
        "client_msg_id": "2a5f7a27-8631-4a39-a0f8-5aed0515eaee",
        "text": "Yeah, but not that it should end with one",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g374352c822f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a374352c822fa856c4cfdd782bbb8669.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0007-72.png",
            "first_name": "Jonatan",
            "real_name": "Jonatan",
            "display_name": "Jonatan (skyw)",
            "team": "T4G9NBD2M",
            "name": "almen.jonatan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Hy1jS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, but not that it should end with one"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U92CASP1B",
        "type": "message",
        "ts": "1580042967.010800",
        "client_msg_id": "4210ad08-367a-4e48-86ce-33444d10ce00",
        "text": "Assume segmented\n\nb\"{.....}\\r\\n{....\"\n\nThen we proceed reading\n\nif kernel buffer not empty then it coul be the same as above?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g374352c822f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a374352c822fa856c4cfdd782bbb8669.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0007-72.png",
            "first_name": "Jonatan",
            "real_name": "Jonatan",
            "display_name": "Jonatan (skyw)",
            "team": "T4G9NBD2M",
            "name": "almen.jonatan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "s9S5C",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Assume segmented\n\nb\"{.....}\\r\\n{....\"\n\nThen we proceed reading\n\nif kernel buffer not empty then it coul be the same as above?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U92CASP1B",
        "type": "message",
        "ts": "1580043017.011500",
        "client_msg_id": "ddadfe0f-3b66-43c9-8f2a-af33f52db06b",
        "text": "We can only be sure that it could end if we completely emptied the kernel buffer?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g374352c822f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a374352c822fa856c4cfdd782bbb8669.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0007-72.png",
            "first_name": "Jonatan",
            "real_name": "Jonatan",
            "display_name": "Jonatan (skyw)",
            "team": "T4G9NBD2M",
            "name": "almen.jonatan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sPO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "We can only be sure that it could end if we completely emptied the kernel buffer?"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]