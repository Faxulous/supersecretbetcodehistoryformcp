[
    {
        "user": "U027P3N2WMQ",
        "type": "message",
        "ts": "1663659602.551089",
        "client_msg_id": "02446729-9a40-4590-84c4-b3bed837b36c",
        "text": "Is there a dictionary for error codes? I'm getting -32602 and I'm not sure what it means",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gc41721181dc",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c41721181dc4833c08c32f14cddc81b6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0026-72.png",
            "first_name": "Michael",
            "real_name": "Michael Leary",
            "display_name": "Michael",
            "team": "T4G9NBD2M",
            "name": "michaelleary15",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6U5Xh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is there a dictionary for error codes? I'm getting -32602 and I'm not sure what it means"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1663659673.944839",
        "client_msg_id": "f5d9fc2c-41c4-4c30-be8a-6f5aa194fcaa",
        "text": "<https:\/\/docs.developer.betfair.com\/display\/1smk3cen4v3lu3yomq5qye0ni\/Betting+Exceptions>\n\n&gt; -32602\t\n&gt; \n&gt; Problem parsing the parameters, or a mandatory parameter was not found",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DhLB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/docs.developer.betfair.com\/display\/1smk3cen4v3lu3yomq5qye0ni\/Betting+Exceptions"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "-32602\t\n\nProblem parsing the parameters, or a mandatory parameter was not found"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01LD3EU8B0",
        "type": "message",
        "ts": "1663705022.124469",
        "client_msg_id": "50d8b97f-4f59-4ce5-841d-4a09fdd6dc26",
        "text": "I'm looking at the <https:\/\/betcode-org.github.io\/flumine\/performance\/|multiprocessing code example in the docs>, which I've got working, but how do people usually assess the combined results? When running a single process you have a single framework and can <https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/examples\/simulate.py#L34|iterate over the markets and orders>, but it's less obvious how to do this when multiprocessing, (without looking at each framework in isolation.)",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "91f0ca4990b2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-02-01\/1685122555351_91f0ca4990b2be2e385b_72.png",
            "first_name": "TT",
            "real_name": "TT",
            "display_name": "TT",
            "team": "T4G9NBD2M",
            "name": "timtaylor.uk1",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "from_url": "https:\/\/betcode-org.github.io\/flumine\/performance\/",
                "service_icon": "https:\/\/betcode-org.github.io\/flumine\/images\/logo.png",
                "id": 1,
                "original_url": "https:\/\/betcode-org.github.io\/flumine\/performance\/",
                "fallback": "Performance - flumine",
                "text": "Betting trading framework",
                "title": "Performance - flumine",
                "title_link": "https:\/\/betcode-org.github.io\/flumine\/performance\/",
                "service_name": "betcode-org.github.io"
            },
            {
                "id": 2,
                "footer_icon": "https:\/\/slack.github.com\/static\/img\/favicon-neutral.png",
                "color": "24292f",
                "bot_id": "B021ZJYSBMW",
                "app_unfurl_url": "https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/examples\/simulate.py#L34",
                "is_app_unfurl": true,
                "app_id": "A01BP7R4KNY",
                "fallback": "<https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/examples\/simulate.py | simulate.py>",
                "text": "```\nfor market in framework.markets:\n```",
                "title": "<https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/examples\/simulate.py | simulate.py>",
                "footer": "<https:\/\/github.com\/betcode-org\/flumine|betcode-org\/flumine>",
                "mrkdwn_in": [
                    "text"
                ]
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pzaeU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm looking at the "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/betcode-org.github.io\/flumine\/performance\/",
                                "text": "multiprocessing code example in the docs"
                            },
                            {
                                "type": "text",
                                "text": ", which I've got working, but how do people usually assess the combined results? When running a single process you have a single framework and can "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/betcode-org\/flumine\/blob\/master\/examples\/simulate.py#L34",
                                "text": "iterate over the markets and orders"
                            },
                            {
                                "type": "text",
                                "text": ", but it's less obvious how to do this when multiprocessing, (without looking at each framework in isolation.)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0128E7BEHW",
        "type": "message",
        "ts": "1663705442.432389",
        "client_msg_id": "cae13333-eac9-440c-bdec-e9af59098732",
        "text": "Make your distributable function return a list of orders, merge these lists at the end",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb57a2bdd15a",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b57a2bdd15acccdb845ce257f38940cc.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Dave",
            "real_name": "Dave R",
            "display_name": "Dave",
            "team": "T4G9NBD2M",
            "name": "d7m",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PJv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Make your distributable function return a list of orders, merge these lists at the end"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U9JHLMZB4",
        "type": "message",
        "ts": "1663706017.826079",
        "edited": {
            "user": "U9JHLMZB4",
            "ts": "1663751177.000000"
        },
        "client_msg_id": "ee2276ae-5a46-42cb-971d-4ef72dd0449c",
        "text": "Not a big fan of merging at the end. If the code meets an unexpected issue (often something strange in the data), it can result in all the results being lost. So I prefer to have each iteration of the processing function write its results to a file dedicated to that iteration and usually named for a market. If all goes well the external files can be merged when analysing the data at the end. If something goes wrong there's no need to repeat the processing for the markets that worked.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g951ddcb43e7",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3951ddcb43e788a387d6daf330dad5ca.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0018-72.png",
            "first_name": "",
            "real_name": "Peter Coles",
            "display_name": "Peter",
            "team": "T4G9NBD2M",
            "name": "peter",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NCM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not a big fan of merging at the end. If the code meets an unexpected issue (often something strange in the data), it can result in all the results being lost. So I prefer to have each iteration of the processing function write its results to a file dedicated to that iteration and usually named for a market. If all goes well the external files can be merged when analysing the data at the end. If something goes wrong there's no need to repeat the processing for the markets that worked."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UBS7QANF3",
                    "U01C12ZEADQ"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1663736281.431289",
        "client_msg_id": "0E28E7CF-3D1D-447C-B044-BA2CD3A4F82B",
        "text": "Yep I do the same, via logging control each process creates a file called `{run_id}-{process_id}.csv` which is then combined at the end, dataframe -&gt; juypter ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BuSu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yep I do the same, via logging control each process creates a file called "
                            },
                            {
                                "type": "text",
                                "text": "{run_id}-{process_id}.csv",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " which is then combined at the end, dataframe -> juypter "
                            }
                        ]
                    }
                ]
            }
        ]
    }
]