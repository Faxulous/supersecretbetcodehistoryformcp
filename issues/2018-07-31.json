[
    {
        "subtype": "channel_join",
        "user": "UBZDA8YEL",
        "text": "<@UBZDA8YEL> has joined the channel",
        "type": "message",
        "ts": "1533051368.000595"
    },
    {
        "user": "UBZDA8YEL",
        "type": "message",
        "ts": "1533051615.000119",
        "client_msg_id": "67d72ec6-d78a-4364-a5f1-eda1b2a2c737",
        "text": "Hi! I'm trying to make use of the historicalstreaming.py but I keep getting this error:\nFile \"\/usr\/local\/lib\/python3.5\/dist-packages\/betfairlightweight\/streaming\/betfairstream.py\", line 290, in _read_loop\n    for update in f:\n  File \"\/usr\/lib\/python3.5\/codecs.py\", line 321, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xfd in position 10: invalid start byte",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g4f172074ede",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/64f172074edebc0e129fd099a668b521.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "Manu Joronen",
            "display_name": "man",
            "team": "T4G9NBD2M",
            "name": "manu.jrnn",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ME4F",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi! I'm trying to make use of the historicalstreaming.py but I keep getting this error:\nFile \"\/usr\/local\/lib\/python3.5\/dist-packages\/betfairlightweight\/streaming\/betfairstream.py\", line 290, in _read_loop\n    for update in f:\n  File \"\/usr\/lib\/python3.5\/codecs.py\", line 321, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xfd in position 10: invalid start byte"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBZDA8YEL",
        "type": "message",
        "ts": "1533051627.000656",
        "client_msg_id": "37b0f043-d166-4f1f-9d24-f84c6caa25cb",
        "text": "Do you have anyidea how to deal with that?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g4f172074ede",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/64f172074edebc0e129fd099a668b521.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "Manu Joronen",
            "display_name": "man",
            "team": "T4G9NBD2M",
            "name": "manu.jrnn",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2BMuC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Do you have anyidea how to deal with that?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1533051666.000069",
        "client_msg_id": "621F56FA-4BF7-401D-8154-468A8227AFA4",
        "text": "Have you unzipped the data?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Vd4Z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Have you unzipped the data?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBZDA8YEL",
        "type": "message",
        "ts": "1533051795.000532",
        "client_msg_id": "3b1829bb-38ee-48ee-8b6b-08cf76130090",
        "text": "I have unzipped the tar file which I got from betfair but do I have to unzip also every file in the unzipped tar folder?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g4f172074ede",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/64f172074edebc0e129fd099a668b521.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "Manu Joronen",
            "display_name": "man",
            "team": "T4G9NBD2M",
            "name": "manu.jrnn",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "a+c8u",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have unzipped the tar file which I got from betfair but do I have to unzip also every file in the unzipped tar folder?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1533051817.000230",
        "client_msg_id": "BAF7A42B-4457-46C5-8D74-04282C4A34A3",
        "text": "Yes",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fgJ0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5D4ZBEAG",
        "type": "message",
        "ts": "1533051853.000546",
        "client_msg_id": "395d901b-1e5b-4ec8-943f-f21bbb817dfc",
        "text": "There's example python code somewhere on here that does that, search for gzip",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g147ed91a398",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7147ed91a39866d363a9cfa66ef64cb8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "seaders",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "seaders",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pOE0p",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There's example python code somewhere on here that does that, search for gzip"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBZDA8YEL",
        "type": "message",
        "ts": "1533051975.000410",
        "client_msg_id": "ea1c8424-a481-4d23-97c7-3e32702b807a",
        "text": "oh okay, thanks a lot! I'm not familiar with the bz2 file type so I didn't even thought about that...",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g4f172074ede",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/64f172074edebc0e129fd099a668b521.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "Manu Joronen",
            "display_name": "man",
            "team": "T4G9NBD2M",
            "name": "manu.jrnn",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "94l1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "oh okay, thanks a lot! I'm not familiar with the bz2 file type so I didn't even thought about that..."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBZDA8YEL",
        "type": "message",
        "ts": "1533054154.000329",
        "client_msg_id": "39a0cf83-73ea-472a-b37b-f8606657f2dd",
        "text": "Is the streaminghistoricalexample.py up to date? I found that here:\n<https:\/\/github.com\/liampauling\/betfair\/blob\/master\/betfairlightweight\/streaming\/betfairstream.py>\nthe HistoricalStream class is different",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g4f172074ede",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/64f172074edebc0e129fd099a668b521.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "Manu Joronen",
            "display_name": "man",
            "team": "T4G9NBD2M",
            "name": "manu.jrnn",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "liampauling\/betfair",
                "title_link": "https:\/\/github.com\/liampauling\/betfair\/blob\/master\/betfairlightweight\/streaming\/betfairstream.py",
                "text": "betfair - Lightweight python wrapper for Betfair API-NG (with streaming)",
                "fallback": "GitHub: liampauling\/betfair",
                "from_url": "https:\/\/github.com\/liampauling\/betfair\/blob\/master\/betfairlightweight\/streaming\/betfairstream.py",
                "thumb_url": "https:\/\/avatars2.githubusercontent.com\/u\/12016537?s=400&v=4",
                "thumb_width": 250,
                "thumb_height": 250,
                "service_icon": "https:\/\/a.slack-edge.com\/bfaba\/img\/unfurl_icons\/github.png",
                "id": 1,
                "original_url": "https:\/\/github.com\/liampauling\/betfair\/blob\/master\/betfairlightweight\/streaming\/betfairstream.py"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "y8i",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is the streaminghistoricalexample.py up to date? I found that here:\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/liampauling\/betfair\/blob\/master\/betfairlightweight\/streaming\/betfairstream.py"
                            },
                            {
                                "type": "text",
                                "text": "\nthe HistoricalStream class is different"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1533055372.000040",
        "client_msg_id": "BCD335AA-C197-4EC4-89D9-DD1119BE36FE",
        "text": "Yeah I think so, it needs updating ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dKjD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah I think so, it needs updating"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBZDA8YEL",
        "type": "message",
        "ts": "1533056240.000443",
        "client_msg_id": "6f19f94b-d065-4f7b-8b70-7b069475d7c6",
        "text": "So which one is up to date?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g4f172074ede",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/64f172074edebc0e129fd099a668b521.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "Manu Joronen",
            "display_name": "man",
            "team": "T4G9NBD2M",
            "name": "manu.jrnn",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "e4IH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So which one is up to date?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1533057096.000396",
        "client_msg_id": "7000378E-D02B-4FC7-88D9-5D32F8FC81BF",
        "text": "The source code is up to date, the example probably isn’t ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5\/bb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The source code is up to date, the example probably isn’t"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBZDA8YEL",
        "type": "message",
        "ts": "1533057271.000421",
        "client_msg_id": "b784be20-3ba5-474e-b4c1-a9fdc02e7c10",
        "text": "okay, thanks",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g4f172074ede",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/64f172074edebc0e129fd099a668b521.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "Manu Joronen",
            "display_name": "man",
            "team": "T4G9NBD2M",
            "name": "manu.jrnn",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Vs7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "okay, thanks"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAXGAG15J",
        "type": "message",
        "ts": "1533071319.000249",
        "client_msg_id": "09addb23-d02a-4af0-ac43-d343f2b1d1b7",
        "text": "<@UBZDA8YEL> I've being doing a bit of stuff with those bz2 files as part of my own importing",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb1ead83cd3d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/1b1ead83cd3d4d71e4193fd43870bd44.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "Rory",
            "real_name": "Rory",
            "display_name": "Rory",
            "team": "T4G9NBD2M",
            "name": "rory_curtis",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xCLt0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UBZDA8YEL"
                            },
                            {
                                "type": "text",
                                "text": " I've being doing a bit of stuff with those bz2 files as part of my own importing"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAXGAG15J",
        "type": "message",
        "ts": "1533071356.000238",
        "client_msg_id": "10ebf9ca-d74f-43b3-8719-1a4564a76ce5",
        "text": "rather than unzip every file, I just handle them using the bz2 module in Python",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb1ead83cd3d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/1b1ead83cd3d4d71e4193fd43870bd44.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "Rory",
            "real_name": "Rory",
            "display_name": "Rory",
            "team": "T4G9NBD2M",
            "name": "rory_curtis",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "V0FF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "rather than unzip every file, I just handle them using the bz2 module in Python"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAXGAG15J",
        "type": "message",
        "ts": "1533071377.000218",
        "client_msg_id": "0c2f49f0-f66c-418b-b06e-2666fcd3a868",
        "text": "something like this ...",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb1ead83cd3d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/1b1ead83cd3d4d71e4193fd43870bd44.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "Rory",
            "real_name": "Rory",
            "display_name": "Rory",
            "team": "T4G9NBD2M",
            "name": "rory_curtis",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XP2wk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "something like this ..."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAXGAG15J",
        "type": "message",
        "ts": "1533071394.000045",
        "client_msg_id": "9071c131-bc8e-4de9-9cbe-09f13da1a9ce",
        "text": "```class BZ2HistoricalStream(HistoricalStream):\n    \"\"\"\n    Extend HistoricalStream so that the read loop can handle bz2 compressed files. By default, HistoricalStream\n    calls open() directly on the directory, which fails when the file is .bz2.\n    \"\"\"\n    def __init__(self, directory, listener):\n        super(BZ2HistoricalStream, self).__init__(directory, listener)\n\n    def _read_loop(self):\n        # Use bz2 to open the file and perform the read loop.\n        with bz2.open(self.directory, 'rt') as f:\n            self.handle_file(f)```",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb1ead83cd3d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/1b1ead83cd3d4d71e4193fd43870bd44.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "Rory",
            "real_name": "Rory",
            "display_name": "Rory",
            "team": "T4G9NBD2M",
            "name": "rory_curtis",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "R9\/Y",
                "elements": [
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "class BZ2HistoricalStream(HistoricalStream):\n    \"\"\"\n    Extend HistoricalStream so that the read loop can handle bz2 compressed files. By default, HistoricalStream\n    calls open() directly on the directory, which fails when the file is .bz2.\n    \"\"\"\n    def __init__(self, directory, listener):\n        super(BZ2HistoricalStream, self).__init__(directory, listener)\n\n    def _read_loop(self):\n        # Use bz2 to open the file and perform the read loop.\n        with bz2.open(self.directory, 'rt') as f:\n            self.handle_file(f)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAXGAG15J",
        "type": "message",
        "ts": "1533071405.000591",
        "client_msg_id": "f4e6b606-1b26-4c08-a8b1-7023f44fff3e",
        "text": "then you just figure out which Stream to use based on the file type",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb1ead83cd3d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/1b1ead83cd3d4d71e4193fd43870bd44.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "Rory",
            "real_name": "Rory",
            "display_name": "Rory",
            "team": "T4G9NBD2M",
            "name": "rory_curtis",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kFv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "then you just figure out which Stream to use based on the file type"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAXGAG15J",
        "type": "message",
        "ts": "1533071466.000238",
        "edited": {
            "user": "UAXGAG15J",
            "ts": "1533071477.000000"
        },
        "client_msg_id": "327d9191-a4c7-49cf-9da7-e6828d521422",
        "text": "```if file.endswith('.bz2'):\n                stream = BZ2HistoricalStream(\n                    directory=file,\n                    listener=listener\n                )\n            else:\n                stream = HistoricalStream(\n                    directory=file,\n                    listener=listener\n                )\n            # Starting the stream will read an individual file as a stream of market updates and call\n            # its listener.on_data for each update.\n            stream.start(async=False)```",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb1ead83cd3d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/1b1ead83cd3d4d71e4193fd43870bd44.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "Rory",
            "real_name": "Rory",
            "display_name": "Rory",
            "team": "T4G9NBD2M",
            "name": "rory_curtis",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6nUe5",
                "elements": [
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "if file.endswith('.bz2'):\n                stream = BZ2HistoricalStream(\n                    directory=file,\n                    listener=listener\n                )\n            else:\n                stream = HistoricalStream(\n                    directory=file,\n                    listener=listener\n                )\n            # Starting the stream will read an individual file as a stream of market updates and call\n            # its listener.on_data for each update.\n            stream.start(async=False)"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]