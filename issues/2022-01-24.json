[
    {
        "subtype": "channel_join",
        "user": "U02V6LWGDS9",
        "text": "<@U02V6LWGDS9> has joined the channel",
        "type": "message",
        "ts": "1643017687.093500"
    },
    {
        "user": "U0155J92A7Q",
        "type": "message",
        "ts": "1643019108.095500",
        "client_msg_id": "a6082af3-a187-41d2-98e8-a592bc17c6f9",
        "text": "Question related with the Python logging library: If my process is writing a .log file that is 20 MB big, does that mean that the process will consume 20 MB worth of RAM memory? Is this how it works?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gde8c5d51af5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/de8c5d51af54a5ac7b501f416ddb262c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "",
            "real_name": "Jorge",
            "display_name": "Jorge",
            "team": "T4G9NBD2M",
            "name": "jgarciam95",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1643019108.095500",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1643020408.095800",
        "reply_users": [
            "U9JHLMZB4",
            "U0155J92A7Q"
        ],
        "replies": [
            {
                "user": "U9JHLMZB4",
                "ts": "1643019902.095600"
            },
            {
                "user": "U0155J92A7Q",
                "ts": "1643020408.095800"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lejnB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Question related with the Python logging library: If my process is writing a .log file that is 20 MB big, does that mean that the process will consume 20 MB worth of RAM memory? Is this how it works?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U9JHLMZB4",
        "type": "message",
        "ts": "1643019902.095600",
        "client_msg_id": "73aaab70-8263-4b6f-80d7-e9680fb49e0e",
        "text": "Not unless you try to read the file back. Normally writing to a log file requires your program to hold just the file handle (information about the file to be written to) and the log entry which it will append to the end of that file.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g951ddcb43e7",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3951ddcb43e788a387d6daf330dad5ca.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0018-72.png",
            "first_name": "",
            "real_name": "Peter Coles",
            "display_name": "Peter",
            "team": "T4G9NBD2M",
            "name": "peter",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1643019108.095500",
        "parent_user_id": "U0155J92A7Q",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8sN3G",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not unless you try to read the file back. Normally writing to a log file requires your program to hold just the file handle (information about the file to be written to) and the log entry which it will append to the end of that file."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0155J92A7Q",
                    "U4H19D1D2"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U0155J92A7Q",
        "type": "message",
        "ts": "1643020408.095800",
        "client_msg_id": "d72e81c4-fc1d-4b1e-bb0c-69a368584aea",
        "text": "Mmm interesting. Thanks. I guess I'll have to search for RAM Memory leaks somewhere else",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gde8c5d51af5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/de8c5d51af54a5ac7b501f416ddb262c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "",
            "real_name": "Jorge",
            "display_name": "Jorge",
            "team": "T4G9NBD2M",
            "name": "jgarciam95",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1643019108.095500",
        "parent_user_id": "U0155J92A7Q",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Hrt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Mmm interesting. Thanks. I guess I'll have to search for RAM Memory leaks somewhere else"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0155J92A7Q",
        "type": "message",
        "ts": "1643022053.097500",
        "client_msg_id": "a19842bd-d22b-4327-8eaf-0a0649b3bde9",
        "text": "Is it normal for a python process to take 68 MB of RAM (Resident) ? (It takes 22 MB of Shared Memory)",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gde8c5d51af5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/de8c5d51af54a5ac7b501f416ddb262c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "",
            "real_name": "Jorge",
            "display_name": "Jorge",
            "team": "T4G9NBD2M",
            "name": "jgarciam95",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4cjP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is it normal for a python process to take 68 MB of RAM (Resident) ? (It takes 22 MB of Shared Memory)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1643022129.098400",
        "client_msg_id": "0e110195-e8b5-4780-be2b-bd183d83143c",
        "text": ":man-shrugging:",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Sojg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "emoji",
                                "name": "man-shrugging",
                                "unicode": "1f937-200d-2642-fe0f"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0155J92A7Q",
        "type": "message",
        "ts": "1643022159.098900",
        "client_msg_id": "0b9bab57-16ca-44c5-8741-77a2dab641ee",
        "text": "Using pympler I see that the memory usage does not increase with time. And that out of those 22MB, 7MB are taken by 'str', next up is 'dict' with 4 MB, and then 'code' with 2MB",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gde8c5d51af5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/de8c5d51af54a5ac7b501f416ddb262c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "",
            "real_name": "Jorge",
            "display_name": "Jorge",
            "team": "T4G9NBD2M",
            "name": "jgarciam95",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ESkH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Using pympler I see that the memory usage does not increase with time. And that out of those 22MB, 7MB are taken by 'str', next up is 'dict' with 4 MB, and then 'code' with 2MB"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "channel_join",
        "user": "U02UW96Q0A3",
        "text": "<@U02UW96Q0A3> has joined the channel",
        "type": "message",
        "ts": "1643034320.099100"
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1643036739.099500",
        "client_msg_id": "70DFF4C2-53CC-477F-A8DB-5BC5A66D3B88",
        "text": ":man-shrugging: who cares? ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sS3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "emoji",
                                "name": "man-shrugging",
                                "unicode": "1f937-200d-2642-fe0f"
                            },
                            {
                                "type": "text",
                                "text": " who cares? "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "channel_join",
        "user": "U02UX3S27ST",
        "text": "<@U02UX3S27ST> has joined the channel",
        "type": "message",
        "ts": "1643040921.099700"
    },
    {
        "user": "U016TGY3676",
        "type": "message",
        "ts": "1643061324.109400",
        "client_msg_id": "4c8a2a74-aaf3-491c-866d-b5e5b893e6a5",
        "text": "While on the subject of RAM, how do you guys handle \"big\" backtests\/signal processing with Flumine? I've found that if I run a strategy that produces 200k+ bets, the Framework eventually falls over because my 4GB AWS machine falls over with OOM errors. I know that increasing the amount of RAM is a solution (as is running on my local 8GB machine), but am wondering if there's a way to break up the framework into smaller chunks so that it can run on lower spec hardware?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g6a681220e11",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6a681220e11c1a2ed3685375d658dadb.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "",
            "real_name": "birchy",
            "display_name": "birchy",
            "team": "T4G9NBD2M",
            "name": "birchy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QSp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "While on the subject of RAM, how do you guys handle \"big\" backtests\/signal processing with Flumine? I've found that if I run a strategy that produces 200k+ bets, the Framework eventually falls over because my 4GB AWS machine falls over with OOM errors. I know that increasing the amount of RAM is a solution (as is running on my local 8GB machine), but am wondering if there's a way to break up the framework into smaller chunks so that it can run on lower spec hardware?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1643061541.110100",
        "client_msg_id": "F7922C14-FA14-4275-BCDC-4744DE19EA36",
        "text": "Optimum for me is 8 markets per ‘run’",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "T3a",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Optimum for me is 8 markets per ‘run’"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U016TGY3676",
        "type": "message",
        "ts": "1643064410.115900",
        "client_msg_id": "f38d077a-400d-4144-b2b6-81939d33ab7f",
        "text": "<@U4H19D1D2> how are you setting up the framework\/multiprocessing? I think my issue lies here, where `Len(market_paths) &gt; 5e3`...\n`workers = os.cpu_count()\nwith futures.ProcessPoolExecutor(max_workers=workers) as pool:`\n    `all_futures = [\n        pool.submit(\n            mp_backtest,\n            market_path=[market]\n        )\n        for market in market_paths`\n    `]`",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g6a681220e11",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6a681220e11c1a2ed3685375d658dadb.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "",
            "real_name": "birchy",
            "display_name": "birchy",
            "team": "T4G9NBD2M",
            "name": "birchy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "H+s",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U4H19D1D2"
                            },
                            {
                                "type": "text",
                                "text": " how are you setting up the framework\/multiprocessing? I think my issue lies here, where "
                            },
                            {
                                "type": "text",
                                "text": "Len(market_paths) > 5e3",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "...\n"
                            },
                            {
                                "type": "text",
                                "text": "workers = os.cpu_count()\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "with futures.ProcessPoolExecutor(max_workers=workers) as pool:",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "    all_futures = [\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "        pool.submit(\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "            mp_backtest,\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "            market_path=[market]\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "        )\n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "        for market in market_paths",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "    ]",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNQGKT0CR",
        "type": "message",
        "ts": "1643067876.116300",
        "client_msg_id": "F8115887-D86F-4A51-93C6-3295EC79B10F",
        "text": "Not sure if this helps you <@U016TGY3676> \n\n<https:\/\/betfairlightweight.slack.com\/archives\/C4H05ML2E\/p1637699269108700|https:\/\/betfairlightweight.slack.com\/archives\/C4H05ML2E\/p1637699269108700>",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g51b5871ab46",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/51b5871ab46e5ef289d9e90376cacaab.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "AP",
            "real_name": "AP",
            "display_name": "AP",
            "team": "T4G9NBD2M",
            "name": "ant.papa22",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "from_url": "https:\/\/betfairlightweight.slack.com\/archives\/C4H05ML2E\/p1637699269108700",
                "ts": "1637699269.108700",
                "author_id": "UNQGKT0CR",
                "channel_team": "T4G9NBD2M",
                "channel_id": "C4H05ML2E",
                "is_msg_unfurl": true,
                "message_blocks": [
                    {
                        "team": "T4G9NBD2M",
                        "channel": "C4H05ML2E",
                        "ts": "1637699269.108700",
                        "message": {
                            "blocks": [
                                {
                                    "type": "rich_text",
                                    "block_id": "f20WF",
                                    "elements": [
                                        {
                                            "type": "rich_text_section",
                                            "elements": [
                                                {
                                                    "type": "text",
                                                    "text": "If anyone is interested, changing this:\n\n"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "rich_text_preformatted",
                                            "elements": [
                                                {
                                                    "type": "text",
                                                    "text": "with futures.ProcessPoolExecutor(max_workers=48) as pool:\n        all_futures = [\n            pool.submit(\n                run_backtest,\n                market=market\n            )\n            for market in markets\n        ]\n\n    for i, future in enumerate(futures.as_completed(all_futures)):\n        try:\n            print('Future %i of %i completed' % (i + 1, len(all_futures)))\n        except:\n            print('Error %i of %i' % (i + 1, len(all_futures)))"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "id": 1,
                "original_url": "https:\/\/betfairlightweight.slack.com\/archives\/C4H05ML2E\/p1637699269108700",
                "fallback": "[November 23rd, 2021 12:27 PM] ant.papa22: If anyone is interested, changing this:\n\n```with futures.ProcessPoolExecutor(max_workers=48) as pool:\n        all_futures = [\n            pool.submit(\n                run_backtest,\n                market=market\n            )\n            for market in markets\n        ]\n\n    for i, future in enumerate(futures.as_completed(all_futures)):\n        try:\n            print('Future %i of %i completed' % (i + 1, len(all_futures)))\n        except:\n            print('Error %i of %i' % (i + 1, len(all_futures)))```",
                "text": "If anyone is interested, changing this:\n\n```with futures.ProcessPoolExecutor(max_workers=48) as pool:\n        all_futures = [\n            pool.submit(\n                run_backtest,\n                market=market\n            )\n            for market in markets\n        ]\n\n    for i, future in enumerate(futures.as_completed(all_futures)):\n        try:\n            print('Future %i of %i completed' % (i + 1, len(all_futures)))\n        except:\n            print('Error %i of %i' % (i + 1, len(all_futures)))```",
                "author_name": "AP",
                "author_link": "https:\/\/betfairlightweight.slack.com\/team\/UNQGKT0CR",
                "author_icon": "https:\/\/secure.gravatar.com\/avatar\/51b5871ab46e5ef289d9e90376cacaab.jpg?s=48&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-48.png",
                "author_subname": "AP",
                "mrkdwn_in": [
                    "text"
                ],
                "footer": "Slack conversation"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8=9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not sure if this helps you "
                            },
                            {
                                "type": "user",
                                "user_id": "U016TGY3676"
                            },
                            {
                                "type": "text",
                                "text": " \n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/betfairlightweight.slack.com\/archives\/C4H05ML2E\/p1637699269108700",
                                "text": "https:\/\/betfairlightweight.slack.com\/archives\/C4H05ML2E\/p1637699269108700"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNQGKT0CR",
        "type": "message",
        "ts": "1643067910.116800",
        "client_msg_id": "903D5E9C-F0AA-456C-AC64-5F61A396C838",
        "text": "I can send you the full code when I'm home ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g51b5871ab46",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/51b5871ab46e5ef289d9e90376cacaab.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "AP",
            "real_name": "AP",
            "display_name": "AP",
            "team": "T4G9NBD2M",
            "name": "ant.papa22",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Dqrm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I can send you the full code when I'm home "
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U016TGY3676"
                ],
                "count": 1
            }
        ]
    },
    {
        "subtype": "channel_join",
        "user": "U0303M345CL",
        "text": "<@U0303M345CL> has joined the channel",
        "type": "message",
        "ts": "1643094412.117000"
    }
]