[
    {
        "user": "UGVF3MELE",
        "type": "message",
        "ts": "1603957225.322000",
        "edited": {
            "user": "UGVF3MELE",
            "ts": "1603957334.000000"
        },
        "client_msg_id": "8c77512d-4705-4d47-92e2-0ff233fd84c3",
        "text": "Seems to only happen on `get_account_statement()`\nAnd then only when the request returns data.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g887ab83942e",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c887ab83942e43333af18e5bba2022b4.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0018-72.png",
            "first_name": "",
            "real_name": "JonM",
            "display_name": "JonM",
            "team": "T4G9NBD2M",
            "name": "jon",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "p4B",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Seems to only happen on "
                            },
                            {
                                "type": "text",
                                "text": "get_account_statement()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\nAnd then only when the request returns data."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1603958028.322500",
        "edited": {
            "user": "UBS7QANF3",
            "ts": "1603958036.000000"
        },
        "client_msg_id": "66aa0d40-a19b-4f7b-9e4a-06cfa09a1c35",
        "text": "Are you using the `lightweight` parameter?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XVT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Are you using the "
                            },
                            {
                                "type": "text",
                                "text": "lightweight",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " parameter?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1603958108.324500",
        "client_msg_id": "91a786b4-9a36-48e1-98ea-5b99ba0ac4cc",
        "text": "If not, try doing so. The account statement items often contain unexpected fields",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ula0g",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If not, try doing so. The account statement items often contain unexpected fields"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGVF3MELE",
        "type": "message",
        "ts": "1603958175.325500",
        "edited": {
            "user": "UGVF3MELE",
            "ts": "1603958185.000000"
        },
        "client_msg_id": "42909ea4-b44e-4976-84d3-869a1fe82a0c",
        "text": "No, going to give that a try now.  I think I've narrowed it down to a problem with just yesterday's account statement.  I moved some funds to my poker wallet (just so they're out of the way as I live test a new strategy).  Is there a known issue at all with this?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g887ab83942e",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c887ab83942e43333af18e5bba2022b4.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0018-72.png",
            "first_name": "",
            "real_name": "JonM",
            "display_name": "JonM",
            "team": "T4G9NBD2M",
            "name": "jon",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lv3U",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "No, going to give that a try now.  I think I've narrowed it down to a problem with just yesterday's account statement.  I moved some funds to my poker wallet (just so they're out of the way as I live test a new strategy).  Is there a known issue at all with this?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1603958325.327000",
        "client_msg_id": "8f91e14b-27fc-4e7e-85ee-4ede1d2fb500",
        "text": "See above. You probably don't want to share the response but most likely that transfer to the poker wallet contained an unexpected field or was missing an expected one:\n\n```class AccountStatement:\n    def __init__(\n        self, amount, balance, itemClass, itemClassData, itemDate, refId, legacyData\n    ):\n        self.amount = amount\n        self.balance = balance\n        self.item_class = itemClass\n        self.item_class_data = itemClassData\n        self.item_date = BaseResource.strip_datetime(itemDate)\n        self.ref_id = refId\n        self.legacy_data = LegacyData(**legacyData)```\n",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/fJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "See above. You probably don't want to share the response but most likely that transfer to the poker wallet contained an unexpected field or was missing an expected one:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "class AccountStatement:\n    def __init__(\n        self, amount, balance, itemClass, itemClassData, itemDate, refId, legacyData\n    ):\n        self.amount = amount\n        self.balance = balance\n        self.item_class = itemClass\n        self.item_class_data = itemClassData\n        self.item_date = BaseResource.strip_datetime(itemDate)\n        self.ref_id = refId\n        self.legacy_data = LegacyData(**legacyData)"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": []
                    }
                ]
            }
        ]
    },
    {
        "user": "UGVF3MELE",
        "type": "message",
        "ts": "1603958389.327800",
        "client_msg_id": "8ed8c2af-c858-46ac-9918-51f755b85fed",
        "text": "Boom!  `lightweight` parameter fixes it.  Thanks <@UBS7QANF3>.  Another bit of flimsiness in my code identified and fixed!",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g887ab83942e",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c887ab83942e43333af18e5bba2022b4.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0018-72.png",
            "first_name": "",
            "real_name": "JonM",
            "display_name": "JonM",
            "team": "T4G9NBD2M",
            "name": "jon",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Wl+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Boom!  "
                            },
                            {
                                "type": "text",
                                "text": "lightweight",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " parameter fixes it.  Thanks "
                            },
                            {
                                "type": "user",
                                "user_id": "UBS7QANF3"
                            },
                            {
                                "type": "text",
                                "text": ".  Another bit of flimsiness in my code identified and fixed!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1603958484.328500",
        "client_msg_id": "383f98b3-1600-4d36-bf78-e89000a39572",
        "text": "I _always_ set `lightweight=True` for that endpoint because of the number of times Betfair have sent through data that conflicts with the documentation",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mIqL5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I "
                            },
                            {
                                "type": "text",
                                "text": "always",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " set "
                            },
                            {
                                "type": "text",
                                "text": "lightweight=True",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " for that endpoint because of the number of times Betfair have sent through data that conflicts with the documentation"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGVF3MELE",
        "type": "message",
        "ts": "1603958638.329100",
        "client_msg_id": "86c6395a-db30-4c53-9eff-2f5a5872461e",
        "text": "I'm going to go through everything and set it all over...",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g887ab83942e",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c887ab83942e43333af18e5bba2022b4.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0018-72.png",
            "first_name": "",
            "real_name": "JonM",
            "display_name": "JonM",
            "team": "T4G9NBD2M",
            "name": "jon",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gya",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm going to go through everything and set it all over..."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01DDBUL2MR",
        "type": "message",
        "ts": "1603974209.331700",
        "client_msg_id": "e2ddfdcc-f485-41b4-819b-b34cf23a2625",
        "text": "Just moved to using the betfairlightweight library (why didn't I do this earlier) to replace the one I wrote. So far managed to replace most of my own functionality  by just deleting big chunks of code. The first issue I have found is how do I save the raw data from BF as well as pass it back to the listener so I can use it for replay? I may just be missing something very simple?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gef68fcf22c2",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ef68fcf22c2c3d73daa665d9167aaade.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "John T",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "jat1963",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7JqY+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Just moved to using the betfairlightweight library (why didn't I do this earlier) to replace the one I wrote. So far managed to replace most of my own functionality  by just deleting big chunks of code. The first issue I have found is how do I save the raw data from BF as well as pass it back to the listener so I can use it for replay? I may just be missing something very simple?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01DDBUL2MR",
        "type": "message",
        "ts": "1603978013.332800",
        "client_msg_id": "eb102584-a3e4-4a8d-b92b-75400ae09966",
        "text": "Found it! Sorry missed the 'override on_data' in the StreamListener. All working now.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gef68fcf22c2",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ef68fcf22c2c3d73daa665d9167aaade.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "John T",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "jat1963",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ch0ox",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Found it! Sorry missed the 'override on_data' in the StreamListener. All working now."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U4H19D1D2"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U016TGY3676",
        "type": "message",
        "ts": "1603998577.333900",
        "client_msg_id": "bc159a21-02ca-4874-914c-3fab9cb94d0f",
        "text": "<@U4H19D1D2> is it worth adding these to Flumine `utils.py` ?\n```def ticks_spread(price1: float, price2: float) -&gt; int:\n    \"\"\"returns number of ticks between price1 and price2\"\"\"\n    try:\n        return PRICES.index(as_dec(price2)) - PRICES.index(as_dec(price1))\n    except:\n        return 0\n\ndef runner_vwap(runner: RunnerBook) -&gt; Optional[float]:\n    \"\"\"returns runner vwap calculated from EX_TRADED\"\"\"\n    try:\n        tt = 0.0\n        tw = 0.0\n        for pd in runner.ex.traded_volume:\n            tt += pd['size']\n            tw += pd['size'] * pd['price']\n        return tw \/ tt\n    except:\n        return```",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g6a681220e11",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6a681220e11c1a2ed3685375d658dadb.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "",
            "real_name": "birchy",
            "display_name": "birchy",
            "team": "T4G9NBD2M",
            "name": "birchy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1603998577.333900",
        "reply_count": 6,
        "reply_users_count": 4,
        "latest_reply": "1639805504.280900",
        "reply_users": [
            "UBS7QANF3",
            "U016TGY3676",
            "U4H19D1D2",
            "UT6593JBH"
        ],
        "replies": [
            {
                "user": "UBS7QANF3",
                "ts": "1604001071.339700"
            },
            {
                "user": "U016TGY3676",
                "ts": "1604001661.340000"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1604001763.342000"
            },
            {
                "user": "U016TGY3676",
                "ts": "1604003744.343900"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1604003844.345600"
            },
            {
                "user": "UT6593JBH",
                "ts": "1639805504.280900"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1639805504.280900",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GFo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U4H19D1D2"
                            },
                            {
                                "type": "text",
                                "text": " is it worth adding these to Flumine "
                            },
                            {
                                "type": "text",
                                "text": "utils.py",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " ?\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "def ticks_spread(price1: float, price2: float) -> int:\n    \"\"\"returns number of ticks between price1 and price2\"\"\"\n    try:\n        return PRICES.index(as_dec(price2)) - PRICES.index(as_dec(price1))\n    except:\n        return 0\n\ndef runner_vwap(runner: RunnerBook) -> Optional[float]:\n    \"\"\"returns runner vwap calculated from EX_TRADED\"\"\"\n    try:\n        tt = 0.0\n        tw = 0.0\n        for pd in runner.ex.traded_volume:\n            tt += pd['size']\n            tw += pd['size'] * pd['price']\n        return tw \/ tt\n    except:\n        return"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1604000439.334200",
        "client_msg_id": "92408B9E-69EE-4062-9BE4-73178E72BAEB",
        "text": "Yeah they look useful ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JEH+=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah they look useful "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U016TGY3676",
        "type": "message",
        "ts": "1604000759.335500",
        "client_msg_id": "0aa3546a-a7a2-4a84-9506-c3978dfc5399",
        "text": "Was going to raise a PR but I have nfi how to do it. :flushed:",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g6a681220e11",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6a681220e11c1a2ed3685375d658dadb.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "",
            "real_name": "birchy",
            "display_name": "birchy",
            "team": "T4G9NBD2M",
            "name": "birchy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QT9e",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Was going to raise a PR but I have nfi how to do it. "
                            },
                            {
                                "type": "emoji",
                                "name": "flushed",
                                "unicode": "1f633"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1604001071.339700",
        "client_msg_id": "6C7F4926-BC99-4B19-80FA-42365A14D767",
        "text": "Suggestions:\n\n1) The comment for ticks_spread implies you’re calculating PRICES.index(as_dec(price1)) - PRICES.index(as_dec(price2))\n2) You should return None on exception in ticks_spread rather than implying the prices are identical\n3) I’d explicitly return None on exception in runner_vwap\n4) I’d call the functions calculate_ticks_spread and calculate_runner_vwap",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1603998577.333900",
        "parent_user_id": "U016TGY3676",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LrB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Suggestions:\n\n1) The comment for ticks_spread implies you’re calculating PRICES.index(as_dec(price1)) - PRICES.index(as_dec(price2))\n2) You should return None on exception in ticks_spread rather than implying the prices are identical\n3) I’d explicitly return None on exception in runner_vwap\n"
                            },
                            {
                                "type": "text",
                                "text": "4) I’d call the functions calculate_ticks_spread and calculate_runner_vwap"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1604001218.339900",
        "client_msg_id": "ACB1A501-61C2-4D39-98BA-8A706B67B3FE",
        "text": "<https:\/\/docs.github.com\/en\/free-pro-team@latest\/github\/collaborating-with-issues-and-pull-requests\/creating-a-pull-request|https:\/\/docs.github.com\/en\/free-pro-team@latest\/github\/collaborating-with-issues-and-pull-requests\/creating-a-pull-request>",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "e\/6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/docs.github.com\/en\/free-pro-team@latest\/github\/collaborating-with-issues-and-pull-requests\/creating-a-pull-request",
                                "text": "https:\/\/docs.github.com\/en\/free-pro-team@latest\/github\/collaborating-with-issues-and-pull-requests\/creating-a-pull-request"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U016TGY3676",
        "type": "message",
        "ts": "1604001661.340000",
        "client_msg_id": "0d4a4831-1279-43d0-8971-efe500f61aff",
        "text": "1. Agree. I generally use it to calc ticks spread where `price1=atb` and `price2=atl` . May actually be better to return an int &gt;0 regardless of price1\/price2 ordering?\n2. Agree.\n3. Agree, but doesn't `return` default to `None` ?\n4. LOL. I actually have them as `calc_ticks_spread()` and `calc_runner_vwap()` in my own code but shortened them for the examples here",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g6a681220e11",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6a681220e11c1a2ed3685375d658dadb.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "",
            "real_name": "birchy",
            "display_name": "birchy",
            "team": "T4G9NBD2M",
            "name": "birchy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1603998577.333900",
        "parent_user_id": "U016TGY3676",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rF5c",
                "elements": [
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Agree. I generally use it to calc ticks spread where "
                                    },
                                    {
                                        "type": "text",
                                        "text": "price1=atb",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " and "
                                    },
                                    {
                                        "type": "text",
                                        "text": "price2=atl",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " . May actually be better to return an int >0 regardless of price1\/price2 ordering?"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Agree."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Agree, but doesn't "
                                    },
                                    {
                                        "type": "text",
                                        "text": "return",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " default to "
                                    },
                                    {
                                        "type": "text",
                                        "text": "None",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " ?"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "LOL. I actually have them as "
                                    },
                                    {
                                        "type": "text",
                                        "text": "calc_ticks_spread()",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " and "
                                    },
                                    {
                                        "type": "text",
                                        "text": "calc_runner_vwap()",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " in my own code but shortened them for the examples here"
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1604001763.342000",
        "client_msg_id": "1A89B740-4E54-4B54-893E-BE3581CDD72E",
        "text": "1) I’ve written a similar function and calculating the absolute spread is one way of doing it but sometimes it’s useful to have the sign to let you know which is larger\n3) Yes but I think it’s better to be explicit",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1603998577.333900",
        "parent_user_id": "U016TGY3676",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "r0S=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "1) I’ve written a similar function and calculating the absolute spread is one way of doing it but sometimes it’s useful to have the sign to let you know which is larger\n3) Yes but I think it’s better to be explicit"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U016TGY3676"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U016TGY3676",
        "type": "message",
        "ts": "1604002374.343400",
        "client_msg_id": "ccbaf958-f292-4b21-8280-ec7291bb4377",
        "text": "<@U4H19D1D2> I did see that earlier but unless I'm mistaken, I don't have write permissions? So presumably, I'd have to fork?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g6a681220e11",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6a681220e11c1a2ed3685375d658dadb.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "",
            "real_name": "birchy",
            "display_name": "birchy",
            "team": "T4G9NBD2M",
            "name": "birchy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8Je9Y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U4H19D1D2"
                            },
                            {
                                "type": "text",
                                "text": " I did see that earlier but unless I'm mistaken, I don't have write permissions? So presumably, I'd have to fork?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1604002394.343700",
        "client_msg_id": "8BE7744A-47D6-4F2B-A92E-83A1A25D3418",
        "text": "Yes do a fork",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Aehv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes do a fork"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U016TGY3676"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U016TGY3676",
        "type": "message",
        "ts": "1604003744.343900",
        "edited": {
            "user": "U016TGY3676",
            "ts": "1604003815.000000"
        },
        "client_msg_id": "0df7760c-22bb-4730-ba04-bd56da2ab8e8",
        "text": "Also, should that be using `pd.price` instead of `pd['price']` ? PyCharm is flagging the latter as an error, but `pd.price` fails in an external project:\n```for runner in market_book.runners:\n    for pd in runner.ex.traded_volume:\n        print(pd['price'], pd['size']) # OK\n        print(pd.price, pd.size) # error```",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g6a681220e11",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6a681220e11c1a2ed3685375d658dadb.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "",
            "real_name": "birchy",
            "display_name": "birchy",
            "team": "T4G9NBD2M",
            "name": "birchy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1603998577.333900",
        "parent_user_id": "U016TGY3676",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "L=M",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also, should that be using "
                            },
                            {
                                "type": "text",
                                "text": "pd.price",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " instead of "
                            },
                            {
                                "type": "text",
                                "text": "pd['price']",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " ? PyCharm is flagging the latter as an error, but "
                            },
                            {
                                "type": "text",
                                "text": "pd.price",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " fails in an external project:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "for runner in market_book.runners:\n    for pd in runner.ex.traded_volume:\n        print(pd['price'], pd['size']) # OK\n        print(pd.price, pd.size) # error"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1604003844.345600",
        "client_msg_id": "45F2BB69-9544-4074-B53F-9D040258D814",
        "text": "It gets patched to speed things up <https:\/\/github.com\/liampauling\/flumine\/blob\/master\/flumine\/patching.py|https:\/\/github.com\/liampauling\/flumine\/blob\/master\/flumine\/patching.py>",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1603998577.333900",
        "parent_user_id": "U016TGY3676",
        "attachments": [
            {
                "fallback": "[liampauling\/flumine] flumine\/patching.py",
                "text": "```\n\"\"\"\ndjango style `lazy` object creation, the main bulk of processing\nis turning {priceSize} into &lt;PriceSize&gt; objects but this is\npointless a lot of the time as the object is not used or can be\nhandled as a dict instead.\n\nThe inclusion of slots further reduces the processing time as well\nas reducing memory.\n\nThis optimisation will improve normal streaming as well as\nbacktesting, with more speed, less CPU + ram and minimal reduction\nin usability.\n\"\"\"\n\n\nclass SP:\n    __slots__ = [\n        \"near_price\",\n        \"far_price\",\n        \"actual_sp\",\n        \"back_stake_taken\",\n        \"lay_liability_taken\",\n    ]\n\n    def __init__(\n        self,\n        nearPrice: float = None,\n        farPrice: float = None,\n        backStakeTaken: list = None,\n        layLiabilityTaken: list = None,\n        actualSP: float = None,\n    ):\n        self.near_price = nearPrice\n        self.far_price = farPrice\n        self.actual_sp = actualSP\n        self.back_stake_taken = backStakeTaken\n        self.lay_liability_taken = layLiabilityTaken\n\n\nclass EX:\n    __slots__ = [\"available_to_back\", \"available_to_lay\", \"traded_volume\"]\n\n    def __init__(\n        self,\n        availableToBack: list = None,\n        availableToLay: list = None,\n        tradedVolume: list = None,\n    ):\n        self.available_to_back = availableToBack\n        self.available_to_lay = availableToLay\n        self.traded_volume = tradedVolume\n\n```",
                "title": "flumine\/patching.py",
                "footer": "<https:\/\/github.com\/liampauling\/flumine|liampauling\/flumine>",
                "id": 1,
                "title_link": "https:\/\/github.com\/liampauling\/flumine\/blob\/master\/flumine\/patching.py",
                "footer_icon": "https:\/\/github.githubassets.com\/favicon.ico",
                "color": "24292f",
                "mrkdwn_in": [
                    "text"
                ],
                "bot_id": "B01144Z0734",
                "app_unfurl_url": "https:\/\/github.com\/liampauling\/flumine\/blob\/master\/flumine\/patching.py",
                "is_app_unfurl": true
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DTVl4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It gets patched to speed things up "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/liampauling\/flumine\/blob\/master\/flumine\/patching.py",
                                "text": "https:\/\/github.com\/liampauling\/flumine\/blob\/master\/flumine\/patching.py"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UBS7QANF3",
                    "U016TGY3676"
                ],
                "count": 2
            }
        ]
    },
    {
        "subtype": "channel_join",
        "user": "U01DNJ4HX6W",
        "text": "<@U01DNJ4HX6W> has joined the channel",
        "type": "message",
        "ts": "1604029177.346400"
    }
]