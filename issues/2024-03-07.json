[
    {
        "user": "U02RN7YDRQ9",
        "type": "message",
        "ts": "1709822814.661699",
        "client_msg_id": "96542f8f-0643-4ffa-8130-19d70e17a487",
        "text": "Had an issue last week with a test strategy running live. It was going through the runners placing bets and then hit an outlier not allowed for that resulted in a divide by zero. Flumine neatly ate the exception and fed the next `mc` to the strategy which placed bets, hit the outlier again and crashed again - rinse and repeat.\n\nThe impact of this was to start draining the bank rather quickly - fortunately I was monitoring it but it still took a big bite. After investigating, I discovered that flumine ate non-flumine exceptions due to `config.raise_errors = False` Taken 2+ years to fall down that hole. I know all the guff about testing and defensive code etc but the reality is that most of us are in permanent beta and things slip through.\n\nI think this should default to `True` which would stop any runaways like mine and, more importantly, would be the expected behaviour for people new to flumine. In the meantime all my flumine wrappers set it to `True` right at the start.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "ge46f1f8b708",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e46f1f8b708a630e3191de7b2c42b1d1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "edblock",
            "real_name": "edblock",
            "display_name": "foxwood",
            "team": "T4G9NBD2M",
            "name": "eanb",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1709822814.661699",
        "reply_count": 11,
        "reply_users_count": 3,
        "latest_reply": "1710174927.553839",
        "reply_users": [
            "U4H19D1D2",
            "U02RN7YDRQ9",
            "U012XF5CNPN"
        ],
        "replies": [
            {
                "user": "U4H19D1D2",
                "ts": "1709827963.721009"
            },
            {
                "user": "U02RN7YDRQ9",
                "ts": "1709834712.107209"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1709834850.689229"
            },
            {
                "user": "U02RN7YDRQ9",
                "ts": "1709854888.273769"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1709977378.500609"
            },
            {
                "user": "U02RN7YDRQ9",
                "ts": "1709986841.852649"
            },
            {
                "user": "U012XF5CNPN",
                "ts": "1710165934.481089"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1710165959.775099"
            },
            {
                "user": "U012XF5CNPN",
                "ts": "1710166428.918799"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1710166537.639659"
            },
            {
                "user": "U02RN7YDRQ9",
                "ts": "1710174927.553839"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1710174927.553839",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VTz6B",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Had an issue last week with a test strategy running live. It was going through the runners placing bets and then hit an outlier not allowed for that resulted in a divide by zero. Flumine neatly ate the exception and fed the next"
                            },
                            {
                                "type": "text",
                                "text": " mc",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to the strategy which placed bets, hit the outlier again and crashed again - rinse and repeat.\n\nThe impact of this was to start draining the bank rather quickly - fortunately I was monitoring it but it still took a big bite. After investigating, I discovered that flumine ate non-flumine exceptions due to "
                            },
                            {
                                "type": "text",
                                "text": "config.raise_errors = False",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " Taken 2+ years to fall down that hole. I know all the guff about testing and defensive code etc but the reality is that most of us are in permanent beta and things slip through.\n\nI think this should default to "
                            },
                            {
                                "type": "text",
                                "text": "True ",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "which would stop any runaways like mine and, more importantly, would be the expected behaviour for people new to flumine. In the meantime all my flumine wrappers set it to "
                            },
                            {
                                "type": "text",
                                "text": "True ",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "right at the start."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1709827963.721009",
        "client_msg_id": "92bbb651-b03e-4aa6-a777-97a9ffe16159",
        "text": "But why did your code to continue to place bets? Do you not use runner context or blotter orders\/exposure before placing?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1709822814.661699",
        "parent_user_id": "U02RN7YDRQ9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nc7QM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "But why did your code to continue to place bets? Do you not use runner context or blotter orders\/exposure before placing?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02RN7YDRQ9",
        "type": "message",
        "ts": "1709834712.107209",
        "client_msg_id": "ee95efbb-447e-46a9-8781-8cc32364ebd3",
        "text": "You are right on exposure - the selection limit was too high. It would have stopped the bets eventually but I was testing and caught it manually before too much damage was done.\nEven so, would have preferred that the program aborted rather than \"ignore\" a standard language exception.\nI understand there are situations where the \"ignore\" approach is valid but that is not the default behaviour one would expect. I have it covered now but more a thought for the benefit\/safety of new users.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "ge46f1f8b708",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e46f1f8b708a630e3191de7b2c42b1d1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "edblock",
            "real_name": "edblock",
            "display_name": "foxwood",
            "team": "T4G9NBD2M",
            "name": "eanb",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1709822814.661699",
        "parent_user_id": "U02RN7YDRQ9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8oPPH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You are right on exposure - the selection limit was too high. It would have stopped the bets eventually but I was testing and caught it manually before too much damage was done.\nEven so, would have preferred that the program aborted rather than \"ignore\" a standard language exception.\nI understand there are situations where the \"ignore\" approach is valid but that is not the default behaviour one would expect. I have it covered now but more a thought for the benefit\/safety of new users."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1709834850.689229",
        "client_msg_id": "5414DC95-C946-4B5F-942F-489EB48414FB",
        "text": "This sounds like user error regarding lack of controls ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1709822814.661699",
        "parent_user_id": "U02RN7YDRQ9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6Gk19",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This sounds like user error regarding lack of controls "
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "joy",
                "users": [
                    "U02RN7YDRQ9"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02RN7YDRQ9",
        "type": "message",
        "ts": "1709854888.273769",
        "client_msg_id": "9c1c436e-8916-4f3d-bce3-19f2f364bfec",
        "text": "Certainly it is - as with any bug - not worried about that. Just found it unusual that a package would consume standard language exceptions so suggesting that a different safety default might be better and more in line with new user expectations.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "ge46f1f8b708",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e46f1f8b708a630e3191de7b2c42b1d1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "edblock",
            "real_name": "edblock",
            "display_name": "foxwood",
            "team": "T4G9NBD2M",
            "name": "eanb",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1709822814.661699",
        "parent_user_id": "U02RN7YDRQ9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DCa3t",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Certainly it is - as with any bug - not worried about that. Just found it unusual that a package would consume standard language exceptions so suggesting that a different safety default might be better and more in line with new user expectations."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]