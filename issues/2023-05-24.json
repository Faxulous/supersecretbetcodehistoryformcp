[
    {
        "user": "UFTBRB3F1",
        "type": "message",
        "ts": "1684912373.926239",
        "client_msg_id": "A80731E5-33A7-48E3-BA42-3667F45DFD20",
        "text": "Don’t think that’s the case as I tried it on two machines. Once I changed the password it worked straight away (again), but it’s a bit odd it’s happened twice in a week.\n\nI did wonder if it’s some kind of security related thing (i.e. could someone be trying to reset my password), so I am going to enable 2FA, but just wanted to check that doesn’t impact the API (as that’s the only reason I haven’t enabled it so far, but I’m assuming the certs mean 2FA is via a code is just for the GUI)?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g771e110be94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a771e110be945b86bede9d5c1bb551e3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Newbie99",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "vjmehra",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "W9KEL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Don’t"
                            },
                            {
                                "type": "text",
                                "text": " think "
                            },
                            {
                                "type": "text",
                                "text": "that’s"
                            },
                            {
                                "type": "text",
                                "text": " the case as I tried it on two machines. Once I changed the password it worked straight away (again), but "
                            },
                            {
                                "type": "text",
                                "text": "it’s"
                            },
                            {
                                "type": "text",
                                "text": " a bit odd "
                            },
                            {
                                "type": "text",
                                "text": "it’s"
                            },
                            {
                                "type": "text",
                                "text": " happened twice in a week.\n\nI did wonder if "
                            },
                            {
                                "type": "text",
                                "text": "it’s"
                            },
                            {
                                "type": "text",
                                "text": " some kind of security related thing (i.e. could someone be trying to reset my password), so I am going to enable 2FA, but just wanted to check that "
                            },
                            {
                                "type": "text",
                                "text": "doesn’t"
                            },
                            {
                                "type": "text",
                                "text": " impact the API (as "
                            },
                            {
                                "type": "text",
                                "text": "that’s"
                            },
                            {
                                "type": "text",
                                "text": " the only reason "
                            },
                            {
                                "type": "text",
                                "text": "I haven’t"
                            },
                            {
                                "type": "text",
                                "text": " enabled it so far, but "
                            },
                            {
                                "type": "text",
                                "text": "I’m"
                            },
                            {
                                "type": "text",
                                "text": " assuming the certs mean 2FA is via a code is just for the GUI)?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013K4VNB6D",
        "type": "message",
        "ts": "1684915273.916589",
        "edited": {
            "user": "U013K4VNB6D",
            "ts": "1684915297.000000"
        },
        "client_msg_id": "750752ee-6319-47b7-858a-df646cd31b5e",
        "text": "Hi\n\nI've amended the error handling method to print the details of the errors:\n\n```def call_strategy_error_handling(\n    func: Callable, market, market_book: MarketBook\n) -&gt; Optional[bool]:\n    try:\n        return func(market, market_book)\n    except FlumineException as e:\n        logger.error(\n            \"FlumineException %s in %s (%s)\" % (e, func.__name__, market.market_id),\n            exc_info=True,\n        )\n        print(e)\n    except Exception as e:\n        logger.critical(\n            \"Unknown error %s in %s (%s)\" % (e, func.__name__, market.market_id),\n            exc_info=True,\n        )\n        print(e)\n        if config.raise_errors:\n            raise\n    return False```\nHow do I get it to print a full stack trace, please? Currently, the output is just telling me 'list index out of range', but it would be helpful to know which bit of my code was responsible for that error.\n\nGPT suggested adding:\n\ntraceback_str = traceback.format_exc()  # Get the formatted traceback as a string\nprint(traceback_str)  # Print the stack trace\n\nHowever, that had no effect.\n\nThanks",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf188478b89f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f188478b89f4a5e2c5af9eafa0433712.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "",
            "real_name": "Jeff Waters",
            "display_name": "Jeff Waters",
            "team": "T4G9NBD2M",
            "name": "watersjg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LI1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi\n\nI've amended the error handling method to print the details of the errors:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "def call_strategy_error_handling(\n    func: Callable, market, market_book: MarketBook\n) -> Optional[bool]:\n    try:\n        return func(market, market_book)\n    except FlumineException as e:\n        logger.error(\n            \"FlumineException %s in %s (%s)\" % (e, func.__name__, market.market_id),\n            exc_info=True,\n        )\n        print(e)\n    except Exception as e:\n        logger.critical(\n            \"Unknown error %s in %s (%s)\" % (e, func.__name__, market.market_id),\n            exc_info=True,\n        )\n        print(e)\n        if config.raise_errors:\n            raise\n    return False"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nHow do I get it to print a full stack trace, please? Currently, the output is just telling me 'list index out of range', but it would be helpful to know which bit of my code was responsible for that error.\n\nGPT suggested adding:\n\ntraceback_str = traceback.format_exc()  # Get the formatted traceback as a string\nprint(traceback_str)  # Print the stack trace\n\nHowever, that had no effect.\n\nThanks"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1684915359.801169",
        "client_msg_id": "8f2107f5-be3f-4b32-acbb-570076fa63fa",
        "text": "Just setup logging as per the examples and it will log it for you?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "k9dS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Just setup logging as per the examples and it will log it for you?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013K4VNB6D",
        "type": "message",
        "ts": "1684915678.156619",
        "client_msg_id": "7ce9caeb-7387-4895-8be9-dcf75010714b",
        "text": "OK, I'll look into how to do that, thanks.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf188478b89f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f188478b89f4a5e2c5af9eafa0433712.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "",
            "real_name": "Jeff Waters",
            "display_name": "Jeff Waters",
            "team": "T4G9NBD2M",
            "name": "watersjg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RfC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "OK, I'll look into how to do that, thanks."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]