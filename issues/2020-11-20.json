[
    {
        "user": "U0160KZB6QP",
        "type": "message",
        "ts": "1605894515.129500",
        "edited": {
            "user": "U0160KZB6QP",
            "ts": "1605900972.000000"
        },
        "client_msg_id": "9e9fedf2-35ee-4780-97ca-580021b94f58",
        "text": "When i was running backtesting, i realised i can not get market name (e.g. \" Flat\/Hurdle\") from market_definition.\nIs there a way i can record market_catalogue data via MarketRecorder via my home computer? ( Unfortunately S3MarketRecorder do requed S3 bucket info, i want to test locally before try AWS)",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g4b10fa305fe",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/4b10fa305fee22d94246281f32cfef31.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "",
            "real_name": "ricky",
            "display_name": "ricky",
            "team": "T4G9NBD2M",
            "name": "yuqianguk",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fSm5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "When i was running backtesting, i realised i can not get market name (e.g. \" Flat\/Hurdle\") from market_definition.\nIs there a way i can record market_catalogue data via MarketRecorder via my home computer? ( Unfortunately S3MarketRecorder do requed S3 bucket info, i want to test locally before try AWS)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUCD6P13J",
        "type": "message",
        "ts": "1605895752.130600",
        "client_msg_id": "A2C688B7-4435-4D21-A52E-D3AD934E2A80",
        "text": "You can use this line just change it from uploading to s3 but write to a file <https:\/\/github.com\/liampauling\/flumine\/blob\/fdcf9961330f9807f18029ad7120999d0d62af93\/examples\/strategies\/marketrecorder.py#L178|https:\/\/github.com\/liampauling\/flumine\/blob\/fdcf9961330f9807f18029ad7120999d0d62af93\/examples\/strategies\/marketrecorder.py#L178>",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g6898272ab81",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6898272ab810e419c2c9ca9af1e53da8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0012-72.png",
            "first_name": "Lee",
            "real_name": "Lee U",
            "display_name": "Lee",
            "team": "T4G9NBD2M",
            "name": "lunswor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1605895752.130600",
        "reply_count": 4,
        "reply_users_count": 2,
        "latest_reply": "1605962870.133700",
        "reply_users": [
            "U0160KZB6QP",
            "UUCD6P13J"
        ],
        "replies": [
            {
                "user": "U0160KZB6QP",
                "ts": "1605897111.130800"
            },
            {
                "user": "U0160KZB6QP",
                "ts": "1605897138.131000"
            },
            {
                "user": "UUCD6P13J",
                "ts": "1605953178.132900"
            },
            {
                "user": "U0160KZB6QP",
                "ts": "1605962870.133700"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "fallback": "[liampauling\/flumine] examples\/strategies\/marketrecorder.py:178",
                "text": "```\n        if market and self.context.get(\"load_market_catalogue\", True):\n```",
                "title": "examples\/strategies\/marketrecorder.py:178",
                "footer": "<https:\/\/github.com\/liampauling\/flumine|liampauling\/flumine>",
                "id": 1,
                "title_link": "https:\/\/github.com\/liampauling\/flumine\/blob\/fdcf9961330f9807f18029ad7120999d0d62af93\/examples\/strategies\/marketrecorder.py#L178",
                "footer_icon": "https:\/\/github.githubassets.com\/favicon.ico",
                "color": "24292f",
                "mrkdwn_in": [
                    "text"
                ],
                "bot_id": "B01144Z0734",
                "app_unfurl_url": "https:\/\/github.com\/liampauling\/flumine\/blob\/fdcf9961330f9807f18029ad7120999d0d62af93\/examples\/strategies\/marketrecorder.py#L178",
                "is_app_unfurl": true
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "598Jh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You can use this line just change it from uploading to s3 but write to a file "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/liampauling\/flumine\/blob\/fdcf9961330f9807f18029ad7120999d0d62af93\/examples\/strategies\/marketrecorder.py#L178",
                                "text": "https:\/\/github.com\/liampauling\/flumine\/blob\/fdcf9961330f9807f18029ad7120999d0d62af93\/examples\/strategies\/marketrecorder.py#L178"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0160KZB6QP",
        "type": "message",
        "ts": "1605897111.130800",
        "client_msg_id": "9b6261e8-6aea-42b2-9dee-2ffef7eae5ac",
        "text": "Thanks for your reply, i have implemented _load() method in MarketRecorder class. But seem _load() never get call. here is  the code",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g4b10fa305fe",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/4b10fa305fee22d94246281f32cfef31.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "",
            "real_name": "ricky",
            "display_name": "ricky",
            "team": "T4G9NBD2M",
            "name": "yuqianguk",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1605895752.130600",
        "parent_user_id": "UUCD6P13J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "swaY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for your reply, i have implemented _load() method in MarketRecorder class. But seem _load() never get call. here is  the code"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0160KZB6QP",
        "type": "message",
        "ts": "1605897138.131000",
        "edited": {
            "user": "U0160KZB6QP",
            "ts": "1605897172.000000"
        },
        "client_msg_id": "0dc82749-6b90-404d-97e7-5d64512e134d",
        "text": "def _load(self, market, zip_file_dir: str, market_definition: dict) -&gt; None:\n\tprint('load start in MarketRecorder')\n\tfile_directory = os.path.join(\n\t\t\t\t\t\tzip_file_dir,\n\t\t\t\t\t\t\"marketCatalogue\",\n\t\t\t\t\t\t)\n\tif market and self.context.get(\"load_market_catalogue\", True):\n\t\tif market.market_catalogue is None:\n\t\t\tlogger.warning(\n\t\t\t\t\"No marketCatalogue data available for %s\" % market.market_id\n\t\t\t)\n\t\t\treturn\n\t\ttry:\n\t\t\twith open(file_directory, \"a\") as f:\n\t\t\t\tf.write(market.market_catalogue.json())\n\t\t\t<http:\/\/logger.info|logger.info>(\n\t\t\t\t\"%s successfully loaded marketCatalogue to s3\" % market.market_id\n\t\t\t)\n\t\texcept (BotoCoreError, Exception) as e:\n\t\t\tlogger.error(\"Error loading to s3: %s\" % e)",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g4b10fa305fe",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/4b10fa305fee22d94246281f32cfef31.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "",
            "real_name": "ricky",
            "display_name": "ricky",
            "team": "T4G9NBD2M",
            "name": "yuqianguk",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1605895752.130600",
        "parent_user_id": "UUCD6P13J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7wlE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "def _load(self, market, zip_file_dir: str, market_definition: dict) -> None:\n\tprint('load start in MarketRecorder')\n\tfile_directory = os.path.join(\n\t\t\t\t\t\tzip_file_dir,\n\t\t\t\t\t\t\"marketCatalogue\",\n\t\t\t\t\t\t)\n\tif market and self.context.get(\"load_market_catalogue\", True):\n\t\tif market.market_catalogue is None:\n\t\t\tlogger.warning(\n\t\t\t\t\"No marketCatalogue data available for %s\" % market.market_id\n\t\t\t)\n\t\t\treturn\n\t\ttry:\n\t\t\twith open(file_directory, \"a\") as f:\n\t\t\t\tf.write(market.market_catalogue.json())\n\t\t\t"
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/logger.info",
                                "text": "logger.info"
                            },
                            {
                                "type": "text",
                                "text": "(\n\t\t\t\t\"%s successfully loaded marketCatalogue to s3\" % market.market_id\n\t\t\t)\n\t\texcept (BotoCoreError, Exception) as e:\n\t\t\tlogger.error(\"Error loading to s3: %s\" % e)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1605925920.132500",
        "client_msg_id": "01595EBA-7ECF-4AF7-AD91-B3925A1DE904",
        "text": "I have tried everything, I use pympler now to track objects it’s much easier than trying to understand gc \n\n<https:\/\/betfairlightweight.slack.com\/archives\/C4H05ML2E\/p1602168934132000|https:\/\/betfairlightweight.slack.com\/archives\/C4H05ML2E\/p1602168934132000>",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1605741678.120500",
        "parent_user_id": "UPMUFSGCR",
        "attachments": [
            {
                "from_url": "https:\/\/betfairlightweight.slack.com\/archives\/C4H05ML2E\/p1602168934132000",
                "fallback": "[October 8th, 2020 7:55 AM] liam: I have tried almost everything in finding memory leaks and this is what I did to find the above in flumine\/bflw using `pympler`\n\n```from pympler import summary, muppy\nfrom pympler.util import stringutils\n\ndef get_pympler_memory():\n    mem_summary = summary.summarize(muppy.get_objects())\n    mem_summary = [\n        [i[0], i[1], i[2], stringutils.pp(i[2]).lstrip()] for i in mem_summary\n    ]\n    mem_sorted = sorted(mem_summary, key=itemgetter(2), reverse=True)\n    mem_sum_bytes = sum([i[2] for i in mem_sorted])\n    mem_sum_human = stringutils.pp(mem_sum_bytes).lstrip()\n    return mem_sum_bytes, mem_sum_human, mem_sorted```\nUsed like so:\n\n```mem_sum_bytes, mem_sum_human, mem_sorted = get_pympler_memory()\n<http:\/\/logger.info|logger.info>(\n    \"pympler\",\n    extra={\n        \"total_bytes\": mem_sum_bytes,\n        \"total\": mem_sum_human,\n        \"memory\": mem_sorted[:64],\n    },\n)```\nYou can then plot or just look to see which objects are increasing in size or count.",
                "ts": "1602168934.132000",
                "author_id": "U4H19D1D2",
                "author_subname": "liam",
                "channel_id": "C4H05ML2E",
                "is_msg_unfurl": true,
                "text": "I have tried almost everything in finding memory leaks and this is what I did to find the above in flumine\/bflw using `pympler`\n\n```from pympler import summary, muppy\nfrom pympler.util import stringutils\n\ndef get_pympler_memory():\n    mem_summary = summary.summarize(muppy.get_objects())\n    mem_summary = [\n        [i[0], i[1], i[2], stringutils.pp(i[2]).lstrip()] for i in mem_summary\n    ]\n    mem_sorted = sorted(mem_summary, key=itemgetter(2), reverse=True)\n    mem_sum_bytes = sum([i[2] for i in mem_sorted])\n    mem_sum_human = stringutils.pp(mem_sum_bytes).lstrip()\n    return mem_sum_bytes, mem_sum_human, mem_sorted```\nUsed like so:\n\n```mem_sum_bytes, mem_sum_human, mem_sorted = get_pympler_memory()\n<http:\/\/logger.info|logger.info>(\n    \"pympler\",\n    extra={\n        \"total_bytes\": mem_sum_bytes,\n        \"total\": mem_sum_human,\n        \"memory\": mem_sorted[:64],\n    },\n)```\nYou can then plot or just look to see which objects are increasing in size or count.",
                "author_name": "liam",
                "author_link": "https:\/\/betfairlightweight.slack.com\/team\/U4H19D1D2",
                "author_icon": "https:\/\/secure.gravatar.com\/avatar\/cebcb7a36736d2bfe25c0fcb2d1dcc66.jpg?s=48&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-48.png",
                "mrkdwn_in": [
                    "text"
                ],
                "id": 1,
                "original_url": "https:\/\/betfairlightweight.slack.com\/archives\/C4H05ML2E\/p1602168934132000",
                "footer": "Slack conversation"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nnT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have tried everything, I use pympler now to track objects it’s much easier than trying to understand gc \n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/betfairlightweight.slack.com\/archives\/C4H05ML2E\/p1602168934132000",
                                "text": "https:\/\/betfairlightweight.slack.com\/archives\/C4H05ML2E\/p1602168934132000"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "grinning",
                "users": [
                    "UPMUFSGCR"
                ],
                "count": 1
            }
        ]
    }
]