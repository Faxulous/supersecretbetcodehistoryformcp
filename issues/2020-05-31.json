[
    {
        "text": "Total beginner to programming (just a couple of python courses under my belt), so sorry for what are easy questions...\nIm using BFLW Exampleone and trying to build out from there. The idea at this stage is to learn rather than a fully functioning program to place bets etc\nInitial thoughts are to start with one market at at time, extract EX_BEST_OFFERS for each selection and store the three back odds and three lay odds (Do you store these values in a list?)\nIll only be active in play, so I guess I can loop on the Inplay flag from the market ID?\nIll create some bet logic and just print to console for now, of what the bet would have been ie selctionID; Side, Size etc..\n\nDoes this sound logical as first steps? Also, if anyone has very basic code they can share (with secret sauce removed!) it would be appreciated\n\nAlso, When I place the operation via the Visualiser, I can see the price and size (see image) , but when I run it in BFLW I can only see \"object at 0x0000018286D26108\" for example. Is this a location in memory where the EX_BEST_OFFERS values are stored?\nif so, how do you access those values via python?\n\nSorry for newbie questions, thanks in advance\nregards\nPeter",
        "files": [
            {
                "id": "F0159F2GWG0",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": true,
        "user": "UQL0QDEKA",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZX3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Total beginner to programming (just a couple of python courses under my belt), so sorry for what are easy questions...\nIm using BFLW Exampleone and trying to build out from there. The idea at this stage is to learn rather than a fully functioning program to place bets etc\nInitial thoughts are to start with one market at at time, extract EX_BEST_OFFERS for each selection and store the three back odds and three lay odds (Do you store these values in a list?)\nIll only be active in play, so I guess I can loop on the Inplay flag from the market ID?\nIll create some bet logic and just print to console for now, of what the bet would have been ie selctionID; Side, Size etc..\n\nDoes this sound logical as first steps? Also, if anyone has very basic code they can share (with secret sauce removed!) it would be appreciated\n\nAlso, When I place the operation via the Visualiser, I can see the price and size (see image) , but when I run it in BFLW I can only see \"object at 0x0000018286D26108\" for example. Is this a location in memory where the EX_BEST_OFFERS values are stored?\nif so, how do you access those values via python?\n\nSorry for newbie questions, thanks in advance\nregards\nPeter"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1590951678.448900",
        "client_msg_id": "b45c96b1-070c-4904-b9d7-767537a02337"
    },
    {
        "text": "",
        "files": [
            {
                "id": "F014KS0MBBM",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": true,
        "user": "UQL0QDEKA",
        "display_as_bot": false,
        "type": "message",
        "ts": "1590951694.449200",
        "client_msg_id": "15502fbf-c202-4920-90a2-0938536dd7c1"
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1590952113.450100",
        "client_msg_id": "3321C2B0-C7B5-401C-90B3-C8DCAB60DB4D",
        "text": "Debugger is your friend here, what IDE are you using?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=A882",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Debugger is your friend here, what IDE are you using?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UQL0QDEKA",
        "type": "message",
        "ts": "1590952340.450500",
        "client_msg_id": "bb63008f-1141-4860-8d5e-ed3719a1c848",
        "text": "Pycharm Liam",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g444d10128c0",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/444d10128c0aaf094041a52a76796602.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "Peter",
            "real_name": "Peter Lenagh",
            "display_name": "PeterLe",
            "team": "T4G9NBD2M",
            "name": "lenagh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ee\/M",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Pycharm Liam"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1590952616.453300",
        "client_msg_id": "64B540CF-3B69-4693-8E6A-3BD90254F9D7",
        "text": "<https:\/\/www.jetbrains.com\/help\/pycharm\/debugging-your-first-python-application.html|https:\/\/www.jetbrains.com\/help\/pycharm\/debugging-your-first-python-application.html>",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "title": "Step 2. Debug your first Python application - Help | PyCharm",
                "title_link": "https:\/\/www.jetbrains.com\/help\/pycharm\/debugging-your-first-python-application.html",
                "text": "How to debug a simple Python application",
                "fallback": "Step 2. Debug your first Python application - Help | PyCharm",
                "from_url": "https:\/\/www.jetbrains.com\/help\/pycharm\/debugging-your-first-python-application.html",
                "service_icon": "https:\/\/resources.jetbrains.com\/storage\/ui\/favicons\/apple-touch-icon-57x57.png",
                "service_name": "jetbrains.com",
                "id": 1,
                "original_url": "https:\/\/www.jetbrains.com\/help\/pycharm\/debugging-your-first-python-application.html"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Nx5r",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/www.jetbrains.com\/help\/pycharm\/debugging-your-first-python-application.html",
                                "text": "https:\/\/www.jetbrains.com\/help\/pycharm\/debugging-your-first-python-application.html"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UU1URJ8L8",
        "type": "message",
        "ts": "1590952632.453900",
        "client_msg_id": "5f7100a7-22c6-4f7e-ada5-21fafda2a93c",
        "text": "&gt;  I can see the price and size (see image) , but when I run it in BFLW I can only see “object at 0x0000018286D26108” for example. Is this a location in memory where the EX_BEST_OFFERS values are stored?\n&gt; if so, how do you access those values via python?\nYes, that is just the address to the PriceSize object. PriceSize does not implement __str__ method so if you print it it doesn’t get converted to a pretty string representation. If you want to see price and size you need to print price_size.price and price_size.size. The visualizer shows it as json which is ‘just’ text and not a python object.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g7a5a7d77117",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7a5a7d7711746fb16f400e11af544b2e.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0012-72.png",
            "first_name": "",
            "real_name": "Remi",
            "display_name": "Remi",
            "team": "T4G9NBD2M",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CqvE",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " I can see the price and size (see image) , but when I run it in BFLW I can only see “object at 0x0000018286D26108” for example. Is this a location in memory where the EX_BEST_OFFERS values are stored?\nif so, how do you access those values via python?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes, that is just the address to the PriceSize object. PriceSize does not implement __str__ method so if you print it it doesn’t get converted to a pretty string representation. If you want to see price and size you need to print price_size.price and price_size.size. The visualizer shows it as json which is ‘just’ text and not a python object."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1590952633.454000",
        "client_msg_id": "28576D96-77F6-47C2-A209-EF1C023B7C98",
        "text": "Using the debugger you can interrogate the objects ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "12L",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Using the debugger you can interrogate the objects "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U011VL3CA2Y",
        "type": "message",
        "ts": "1590952965.455700",
        "client_msg_id": "12893643-1a96-48cb-aa3a-58cc0005a71a",
        "text": "Pycharm has a great debugger, it allows you to stop the code at any point and inspect the values of your variables, execute code line-by-line, step into your own functions and much more",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g1ec6e88d1e4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/1ec6e88d1e4dd0bff349d83e9edba6bd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "Ruben",
            "real_name": "Ruben",
            "display_name": "Ruben",
            "team": "T4G9NBD2M",
            "name": "tduqruqtgtpiioibww",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mV=SX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Pycharm has a great debugger, it allows you to stop the code at any point and inspect the values of your variables, execute code line-by-line, step into your own functions and much more"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UQL0QDEKA",
        "type": "message",
        "ts": "1590953014.455900",
        "client_msg_id": "0fc7d428-bf4f-4b65-acb1-5615ba52befc",
        "text": "Thanks for the reply, so how would you interrogate the object at say 0x0000018286D26108 ?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g444d10128c0",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/444d10128c0aaf094041a52a76796602.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "Peter",
            "real_name": "Peter Lenagh",
            "display_name": "PeterLe",
            "team": "T4G9NBD2M",
            "name": "lenagh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1590953014.455900",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1590953385.460500",
        "reply_users": [
            "UU1URJ8L8",
            "UQL0QDEKA"
        ],
        "replies": [
            {
                "user": "UU1URJ8L8",
                "ts": "1590953146.457900"
            },
            {
                "user": "UQL0QDEKA",
                "ts": "1590953385.460500"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6Sn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for the reply, so how would you interrogate the object at say 0x0000018286D26108 ?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U011VL3CA2Y",
        "type": "message",
        "ts": "1590953088.456500",
        "client_msg_id": "b789a0d8-5a5e-4558-9b0e-7ed952c11c73",
        "text": "what I would do is place a breakpoint at a point in the code where you know the object has already been created",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g1ec6e88d1e4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/1ec6e88d1e4dd0bff349d83e9edba6bd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "Ruben",
            "real_name": "Ruben",
            "display_name": "Ruben",
            "team": "T4G9NBD2M",
            "name": "tduqruqtgtpiioibww",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DZQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "what I would do is place a breakpoint at a point in the code where you know the object has already been created"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U011VL3CA2Y",
        "type": "message",
        "ts": "1590953108.457100",
        "client_msg_id": "de57d639-1383-4eec-ba82-9e67319c5ac9",
        "text": "do not focus on memory locations since those might change from execution to execution, but rather focus on variables",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g1ec6e88d1e4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/1ec6e88d1e4dd0bff349d83e9edba6bd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "Ruben",
            "real_name": "Ruben",
            "display_name": "Ruben",
            "team": "T4G9NBD2M",
            "name": "tduqruqtgtpiioibww",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LZP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "do not focus on memory locations since those might change from execution to execution, but rather focus on variables"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U011VL3CA2Y",
        "type": "message",
        "ts": "1590953142.457800",
        "client_msg_id": "801727f9-398b-4ea5-bcda-ebc763360d8d",
        "text": "once you reach the breakpoint you can open the pycharm console (alt + f8), and type the variable name, and look into its contents",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g1ec6e88d1e4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/1ec6e88d1e4dd0bff349d83e9edba6bd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "Ruben",
            "real_name": "Ruben",
            "display_name": "Ruben",
            "team": "T4G9NBD2M",
            "name": "tduqruqtgtpiioibww",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8Z2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "once you reach the breakpoint you can open the pycharm console (alt + f8), and type the variable name, and look into its contents"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UU1URJ8L8",
        "type": "message",
        "ts": "1590953146.457900",
        "client_msg_id": "435d0187-8618-44c5-92d3-5c15f687981e",
        "text": "list_of_offers[0].price",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g7a5a7d77117",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7a5a7d7711746fb16f400e11af544b2e.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0012-72.png",
            "first_name": "",
            "real_name": "Remi",
            "display_name": "Remi",
            "team": "T4G9NBD2M",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1590953014.455900",
        "parent_user_id": "UQL0QDEKA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Y19",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "list_of_offers[0].price"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U011VL3CA2Y",
        "type": "message",
        "ts": "1590953226.459100",
        "client_msg_id": "761c3662-e9c1-4e5d-9ea6-8fae5063bff9",
        "text": "also, a good starting read are the betting types definitions, to get used to the typical class definitions that you will come accross <https:\/\/docs.developer.betfair.com\/display\/1smk3cen4v3lu3yomq5qye0ni\/Betting+Type+Definitions>",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g1ec6e88d1e4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/1ec6e88d1e4dd0bff349d83e9edba6bd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "Ruben",
            "real_name": "Ruben",
            "display_name": "Ruben",
            "team": "T4G9NBD2M",
            "name": "tduqruqtgtpiioibww",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VgAj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "also, a good starting read are the betting types definitions, to get used to the typical class definitions that you will come accross "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/docs.developer.betfair.com\/display\/1smk3cen4v3lu3yomq5qye0ni\/Betting+Type+Definitions"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UQL0QDEKA",
        "type": "message",
        "ts": "1590953367.460400",
        "client_msg_id": "f6f8bd0e-ff20-4dcd-b1a8-0598e7f4e35e",
        "text": "Great many thanks guys; I haven't used the debugger before, So I need to go away and learn that and the definitions. Thanks again",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g444d10128c0",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/444d10128c0aaf094041a52a76796602.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "Peter",
            "real_name": "Peter Lenagh",
            "display_name": "PeterLe",
            "team": "T4G9NBD2M",
            "name": "lenagh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BO3U",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Great many thanks guys; I haven't used the debugger before, So I need to go away and learn that and the definitions. Thanks again"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UQL0QDEKA",
        "type": "message",
        "ts": "1590953385.460500",
        "client_msg_id": "6199be0a-9181-4de5-b43a-08a8de8d693e",
        "text": "Thank you Remi",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g444d10128c0",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/444d10128c0aaf094041a52a76796602.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "Peter",
            "real_name": "Peter Lenagh",
            "display_name": "PeterLe",
            "team": "T4G9NBD2M",
            "name": "lenagh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1590953014.455900",
        "parent_user_id": "UQL0QDEKA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "++1G",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thank you Remi"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1590953426.461300",
        "client_msg_id": "A22F4512-22AB-4448-ADE8-EE1A9ABFFB93",
        "text": "Regarding your program design, any reason why you don’t want to use streaming?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GMa1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Regarding your program design, any reason why you don’t want to use streaming?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UQL0QDEKA",
        "type": "message",
        "ts": "1590953748.462300",
        "client_msg_id": "89effba1-3db0-4793-a727-a5ac15a957b3",
        "text": "No, I would like to use streaming Liam; shows how far advanced I am!:grinning: Is there a better example i should be using to build out from ?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g444d10128c0",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/444d10128c0aaf094041a52a76796602.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "Peter",
            "real_name": "Peter Lenagh",
            "display_name": "PeterLe",
            "team": "T4G9NBD2M",
            "name": "lenagh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ydOwu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "No, I would like to use streaming Liam; shows how far advanced I am!"
                            },
                            {
                                "type": "emoji",
                                "name": "grinning",
                                "unicode": "1f600"
                            },
                            {
                                "type": "text",
                                "text": " Is there a better example i should be using to build out from ?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1590954650.464300",
        "client_msg_id": "B53D4F1C-50B5-447D-917E-048E1E7C2B9B",
        "text": "Depends on what you are trying to do, the great thing about streaming is that you subscribe to markets and then get updates on updates. Without streaming you need to find the markets you want and then continue to poll the marketBook endpoint for updates ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CmTjA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Depends on what you are trying to do, the great thing about streaming is that you subscribe to markets and then get updates on updates. Without streaming you need to find the markets you want and then continue to poll the marketBook endpoint for updates "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1590954700.465500",
        "client_msg_id": "53AA020F-4307-48EC-BACC-BACE54DA830F",
        "text": "That’s not to say that you shouldn’t start with the latter to get to grips with the data etc but streaming makes everything simpler ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "e1z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That’s not to say that you shouldn’t start with the latter to get to grips with the data etc but streaming makes everything simpler "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UQL0QDEKA",
        "type": "message",
        "ts": "1590955366.467900",
        "client_msg_id": "a4f3fe3d-dd12-4dd6-b13b-3161facc0cdc",
        "text": "Yes Streaming is the preferred method. All my current stuff is in C# which were written for me, but Id really like to learn this for myself, as I have lots of ideas, id like to try. Ill have a look at the examplestreaming.py tomorrow. Thanks",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g444d10128c0",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/444d10128c0aaf094041a52a76796602.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "Peter",
            "real_name": "Peter Lenagh",
            "display_name": "PeterLe",
            "team": "T4G9NBD2M",
            "name": "lenagh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ApX\/Z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes Streaming is the preferred method. All my current stuff is in C# which were written for me, but Id really like to learn this for myself, as I have lots of ideas, id like to try. Ill have a look at the examplestreaming.py tomorrow. Thanks"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "Managed to get the examplestreaming.py working; much simpler than what i was trying to do, although it seemed sensible at the time :grinning:, one step further today, thanks again guys",
        "files": [
            {
                "id": "F014RU1FJH2",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": true,
        "user": "UQL0QDEKA",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7sJ4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Managed to get the examplestreaming.py working; much simpler than what i was trying to do, although it seemed sensible at the time "
                            },
                            {
                                "type": "emoji",
                                "name": "grinning",
                                "unicode": "1f600"
                            },
                            {
                                "type": "text",
                                "text": ", one step further today, thanks again guys"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1590965459.469700",
        "client_msg_id": "a8ecc5f6-56ba-4736-9941-8370354a8f21",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U4H19D1D2",
                    "U011VL3CA2Y"
                ],
                "count": 2
            }
        ]
    }
]