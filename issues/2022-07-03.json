[
    {
        "user": "U02J5GMLJF6",
        "type": "message",
        "ts": "1656842085.796539",
        "edited": {
            "user": "U02J5GMLJF6",
            "ts": "1656842192.000000"
        },
        "client_msg_id": "c0ff673a-ec84-489f-82c6-dcabdd28359e",
        "text": "Are there any conditions\/controls that will cause Flumine to exit (gracefully) without prompting?  My instance is running fine for an hour or so but then shuts itself down. Simplified log below....\n```19:01:03 | INFO     | Client update account details\n19:02:31 | INFO     | Market 1.200669111 closed\n19:02:31 | INFO     | Market closed\n19:02:31 | INFO     | Removing market 1.200669107\n19:02:31 | INFO     | BackgroundWorker Info Update shutting down\n19:02:33 | INFO     | BackgroundWorker Market Filter Update shutting down\n19:02:37 | INFO     | BackgroundWorker Exchange Rate Update shutting down\n19:02:41 | INFO     | BackgroundWorker Market PandL DB  Update shutting down\n19:02:45 | INFO     | BackgroundWorker Account History  Update shutting down\n19:02:49 | INFO     | BackgroundWorker Order DB Update shutting down\n19:02:53 | INFO     | BackgroundWorker DB Update from data scraping - horses shutting down\n19:02:57 | INFO     | BackgroundWorker keep_alive shutting down\n19:02:58 | INFO     | 1.200669111: 0 cleared orders found, more available: False\n19:03:01 | INFO     | BackgroundWorker poll_market_catalogue shutting down\n19:03:04 | INFO     | Client update account details\n19:03:05 | INFO     | BackgroundWorker poll_account_balance shutting down\n19:03:09 | INFO     | BackgroundWorker poll_market_closure shutting down\n19:03:13 | INFO     | Stopped OrderStream 1002\n19:03:13 | INFO     | Stopped MarketStream 3003\n19:03:13 | INFO     | Stopped MarketStream 2006\n19:03:13 | INFO     | Shutting down Execution (SimulatedExecution)\n19:03:13 | INFO     | Shutting down Execution (BetfairExecution)\n19:03:13 | INFO     | Shutting down logging control LOGGING_CONTROL\n19:03:13 | INFO     | Stopped output_thread (OrderStream 1002)\n19:03:14 | INFO     | Client logout\n19:03:14 | INFO     | Exiting flumine```",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "6ef93b8cc2d9",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-18\/2615366655282_6ef93b8cc2d9a201b6b8_72.png",
            "first_name": "mon",
            "real_name": "mon mon",
            "display_name": "mon mon",
            "team": "T4G9NBD2M",
            "name": "monmonmon.mails",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1656842085.796539",
        "reply_count": 28,
        "reply_users_count": 2,
        "latest_reply": "1657886835.621539",
        "reply_users": [
            "U4H19D1D2",
            "U02J5GMLJF6"
        ],
        "replies": [
            {
                "user": "U4H19D1D2",
                "ts": "1656842562.271539"
            },
            {
                "user": "U02J5GMLJF6",
                "ts": "1656856587.200579"
            },
            {
                "user": "U02J5GMLJF6",
                "ts": "1656856667.639669"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1656858941.661059"
            },
            {
                "user": "U02J5GMLJF6",
                "ts": "1656859933.966519"
            },
            {
                "user": "U02J5GMLJF6",
                "ts": "1657230922.322269"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1657260053.868979"
            },
            {
                "user": "U02J5GMLJF6",
                "ts": "1657267986.528959"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1657269045.426449"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1657269059.648929"
            },
            {
                "user": "U02J5GMLJF6",
                "ts": "1657280363.478669"
            },
            {
                "user": "U02J5GMLJF6",
                "ts": "1657280392.831269"
            },
            {
                "user": "U02J5GMLJF6",
                "ts": "1657280442.566689"
            },
            {
                "user": "U02J5GMLJF6",
                "ts": "1657549182.504639"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1657549494.358789"
            },
            {
                "user": "U02J5GMLJF6",
                "ts": "1657550370.347519"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1657550394.489569"
            },
            {
                "user": "U02J5GMLJF6",
                "ts": "1657550726.554589"
            },
            {
                "user": "U02J5GMLJF6",
                "ts": "1657576656.184429"
            },
            {
                "user": "U02J5GMLJF6",
                "ts": "1657576677.250439"
            },
            {
                "user": "U02J5GMLJF6",
                "ts": "1657576743.618589"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1657703829.405029"
            },
            {
                "user": "U02J5GMLJF6",
                "ts": "1657707654.710009"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1657707720.510929"
            },
            {
                "user": "U02J5GMLJF6",
                "ts": "1657707919.786679"
            },
            {
                "user": "U4H19D1D2",
                "ts": "1657787864.567219"
            },
            {
                "user": "U02J5GMLJF6",
                "ts": "1657792335.926029"
            },
            {
                "user": "U02J5GMLJF6",
                "ts": "1657886835.621539"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1657886835.621539",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "I2Gj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Are there any conditions\/controls that will cause Flumine to exit (gracefully) without prompting?  My instance is running fine for an hour or so but then shuts itself down. Simplified log below....\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "19:01:03 | INFO     | Client update account details\n19:02:31 | INFO     | Market 1.200669111 closed\n19:02:31 | INFO     | Market closed\n19:02:31 | INFO     | Removing market 1.200669107\n19:02:31 | INFO     | BackgroundWorker Info Update shutting down\n19:02:33 | INFO     | BackgroundWorker Market Filter Update shutting down\n19:02:37 | INFO     | BackgroundWorker Exchange Rate Update shutting down\n19:02:41 | INFO     | BackgroundWorker Market PandL DB  Update shutting down\n19:02:45 | INFO     | BackgroundWorker Account History  Update shutting down\n19:02:49 | INFO     | BackgroundWorker Order DB Update shutting down\n19:02:53 | INFO     | BackgroundWorker DB Update from data scraping - horses shutting down\n19:02:57 | INFO     | BackgroundWorker keep_alive shutting down\n19:02:58 | INFO     | 1.200669111: 0 cleared orders found, more available: False\n19:03:01 | INFO     | BackgroundWorker poll_market_catalogue shutting down\n19:03:04 | INFO     | Client update account details\n19:03:05 | INFO     | BackgroundWorker poll_account_balance shutting down\n19:03:09 | INFO     | BackgroundWorker poll_market_closure shutting down\n19:03:13 | INFO     | Stopped OrderStream 1002\n19:03:13 | INFO     | Stopped MarketStream 3003\n19:03:13 | INFO     | Stopped MarketStream 2006\n19:03:13 | INFO     | Shutting down Execution (SimulatedExecution)\n19:03:13 | INFO     | Shutting down Execution (BetfairExecution)\n19:03:13 | INFO     | Shutting down logging control LOGGING_CONTROL\n19:03:13 | INFO     | Stopped output_thread (OrderStream 1002)\n19:03:14 | INFO     | Client logout\n19:03:14 | INFO     | Exiting flumine"
                            }
                        ],
                        "border": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1656842562.271539",
        "client_msg_id": "179079c9-d4dd-422f-8170-fc8dba973d4b",
        "text": "What does your logging setup look like? Looks like you are missing stuff",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1656842085.796539",
        "parent_user_id": "U02J5GMLJF6",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KEGL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What does your logging setup look like? Looks like you are missing stuff"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0128E7BEHW",
        "type": "message",
        "ts": "1656855502.690229",
        "client_msg_id": "83876484-cace-4e19-b083-0c6c31524c26",
        "text": "Haven't improved any models since Jan.  Worked a liiittle on execution, also tried quadrupling my stakes and got my arse handed to me so dialed it back to usual sizes.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb57a2bdd15a",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b57a2bdd15acccdb845ce257f38940cc.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Dave",
            "real_name": "Dave R",
            "display_name": "Dave",
            "team": "T4G9NBD2M",
            "name": "d7m",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1656699029.765219",
        "parent_user_id": "U4H19D1D2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DQm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Haven't improved any models since Jan.  Worked a liiittle on execution, also tried quadrupling my stakes and got my arse handed to me so dialed it back to usual sizes."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02J5GMLJF6",
        "type": "message",
        "ts": "1656856587.200579",
        "client_msg_id": "326d9bf5-e09e-4f52-a29b-834701c596f7",
        "text": "That was just the console output....\n```log_config = {\n        'version':1,\n        'disable_existing_loggers': False,\n        'formatters':{\n                'screen_text': {\n                        'format': '%(asctime)s | %(levelname)-8s | %(message)s',\n                        'datefmt':\"%H:%M:%S\"\n                },\n                \"json_file\": {\n                        '()': 'pythonjsonlogger.jsonlogger.JsonFormatter',\n                        'format': \"%(asctime)s %(levelname)s %(name)s %(message)s\",\n                },\n        },\n        'handlers':{\n                'consoleHandler':{\n                        'formatter': \"screen_text\",\n                        'class': \"logging.StreamHandler\",\n                        'level': 'INFO',\n                },\n                'fileHandler':{\n                        'formatter': 'json_file',\n                        'class': 'logging.handlers.TimedRotatingFileHandler',\n                        'filename': 'logs\/flumine.log',\n                        'when': 'midnight',\n                        'interval': 1,\n                        'backupCount':7,\n                        'level': 'DEBUG',\n                },\n        },\n        'root':{\n                'level': 'DEBUG',\n                'handlers' : ['consoleHandler','fileHandler'],\n        },\n}\n\n\nlogging.config.dictConfig(log_config)\nlogger = logging.getLogger()```",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "6ef93b8cc2d9",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-18\/2615366655282_6ef93b8cc2d9a201b6b8_72.png",
            "first_name": "mon",
            "real_name": "mon mon",
            "display_name": "mon mon",
            "team": "T4G9NBD2M",
            "name": "monmonmon.mails",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1656842085.796539",
        "parent_user_id": "U02J5GMLJF6",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AC8d",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That was just the console output....\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "log_config = {\n        'version':1,\n        'disable_existing_loggers': False,\n        'formatters':{\n                'screen_text': {\n                        'format': '%(asctime)s | %(levelname)-8s | %(message)s',\n                        'datefmt':\"%H:%M:%S\"\n                },\n                \"json_file\": {\n                        '()': 'pythonjsonlogger.jsonlogger.JsonFormatter',\n                        'format': \"%(asctime)s %(levelname)s %(name)s %(message)s\",\n                },\n        },\n        'handlers':{\n                'consoleHandler':{\n                        'formatter': \"screen_text\",\n                        'class': \"logging.StreamHandler\",\n                        'level': 'INFO',\n                },\n                'fileHandler':{\n                        'formatter': 'json_file',\n                        'class': 'logging.handlers.TimedRotatingFileHandler',\n                        'filename': 'logs\/flumine.log',\n                        'when': 'midnight',\n                        'interval': 1,\n                        'backupCount':7,\n                        'level': 'DEBUG',\n                },\n        },\n        'root':{\n                'level': 'DEBUG',\n                'handlers' : ['consoleHandler','fileHandler'],\n        },\n}\n\n\nlogging.config.dictConfig(log_config)\nlogger = logging.getLogger()"
                            }
                        ],
                        "border": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "U02J5GMLJF6",
        "type": "message",
        "ts": "1656856667.639669",
        "client_msg_id": "bdafea46-e138-4632-a05e-5be64b787894",
        "text": "I've trolled through the DEBUG level logs but can't see anything that hints as to why the program is deciding to shut down.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "6ef93b8cc2d9",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-18\/2615366655282_6ef93b8cc2d9a201b6b8_72.png",
            "first_name": "mon",
            "real_name": "mon mon",
            "display_name": "mon mon",
            "team": "T4G9NBD2M",
            "name": "monmonmon.mails",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1656842085.796539",
        "parent_user_id": "U02J5GMLJF6",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ds0V",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've trolled through the DEBUG level logs but can't see anything that hints as to why the program is deciding to shut down."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03CZHR6HM0",
        "type": "message",
        "ts": "1656857877.515159",
        "client_msg_id": "83a7640e-dbd1-4ac2-b803-f7f32be598e8",
        "text": "Guys a little 'off topic'.\nWhen collecting data in\n```events = trading.betting.list_events()```\nand coming as a list, I was wanting to look at the complete tree inside a each event, such as all possible objects and values delivered in `events[0]`.\n\nDo you happen to know any module that delivers a complete print like this to indicate me?\n\nMaybe in tests you've already used it to see what's inside each container, that's why I asked.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "b1c2a2d27548",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-04-26\/3427011754679_b1c2a2d27548a7ec94c7_72.png",
            "first_name": "Start",
            "real_name": "Start Code",
            "display_name": "Beginner",
            "team": "T4G9NBD2M",
            "name": "teststackoverflowbooy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1656857877.515159",
        "reply_count": 11,
        "reply_users_count": 4,
        "latest_reply": "1656934816.004839",
        "reply_users": [
            "UBS7QANF3",
            "U03CZHR6HM0",
            "U0128E7BEHW",
            "U9JHLMZB4"
        ],
        "replies": [
            {
                "user": "UBS7QANF3",
                "ts": "1656857933.145919"
            },
            {
                "user": "U03CZHR6HM0",
                "ts": "1656858012.539229"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1656858015.962139"
            },
            {
                "user": "U03CZHR6HM0",
                "ts": "1656858217.186319"
            },
            {
                "user": "U03CZHR6HM0",
                "ts": "1656858224.723069"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1656858321.734599"
            },
            {
                "user": "U0128E7BEHW",
                "ts": "1656858562.546019"
            },
            {
                "user": "U03CZHR6HM0",
                "ts": "1656863142.468299"
            },
            {
                "user": "U03CZHR6HM0",
                "ts": "1656863189.714159"
            },
            {
                "user": "U9JHLMZB4",
                "ts": "1656927125.264659"
            },
            {
                "user": "U0128E7BEHW",
                "ts": "1656934816.004839"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "62l7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Guys a little 'off topic'.\nWhen collecting data in\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "events = trading.betting.list_events()"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "and coming as a list, I was wanting to look at the complete tree inside a each event, such as all possible objects and values delivered in "
                            },
                            {
                                "type": "text",
                                "text": "events[0]",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ".\n\nDo you happen to know any module that delivers a complete print like this to indicate me?\n\nMaybe in tests you've already used it to see what's inside each container, that's why I asked."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1656857933.145919",
        "client_msg_id": "B67F3979-466F-4C3C-ACBE-B1FFCE29C083",
        "text": "Debugger in PyCharm is good for this",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1656857877.515159",
        "parent_user_id": "U03CZHR6HM0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hLcjo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Debugger"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "in"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "PyCharm"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "is"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "good"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "for"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "this"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03CZHR6HM0",
        "type": "message",
        "ts": "1656858012.539229",
        "client_msg_id": "2cd5e24d-6ebd-4414-a508-60dee3b06719",
        "text": "I will search about PyCharm, thanks <@UBS7QANF3>!",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "b1c2a2d27548",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-04-26\/3427011754679_b1c2a2d27548a7ec94c7_72.png",
            "first_name": "Start",
            "real_name": "Start Code",
            "display_name": "Beginner",
            "team": "T4G9NBD2M",
            "name": "teststackoverflowbooy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1656857877.515159",
        "parent_user_id": "U03CZHR6HM0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "S9L1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I will search about PyCharm, thanks "
                            },
                            {
                                "type": "user",
                                "user_id": "UBS7QANF3"
                            },
                            {
                                "type": "text",
                                "text": "!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1656858015.962139",
        "client_msg_id": "AB904309-BFD4-4158-9F17-9E59C53B87C9",
        "text": "Python built in function dir() also helpful",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1656857877.515159",
        "parent_user_id": "U03CZHR6HM0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "z3y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Python "
                            },
                            {
                                "type": "text",
                                "text": "built"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "in"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "function"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "dir()"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "also"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "helpful"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03CZHR6HM0",
        "type": "message",
        "ts": "1656858217.186319",
        "client_msg_id": "6a2b7efb-f719-40c3-803b-dd617713cf01",
        "text": "<@UBS7QANF3> I tried using the pprint module with dir, but it wasn't as concise as I thought, it only delivered the first child, not the full tree, so the values themselves are not shown:\n\n``````",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "b1c2a2d27548",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-04-26\/3427011754679_b1c2a2d27548a7ec94c7_72.png",
            "first_name": "Start",
            "real_name": "Start Code",
            "display_name": "Beginner",
            "team": "T4G9NBD2M",
            "name": "teststackoverflowbooy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1656857877.515159",
        "parent_user_id": "U03CZHR6HM0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IjQZw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UBS7QANF3"
                            },
                            {
                                "type": "text",
                                "text": " I tried using the pprint module with dir, but it wasn't as concise as I thought, it only delivered the first child, not the full tree, so the values themselves are not shown:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [],
                        "border": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "U03CZHR6HM0",
        "type": "message",
        "ts": "1656858224.723069",
        "client_msg_id": "d0d6c38b-0a47-4bee-b974-d8f9f5372a52",
        "text": "['__class__',\n '__delattr__',\n '__dict__',\n '__dir__',\n '__doc__',\n '__eq__',\n '__format__',\n '__ge__',\n '__getattribute__',\n '__gt__',\n '__hash__',\n '__init__',\n '__init_subclass__',\n '__le__',\n '__lt__',\n '__module__',\n '__ne__',\n '__new__',\n '__reduce__',\n '__reduce_ex__',\n '__repr__',\n '__setattr__',\n '__sizeof__',\n '__str__',\n '__subclasshook__',\n '__weakref__',\n '_data',\n '_datetime_created',\n '_datetime_updated',\n 'elapsed_time',\n 'event',\n 'json',\n 'market_count',\n 'strip_datetime']",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "b1c2a2d27548",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-04-26\/3427011754679_b1c2a2d27548a7ec94c7_72.png",
            "first_name": "Start",
            "real_name": "Start Code",
            "display_name": "Beginner",
            "team": "T4G9NBD2M",
            "name": "teststackoverflowbooy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1656857877.515159",
        "parent_user_id": "U03CZHR6HM0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ab9g",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "['_"
                            },
                            {
                                "type": "text",
                                "text": "class",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "_',\n '_"
                            },
                            {
                                "type": "text",
                                "text": "delattr",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "_',\n '_"
                            },
                            {
                                "type": "text",
                                "text": "dict",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "_',\n '_"
                            },
                            {
                                "type": "text",
                                "text": "dir",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "_',\n '_"
                            },
                            {
                                "type": "text",
                                "text": "doc",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "_',\n '_"
                            },
                            {
                                "type": "text",
                                "text": "eq",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "_',\n '_"
                            },
                            {
                                "type": "text",
                                "text": "format",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "_',\n '_"
                            },
                            {
                                "type": "text",
                                "text": "ge",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "_',\n '_"
                            },
                            {
                                "type": "text",
                                "text": "getattribute",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "_',\n '_"
                            },
                            {
                                "type": "text",
                                "text": "gt",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "_',\n '_"
                            },
                            {
                                "type": "text",
                                "text": "hash",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "_',\n '_"
                            },
                            {
                                "type": "text",
                                "text": "init",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "_',\n '__init_subclass__',\n '_"
                            },
                            {
                                "type": "text",
                                "text": "le",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "_',\n '_"
                            },
                            {
                                "type": "text",
                                "text": "lt",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "_',\n '_"
                            },
                            {
                                "type": "text",
                                "text": "module",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "_',\n '_"
                            },
                            {
                                "type": "text",
                                "text": "ne",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "_',\n '_"
                            },
                            {
                                "type": "text",
                                "text": "new",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "_',\n '_"
                            },
                            {
                                "type": "text",
                                "text": "reduce",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "_',\n '__reduce_ex__',\n '_"
                            },
                            {
                                "type": "text",
                                "text": "repr",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "_',\n '_"
                            },
                            {
                                "type": "text",
                                "text": "setattr",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "_',\n '_"
                            },
                            {
                                "type": "text",
                                "text": "sizeof",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "_',\n '_"
                            },
                            {
                                "type": "text",
                                "text": "str",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "_',\n '_"
                            },
                            {
                                "type": "text",
                                "text": "subclasshook",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "_',\n '_"
                            },
                            {
                                "type": "text",
                                "text": "weakref",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "_',\n '_data',\n '_datetime_created',\n '_datetime_updated',\n 'elapsed_time',\n 'event',\n 'json',\n 'market_count',\n 'strip_datetime']"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBS7QANF3",
        "type": "message",
        "ts": "1656858321.734599",
        "client_msg_id": "820685BA-4840-4741-A0FB-5DBD961C2C2C",
        "text": "Yeah it's helpful but not the complete solution. It tells you all of the properties and methods on an object but you still need to access them to get the values ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gaaf844a4a90",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/eaaf844a4a905431d83430e563b077aa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Maurice Berk",
            "display_name": "Mo",
            "team": "T4G9NBD2M",
            "name": "maurice",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1656857877.515159",
        "parent_user_id": "U03CZHR6HM0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "A3\/09",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah"
                            },
                            {
                                "type": "text",
                                "text": " it's "
                            },
                            {
                                "type": "text",
                                "text": "helpful"
                            },
                            {
                                "type": "text",
                                "text": " but "
                            },
                            {
                                "type": "text",
                                "text": "not"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "the"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "complete"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "solution. It"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "tells"
                            },
                            {
                                "type": "text",
                                "text": " you "
                            },
                            {
                                "type": "text",
                                "text": "all"
                            },
                            {
                                "type": "text",
                                "text": " of "
                            },
                            {
                                "type": "text",
                                "text": "the"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "properties"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "and"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "methods"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "on"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "an"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "object"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "but"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "you"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "still"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "need"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "to"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "access"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "them"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "to"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "get"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "the"
                            },
                            {
                                "type": "text",
                                "text": " values "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0128E7BEHW",
        "type": "message",
        "ts": "1656858562.546019",
        "edited": {
            "user": "U0128E7BEHW",
            "ts": "1656858629.000000"
        },
        "client_msg_id": "5c5ece03-8f9e-4254-8db3-29f6d9dd53d8",
        "text": "You probably want to write a simply recursive pretty printer. Not tested, just written on my phone now:\n\ndef pprint(obj, level=1):\n    print((\"    \"*level)+obj)\n    for k in dir(obj):\n        if not k.startswith(\"_\"):\n             pprint(getattr(obj,k), level+1)",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb57a2bdd15a",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b57a2bdd15acccdb845ce257f38940cc.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Dave",
            "real_name": "Dave R",
            "display_name": "Dave",
            "team": "T4G9NBD2M",
            "name": "d7m",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1656857877.515159",
        "parent_user_id": "U03CZHR6HM0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rR3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You probably want to write a simply recursive pretty printer. Not tested, just written on my phone now:\n\ndef pprint(obj, level=1):\n    print((\"    \"*level)+obj)\n    for k in dir(obj):\n        if not k.startswith(\"_\"):\n             pprint(getattr(obj,k), level+1)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1656858941.661059",
        "client_msg_id": "795A3945-A043-4AE4-9267-5C2B549CD387",
        "text": "Can you copy the logging setup in the examples and it should give you a better idea of what is going on ",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1656842085.796539",
        "parent_user_id": "U02J5GMLJF6",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fCsL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Can"
                            },
                            {
                                "type": "text",
                                "text": " you "
                            },
                            {
                                "type": "text",
                                "text": "copy"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "the"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "logging"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "setup"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "in"
                            },
                            {
                                "type": "text",
                                "text": " the "
                            },
                            {
                                "type": "text",
                                "text": "examples"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "and"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "it"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "should"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "give"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "you"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "a"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "better"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "idea"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "of"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "what"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "is"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "going"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "on"
                            },
                            {
                                "type": "text",
                                "text": " "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02J5GMLJF6",
        "type": "message",
        "ts": "1656859933.966519",
        "client_msg_id": "41e61078-3ceb-459e-8986-d28724a90d8d",
        "text": "Sure - i'll let it run and see if I can pick up anything different.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "6ef93b8cc2d9",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-18\/2615366655282_6ef93b8cc2d9a201b6b8_72.png",
            "first_name": "mon",
            "real_name": "mon mon",
            "display_name": "mon mon",
            "team": "T4G9NBD2M",
            "name": "monmonmon.mails",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1656842085.796539",
        "parent_user_id": "U02J5GMLJF6",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "E50w\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sure - i'll let it run and see if I can pick up anything different."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03CZHR6HM0",
        "type": "message",
        "ts": "1656863142.468299",
        "client_msg_id": "21a2b866-709f-4183-b7d6-5d13fa0003f0",
        "text": "<@U0128E7BEHW> i do like this for all values:\n\n```def pretty_print(clas, indent=0):\n    print(' ' * indent +  type(clas).__name__ +  ':')\n    indent += 4\n    for k,v in clas.__dict__.items():\n        if '__dict__' in dir(v):\n            pretty_print(v,indent)\n        else:\n            print(' ' * indent +  k + ': ' + str(v))```",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "b1c2a2d27548",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-04-26\/3427011754679_b1c2a2d27548a7ec94c7_72.png",
            "first_name": "Start",
            "real_name": "Start Code",
            "display_name": "Beginner",
            "team": "T4G9NBD2M",
            "name": "teststackoverflowbooy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1656857877.515159",
        "parent_user_id": "U03CZHR6HM0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GRjbi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U0128E7BEHW"
                            },
                            {
                                "type": "text",
                                "text": " i do like this for all values:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "def pretty_print(clas, indent=0):\n    print(' ' * indent +  type(clas).__name__ +  ':')\n    indent += 4\n    for k,v in clas.__dict__.items():\n        if '__dict__' in dir(v):\n            pretty_print(v,indent)\n        else:\n            print(' ' * indent +  k + ': ' + str(v))"
                            }
                        ],
                        "border": 0
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0128E7BEHW"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U03CZHR6HM0",
        "type": "message",
        "ts": "1656863189.714159",
        "client_msg_id": "6e9b3bdb-c388-4c0d-91fb-1f857523b4a6",
        "text": "See:\n\n```EventResult:\n    elapsed_time: 0.4274740219116211\n    _datetime_created: 2022-07-03 15:44:45.691024\n    _datetime_updated: 2022-07-03 15:44:45.691024\n    _data: {'event': {'id': '31566818', 'name': 'BFA Vilnius v FK Banga II', 'countryCode': 'LT', 'timezone': 'GMT', 'openDate': '2022-07-03T13:58:57.000Z'}, 'marketCount': 1}\n    market_count: 1\n    Event:\n        id: 31566818\n        open_date: 2022-07-03 13:58:57\n        time_zone: GMT\n        country_code: LT\n        name: BFA Vilnius v FK Banga II\n        venue: None```",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "b1c2a2d27548",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-04-26\/3427011754679_b1c2a2d27548a7ec94c7_72.png",
            "first_name": "Start",
            "real_name": "Start Code",
            "display_name": "Beginner",
            "team": "T4G9NBD2M",
            "name": "teststackoverflowbooy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1656857877.515159",
        "parent_user_id": "U03CZHR6HM0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ByGi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "See:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "EventResult:\n    elapsed_time: 0.4274740219116211\n    _datetime_created: 2022-07-03 15:44:45.691024\n    _datetime_updated: 2022-07-03 15:44:45.691024\n    _data: {'event': {'id': '31566818', 'name': 'BFA Vilnius v FK Banga II', 'countryCode': 'LT', 'timezone': 'GMT', 'openDate': '2022-07-03T13:58:57.000Z'}, 'marketCount': 1}\n    market_count: 1\n    Event:\n        id: 31566818\n        open_date: 2022-07-03 13:58:57\n        time_zone: GMT\n        country_code: LT\n        name: BFA Vilnius v FK Banga II\n        venue: None"
                            }
                        ],
                        "border": 0
                    }
                ]
            }
        ]
    }
]