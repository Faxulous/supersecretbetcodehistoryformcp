[
    {
        "user": "U05L8PZD2FM",
        "type": "message",
        "ts": "1693728411.841759",
        "edited": {
            "user": "U05L8PZD2FM",
            "ts": "1693728989.000000"
        },
        "client_msg_id": "ebc335f9-4d8f-4ac6-840b-65f0fd6fb6ac",
        "text": "<@U01PJ5YMFBJ> There are two different things going on.\n\nIf you are trying to learn a strategy or parameters for a strategy I would use ML on real back tests running real execution logic with simulated exchanges rather than try and regress a dependent 'win' or 'profit' variable against some independent vars in some tabulated data when doing the type of profit training you are talking about.\n\nIf you are trying to create a model that produces a win probability (that will later be used as a strategy input\/signal) from some independent vars then simple logistic regression of tabulated data is fine.\n\nIf you want to go full deep learning on this then you can use ML to train the lot at once, i.e. all parameters of all signals plus all hyper\/execution parameters, with real execution logic in a simulated exchange. But this does require fast software and lots of hardware.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb417ed434bb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b417ed434bbea199d58a9b4bd0affeb9.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0003-72.png",
            "first_name": "Joe",
            "real_name": "Joe",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "stapleton_joe",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1693688785.006089",
        "parent_user_id": "U01PJ5YMFBJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "94msv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U01PJ5YMFBJ"
                            },
                            {
                                "type": "text",
                                "text": " There are two different things going on.\n\nIf you are trying to learn a strategy or parameters for a strategy I would use ML on real back tests running real execution logic with simulated exchanges rather than try and regress a dependent 'win' or 'profit' variable against some independent vars in some tabulated data when doing the type of profit training you are talking about.\n\nIf you are trying to create a model that produces a win probability (that will later be used as a strategy input\/signal) from some independent vars then simple logistic regression of tabulated data is fine.\n\nIf you want to go full deep learning on this then you can use ML to train the lot at once, i.e. all parameters of all signals plus all hyper\/execution parameters, with real execution logic in a simulated exchange. But this does require fast software and lots of hardware."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "I was just looking at my code..\nI dont know if this helps Andy (or hinders :grinning:) but these are the building blocks I used:\n\n```# Load your dataset\n\n# Histogram and Density Plot for 'X'\n\n# Correlation Matrix considering only numeric columns\n\n# Take a 100% random sample of the dataframe (Or reduced value to save time etc)\n\n# Selecting features and target\n\n# Handling any NaN values\n\n# Splitting the data\n\n# Training Random Forest model\n\n# Making predictions\n\n# Calculating Random Forest Accuracy\n\n# Test set predictions and accuracy\n\n# Feature Importance\n\n# Confusion Matrix\n\n# Initialize profit\/loss tracking for all three strategies\n\n# Lists to store profit\/loss over bets\n\n# Simple, SimpleSP and ML strategies\n\n    # Simple Strategy\n\n    # SimpleX Strategy\n\n    # ML Strategy\n\n# Plotting the Profit\/Loss graph```\nRe the matching rate as Liam mentioned, I know from real bets that I have a matching rate of 52% so i factored that in\nHope that helps? (Conscious Im new to this sort of thing, I hope Im not sending you down the wrong path, so Joe is worth listening to rather than me)\n(PS I found the Correlation matrix worth looking at, its starts to get the old grey matter moving :grinning:)",
        "files": [
            {
                "id": "F05QB8TS0MD",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "UQL0QDEKA",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kKw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I was just looking at my code..\nI dont know if this helps Andy (or hinders "
                            },
                            {
                                "type": "emoji",
                                "name": "grinning",
                                "unicode": "1f600"
                            },
                            {
                                "type": "text",
                                "text": ") but these are the building blocks I used:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "# Load your dataset\n\n# Histogram and Density Plot for 'X'\n\n# Correlation Matrix considering only numeric columns\n\n# Take a 100% random sample of the dataframe (Or reduced value to save time etc)\n\n# Selecting features and target\n\n# Handling any NaN values\n\n# Splitting the data\n\n# Training Random Forest model\n\n# Making predictions\n\n# Calculating Random Forest Accuracy\n\n# Test set predictions and accuracy\n\n# Feature Importance\n\n# Confusion Matrix\n\n# Initialize profit\/loss tracking for all three strategies\n\n# Lists to store profit\/loss over bets\n\n# Simple, SimpleSP and ML strategies\n\n    # Simple Strategy\n\n    # SimpleX Strategy\n\n    # ML Strategy\n\n# Plotting the Profit\/Loss graph"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Re the matching rate as Liam mentioned, I know from real bets that I have a matching rate of 52% so i factored that in\nHope that helps? (Conscious Im new to this sort of thing, I hope Im not sending you down the wrong path, so Joe is worth listening to rather than me)\n(PS I found the Correlation matrix worth looking at, its starts to get the old grey matter moving "
                            },
                            {
                                "type": "emoji",
                                "name": "grinning",
                                "unicode": "1f600"
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1693732784.973599",
        "client_msg_id": "2ab0be3c-f89d-462c-b6a9-ea7ea670529e",
        "thread_ts": "1693688785.006089",
        "parent_user_id": "U01PJ5YMFBJ"
    },
    {
        "user": "U01PJ5YMFBJ",
        "type": "message",
        "ts": "1693735494.454889",
        "client_msg_id": "498e322b-e595-4242-8e73-3add21fec897",
        "text": "Thanks <@UQL0QDEKA> <@U05L8PZD2FM> <@U4H19D1D2>\nYes, I have merged the race winner for W\/L, and thus PnL.\nSo I think where I want to head, is I have a rough \"Idea\", but don't really know what variables might help make it more profitable (assuming it is to start with!)... So I was doing an initial simple baseline to understand the process... but then not sure I could equate having many many thousands of bets how you would use that in reality or refine it.\nYour step by step is useful thanks <@UQL0QDEKA> i've done some of the first few...\n<@U05L8PZD2FM> I think I probably want to implement the basic Flumine strategy for my \"idea\", even though it maybe rough and ready and probably make it not too selective, and possibly not very profitable (or -EV)! Then run that through the Flumine simulator capturing CSV data for the bets, and to refine using ML what the dependent features are that would improve it?\nI don't think going down the brute force, lots of hardware route sounds right for me.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g819c7f591cc",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/819c7f591cc888486f19b3f2f49f2011.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0014-72.png",
            "first_name": "AndyL",
            "real_name": "AndyL",
            "display_name": "AndyL",
            "team": "T4G9NBD2M",
            "name": "andrew_m_leonard",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1693688785.006089",
        "parent_user_id": "U01PJ5YMFBJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FOLL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks "
                            },
                            {
                                "type": "user",
                                "user_id": "UQL0QDEKA"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "U05L8PZD2FM"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "U4H19D1D2"
                            },
                            {
                                "type": "text",
                                "text": "\nYes, I have merged the race winner for W\/L, and thus PnL.\nSo I think where I want to head, is I have a rough \"Idea\", but don't really know what variables might help make it more profitable (assuming it is to start with!)... So I was doing an initial simple baseline to understand the process... but then not sure I could equate having many many thousands of bets how you would use that in reality or refine it.\nYour step by step is useful thanks "
                            },
                            {
                                "type": "user",
                                "user_id": "UQL0QDEKA"
                            },
                            {
                                "type": "text",
                                "text": " i've done some of the first few...\n"
                            },
                            {
                                "type": "user",
                                "user_id": "U05L8PZD2FM"
                            },
                            {
                                "type": "text",
                                "text": " I think I probably want to implement the basic Flumine strategy for my \"idea\", even though it maybe rough and ready and probably make it not too selective, and possibly not very profitable (or -EV)! Then run that through the Flumine simulator capturing CSV data for the bets, and to refine using ML what the dependent features are that would improve it?\nI don't think going down the brute force, lots of hardware route sounds right for me."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05L8PZD2FM",
        "type": "message",
        "ts": "1693737249.085729",
        "client_msg_id": "ecbada9d-6324-44f8-a573-1a573349a45e",
        "text": "<@U01PJ5YMFBJ> possibly it depends how simple your strategy is, i've definitely improved things by putting an ML optimised filter on the output of existing strategies which is I think what you are suggesting. The problem comes if the strategy is adaptive \/ contextual placing multiple bets into each market contingent on previous bets placed \/ matched. I think most strategies are really like this right? Depend on real world info, market data, AND current position. You can't optimise such a strategy by filtering simple tabulated output data\/bets since if you remove one bet then in reality your strategy wouldn't go onto place some others which you may want to keep.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb417ed434bb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b417ed434bbea199d58a9b4bd0affeb9.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0003-72.png",
            "first_name": "Joe",
            "real_name": "Joe",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "stapleton_joe",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1693688785.006089",
        "parent_user_id": "U01PJ5YMFBJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KSl3F",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U01PJ5YMFBJ"
                            },
                            {
                                "type": "text",
                                "text": " possibly it depends how simple your strategy is, i've definitely improved things by putting an ML optimised filter on the output of existing strategies which is I think what you are suggesting. The problem comes if the strategy is adaptive \/ contextual placing multiple bets into each market contingent on previous bets placed \/ matched. I think most strategies are really like this right? Depend on real world info, market data, AND current position. You can't optimise such a strategy by filtering simple tabulated output data\/bets since if you remove one bet then in reality your strategy wouldn't go onto place some others which you may want to keep."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01PJ5YMFBJ",
        "type": "message",
        "ts": "1693737598.649169",
        "client_msg_id": "afa829ba-65a9-4581-9589-6a66137d3a13",
        "text": "<@U05L8PZD2FM> yes, that's exactly the problem I was thinking about, trying to equate ML with a real world strategy, as you say it typically adapts to what us matched, and adverse selection is probably hard to model..?\nI think I'll head down the optimization route, as i can see through my current backtesting workflow im probably not being very good at optimising \nThanks",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g819c7f591cc",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/819c7f591cc888486f19b3f2f49f2011.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0014-72.png",
            "first_name": "AndyL",
            "real_name": "AndyL",
            "display_name": "AndyL",
            "team": "T4G9NBD2M",
            "name": "andrew_m_leonard",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1693688785.006089",
        "parent_user_id": "U01PJ5YMFBJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "riu4G",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U05L8PZD2FM"
                            },
                            {
                                "type": "text",
                                "text": " yes, that's exactly the problem I was thinking about, trying to equate ML with a real world strategy, as you say it typically adapts to what us matched, and adverse selection is probably hard to model..?\nI think I'll head down the optimization route, as i can see through my current backtesting workflow im probably not being very good at optimising \nThanks"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05L8PZD2FM",
        "type": "message",
        "ts": "1693737750.060279",
        "client_msg_id": "95063f7d-356b-414b-85bf-590918fddb99",
        "text": "<@U01PJ5YMFBJ> Adverse selection is just paying others to find weaknesses for you :wink:",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb417ed434bb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b417ed434bbea199d58a9b4bd0affeb9.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0003-72.png",
            "first_name": "Joe",
            "real_name": "Joe",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "stapleton_joe",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1693688785.006089",
        "parent_user_id": "U01PJ5YMFBJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nVK2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U01PJ5YMFBJ"
                            },
                            {
                                "type": "text",
                                "text": " Adverse selection is just paying others to find weaknesses for you "
                            },
                            {
                                "type": "emoji",
                                "name": "wink",
                                "unicode": "1f609"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01PJ5YMFBJ",
        "type": "message",
        "ts": "1693737799.164429",
        "client_msg_id": "4547a8d9-da42-44d5-a84e-47bfb41cf939",
        "text": "Ah yes, that's definitely true!",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g819c7f591cc",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/819c7f591cc888486f19b3f2f49f2011.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0014-72.png",
            "first_name": "AndyL",
            "real_name": "AndyL",
            "display_name": "AndyL",
            "team": "T4G9NBD2M",
            "name": "andrew_m_leonard",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1693688785.006089",
        "parent_user_id": "U01PJ5YMFBJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "J\/T",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah yes, that's definitely true!"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]