[
    {
        "user": "U06DURYFXK7",
        "type": "message",
        "ts": "1706107486.062019",
        "client_msg_id": "5cbeedbc-5100-49a7-b59d-c6cf166770be",
        "text": "You helped me yesterday so maybe I can help back :stuck_out_tongue:\nYou could use CalibratedClassifierCV from sklearn.calibration, You use your original model eg XGBoost as the base classifier. Plot your calibration curve before and after.\n```def show_calib_curve(x, y, bins=20):\n    cal_y, cal_x = calibration_curve(x, y, n_bins=bins)\n    plt.figure(figsize=(12, 9))\n    plt.plot(cal_x, cal_y, marker='o', linewidth=1)\n    plt.plot([0, 1], [0, 1], '--', color='gray')\n    plt.title(\"Calibration curve\");```\nI also like to plot my strike rate against SP strike rate to see how close it looks.\n`show_strike_rate(test_data['prob_LogisticRegression'], test_data['StartPrice_probability'])`\n```def show_strike_rate(x, y, bins=100):\n    sns.displot(data=[x,y], kind=\"hist\",bins=bins, height=7, aspect=2)\n    plt.title('StartPrice vs LogisticRegression probabilities distribution')\n    plt.xlabel('Probability')\n    plt.show()```\nApologies if i misunderstood what you are after :confused:",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "e397ac707759",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-01-15\/6473811233506_e397ac707759c168298e_72.png",
            "first_name": "Jared",
            "real_name": "Jared King",
            "display_name": "Jared King",
            "team": "T4G9NBD2M",
            "name": "jaristyking",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1706000289.243149",
        "parent_user_id": "U4H19D1D2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EEP+g",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You helped me yesterday so maybe I can help back "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue",
                                "unicode": "1f61b"
                            },
                            {
                                "type": "text",
                                "text": "\nYou could use CalibratedClassifierCV from sklearn.calibration, You use your original model eg XGBoost as the base classifier. Plot your calibration curve before and after.\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "def show_calib_curve(x, y, bins=20):\n    cal_y, cal_x = calibration_curve(x, y, n_bins=bins)\n    plt.figure(figsize=(12, 9))\n    plt.plot(cal_x, cal_y, marker='o', linewidth=1)\n    plt.plot([0, 1], [0, 1], '--', color='gray')\n    plt.title(\"Calibration curve\");"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I also like to plot my strike rate against SP strike rate to see how close it looks.\n"
                            },
                            {
                                "type": "text",
                                "text": "show_strike_rate(test_data['prob_LogisticRegression'], test_data['StartPrice_probability'])",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "def show_strike_rate(x, y, bins=100):\n    sns.displot(data=[x,y], kind=\"hist\",bins=bins, height=7, aspect=2)\n    plt.title('StartPrice vs LogisticRegression probabilities distribution')\n    plt.xlabel('Probability')\n    plt.show()"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Apologies if i misunderstood what you are after "
                            },
                            {
                                "type": "emoji",
                                "name": "confused",
                                "unicode": "1f615"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U4H19D1D2"
                ],
                "count": 1
            }
        ]
    }
]