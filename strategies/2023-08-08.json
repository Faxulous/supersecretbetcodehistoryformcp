[
    {
        "user": "U4H19D1D2",
        "type": "message",
        "ts": "1691480085.604849",
        "client_msg_id": "e22c9221-9796-4ac9-9abd-29dcfe65d007",
        "text": "*Day 2*\n\nBack to basics for me, the plan is to get a better understanding of how ML works when it comes to applying models to problems. Looking at going through the google ML unless anyone knows of anything better?\n\n<https:\/\/developers.google.com\/machine-learning>",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "137c5a3ef323",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-15\/6819395173841_137c5a3ef323f1944a1a_72.png",
            "first_name": "liam",
            "real_name": "liam",
            "display_name": "liam",
            "team": "T4G9NBD2M",
            "name": "liam",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1691480085.604849",
        "reply_count": 3,
        "reply_users_count": 3,
        "latest_reply": "1691926078.429219",
        "reply_users": [
            "U02QDJCK3NW",
            "U02RN7YDRQ9",
            "U04AD6RAGGH"
        ],
        "replies": [
            {
                "user": "U02QDJCK3NW",
                "ts": "1691483448.387859"
            },
            {
                "user": "U02RN7YDRQ9",
                "ts": "1691485898.713349"
            },
            {
                "user": "U04AD6RAGGH",
                "ts": "1691926078.429219"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1691926078.429219",
        "attachments": [
            {
                "image_url": "https:\/\/www.gstatic.com\/devrel-devsite\/prod\/ved0354e60ebc2a2191daafd73d0c0dc1e5fda3e6da9d7c8803612e4e80917ef9\/developers\/images\/opengraph\/white.png",
                "image_width": 1200,
                "image_height": 675,
                "image_bytes": 16299,
                "from_url": "https:\/\/developers.google.com\/machine-learning",
                "service_icon": "https:\/\/www.gstatic.com\/devrel-devsite\/prod\/ved0354e60ebc2a2191daafd73d0c0dc1e5fda3e6da9d7c8803612e4e80917ef9\/developers\/images\/touchicon-180-new.png",
                "id": 1,
                "original_url": "https:\/\/developers.google.com\/machine-learning",
                "fallback": "Google for Developers: Machine Learning  |  Google for Developers",
                "text": "Educational resources for machine learning.",
                "title": "Machine Learning  |  Google for Developers",
                "title_link": "https:\/\/developers.google.com\/machine-learning",
                "service_name": "Google for Developers"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XsLai",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Day 2",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\nBack to basics for me, the plan is to get a better understanding of how ML works when it comes to applying models to problems. Looking at going through the google ML unless anyone knows of anything better?\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/developers.google.com\/machine-learning"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05L8PZD2FM",
        "type": "message",
        "ts": "1691481266.576819",
        "client_msg_id": "9e7e7bf7-341a-4d1b-b3b7-27e3eafbd047",
        "text": "Try to get an understanding of whether you need simple supervised learning, i.e. you have labelled data, or whether you are going full in on unsupervised learning using simply your parameterised branching strategy and a cost function (like -1 x profit). There is very little useful text on the latter.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb417ed434bb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b417ed434bbea199d58a9b4bd0affeb9.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0003-72.png",
            "first_name": "Joe",
            "real_name": "Joe",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "stapleton_joe",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yI5k",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Try to get an understanding of whether you need simple supervised learning, i.e. you have labelled data, or whether you are going full in on unsupervised learning using simply your parameterised branching strategy and a cost function (like -1 x profit). There is very little useful text on the latter."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U4H19D1D2"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U04NWADNCFR",
        "type": "message",
        "ts": "1691482456.454669",
        "client_msg_id": "37fcb2c8-bfc0-4685-aac5-b1b627e52264",
        "text": "Another consideration is whether the goal is to learn ML or get a good solution. Using an Auto-ML to generate features and models for you will give a better result than most people could do themselves,",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g3c4e33a28db",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3c4e33a28dbfc1fe70799f8e243bf305.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0026-72.png",
            "first_name": "Derek",
            "real_name": "Derek C",
            "display_name": "Derek C",
            "team": "T4G9NBD2M",
            "name": "dataexmachinazzzzz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dWe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Another consideration is whether the goal is to learn ML or get a good solution. Using an Auto-ML to generate features and models for you will give a better result than most people could do themselves,"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U4H19D1D2"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02QDJCK3NW",
        "type": "message",
        "ts": "1691483448.387859",
        "client_msg_id": "d5dc57cd-369d-4c90-9cf5-aa3afc0a6336",
        "text": "I find this website very informative; you might find it useful...\n<https:\/\/www.kaggle.com\/>",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "f9b3fec110b3",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-12-11\/2822937230854_f9b3fec110b36ee68469_72.jpg",
            "first_name": "Nacho",
            "real_name": "Nacho Uve",
            "display_name": "Nacho Uve",
            "team": "T4G9NBD2M",
            "name": "nachouve",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1691480085.604849",
        "parent_user_id": "U4H19D1D2",
        "attachments": [
            {
                "from_url": "https:\/\/www.kaggle.com\/",
                "service_icon": "https:\/\/www.kaggle.com\/favicon.ico",
                "id": 1,
                "original_url": "https:\/\/www.kaggle.com\/",
                "fallback": "Kaggle: Your Machine Learning and Data Science Community",
                "text": "Kaggle is the world’s largest data science community with powerful tools and resources to help you achieve your data science goals.",
                "title": "Kaggle: Your Machine Learning and Data Science Community",
                "title_link": "https:\/\/www.kaggle.com\/",
                "service_name": "kaggle.com"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XRn+X",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I find this website very informative; you might find it useful...\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.kaggle.com\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U4H19D1D2"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02RN7YDRQ9",
        "type": "message",
        "ts": "1691485898.713349",
        "client_msg_id": "f6a096c5-a830-43d5-9d6c-d388f47a6a64",
        "text": "I've used Google's tensorflow with python -  flexible for building \/ managing features - works well and now the docs appear sorted should be easier getting started. Any learning you do will transfer easily to other packages. If you are familiar with MS Visual Studio then their <http:\/\/ML.NET|ML.NET> add on is worth looking at - give it a csv then select fields to use and decide if feature or category is all you do - it then tries lots of different models to offer the best one. Seriously lacks ability to fine tune easily as in TF or SK but quick way to assess possibilities of datasets \/ models.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "ge46f1f8b708",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e46f1f8b708a630e3191de7b2c42b1d1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "edblock",
            "real_name": "edblock",
            "display_name": "foxwood",
            "team": "T4G9NBD2M",
            "name": "eanb",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1691480085.604849",
        "parent_user_id": "U4H19D1D2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "h2EiF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've used Google's tensorflow with python -  flexible for building \/ managing features - works well and now the docs appear sorted should be easier getting started. Any learning you do will transfer easily to other packages. If you are familiar with MS Visual Studio then their "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/ML.NET",
                                "text": "ML.NET"
                            },
                            {
                                "type": "text",
                                "text": " add on is worth looking at - give it a csv then select fields to use and decide if feature or category is all you do - it then tries lots of different models to offer the best one. Seriously lacks ability to fine tune easily as in TF or SK but quick way to assess possibilities of datasets \/ models."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U4H19D1D2"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U01B8031PM1",
        "type": "message",
        "ts": "1691488881.893829",
        "client_msg_id": "c0b1d627-fbbd-4113-828c-7c8be0748332",
        "text": "<@U05L8PZD2FM> seems to be operating at level 10. Both his comments re gradient optimizers get stuck as loss or pnl landscape is hardly smooth with respect to parameters and using surrogate loss functions (brier or whatever you want that has nice differentiable properties) are totally valid. More headache inducing reading this for <@U4H19D1D2> <https:\/\/cesa-bianchi.di.unimi.it\/MSA\/Notes\/surrogate.pdf>",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "g6e482a0e41b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6e482a0e41b232f48d801454006dfa56.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "river_shah",
            "real_name": "river_shah",
            "display_name": "river_shah",
            "team": "T4G9NBD2M",
            "name": "ansar.sa",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1691394364.317519",
        "parent_user_id": "U4H19D1D2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7eD1A",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U05L8PZD2FM"
                            },
                            {
                                "type": "text",
                                "text": " seems to be operating at level 10. Both his comments re gradient optimizers get stuck as loss or pnl landscape is hardly smooth with respect to parameters and using surrogate loss functions (brier or whatever you want that has nice differentiable properties) are totally valid. More headache inducing reading this for "
                            },
                            {
                                "type": "user",
                                "user_id": "U4H19D1D2"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/cesa-bianchi.di.unimi.it\/MSA\/Notes\/surrogate.pdf"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05L8PZD2FM",
        "type": "message",
        "ts": "1691494063.576319",
        "client_msg_id": "b0070e71-fe0d-4d77-8c84-d3e12b9177ce",
        "text": "<@U01B8031PM1> very generous of you :wink: I have been doing this for a long time, since before all these techniques were given cool names and turned into a pseudo science",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb417ed434bb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b417ed434bbea199d58a9b4bd0affeb9.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0003-72.png",
            "first_name": "Joe",
            "real_name": "Joe",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "stapleton_joe",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1691394364.317519",
        "parent_user_id": "U4H19D1D2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6UG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U01B8031PM1"
                            },
                            {
                                "type": "text",
                                "text": " very generous of you "
                            },
                            {
                                "type": "emoji",
                                "name": "wink",
                                "unicode": "1f609"
                            },
                            {
                                "type": "text",
                                "text": " I have been doing this for a long time, since before all these techniques were given cool names and turned into a pseudo science"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUE6E1LA1",
        "type": "message",
        "ts": "1691494107.721089",
        "client_msg_id": "8fce97c2-79e8-47a7-99b2-3b7acb22a245",
        "text": "ChatGPT not cracket global optimisation problems yet then? What a scam. On a serious not though, as someone who has studied nonlinear optimisation but knows close to nothing about ML, are specific optimisation methods locked into each of these ML approaches? The entire field is a glut of terminology which I find very confusing and probably just relabelling stuff I've studied in the past. Can any of the experts here suggest a good intro to ML tailored to someone with classical inference and nonlinear optimisation background? I feel that if I could muster a bit of enthusiasm for ML via a decent entry text (rather than a python how to guide) it would be beneficial.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf53cae45edd",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f53cae45edd7f7b67bbe98819597612e.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "D C",
            "display_name": "D C",
            "team": "T4G9NBD2M",
            "name": "oddsvantage",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1691394364.317519",
        "parent_user_id": "U4H19D1D2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "obRuA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "ChatGPT not cracket global optimisation problems yet then? What a scam. On a serious not though, as someone who has studied nonlinear optimisation but knows close to nothing about ML, are specific optimisation methods locked into each of these ML approaches? The entire field is a glut of terminology which I find very confusing and probably just relabelling stuff I've studied in the past. Can any of the experts here suggest a good intro to ML tailored to someone with classical inference and nonlinear optimisation background? I feel that if I could muster a bit of enthusiasm for ML via a decent entry text (rather than a python how to guide) it would be beneficial."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05L8PZD2FM",
        "type": "message",
        "ts": "1691495696.759679",
        "client_msg_id": "db9a950c-8180-496c-ae22-fc04ed8bead1",
        "text": "<@UUE6E1LA1> if you mean non-linear programming as a cousin of linear-programming (simplex) with constraints then there are some similarities between them and back propagation training network weights for labelled data (e.g. for classification). If you have coded and watched simplex pivoting then you'd see the walk looks similar albeit the mechanism is entirely different. These all use the mathematical properties of at least some part of the function being optimised to navigate to local optima (global in the case of a simplex).\nIf the thing you are trying to optimise is not a differentiable function (say it is a bunch of branching stateful procedural code and data that when run with some parameters produces some cost) then you are into the murky world of metaheuristic search and unsupervised \/ reinforcement learning. You wont find much in the way of satisfactory justification for why these techniques yield decent results nor how to stabalise them so they don't get stuck in dead ends, or massively overfit (backing brown dogs from trap 3 on Tuesday mornings yields 1000% ROI).",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb417ed434bb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b417ed434bbea199d58a9b4bd0affeb9.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0003-72.png",
            "first_name": "Joe",
            "real_name": "Joe",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "stapleton_joe",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1691394364.317519",
        "parent_user_id": "U4H19D1D2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gl2fo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UUE6E1LA1"
                            },
                            {
                                "type": "text",
                                "text": " if you mean non-linear programming as a cousin of linear-programming (simplex) with constraints then there are some similarities between them and back propagation training network weights for labelled data (e.g. for classification). If you have coded and watched simplex pivoting then you'd see the walk looks similar albeit the mechanism is entirely different. These all use the mathematical properties of at least some part of the function being optimised to navigate to local optima (global in the case of a simplex).\nIf the thing you are trying to optimise is not a differentiable function (say it is a bunch of branching stateful procedural code and data that when run with some parameters produces some cost) then you are into the murky world of metaheuristic search and unsupervised \/ reinforcement learning. You wont find much in the way of satisfactory justification for why these techniques yield decent results nor how to stabalise them so they don't get stuck in dead ends, or massively overfit (backing brown dogs from trap 3 on Tuesday mornings yields 1000% ROI)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUE6E1LA1",
        "type": "message",
        "ts": "1691497343.304799",
        "client_msg_id": "60657a7e-042a-47e6-96bf-b4126988d3ae",
        "text": "<@U05L8PZD2FM> I meant more like does \"technique X\" (some ML algo that the world is currently excited about - tailored specifically to solve problems of type X) involve some optimisation step that uses a specific algorithm (Newton\/Gauss-Newton\/Levenberg-Marquardt etc) or is it left down to the user to choose the appropriate optimisation technique out of several choices. I don't want to pollute this thread so maybe if you had a decent suggestion for a good text you could DM it to me?",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gf53cae45edd",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f53cae45edd7f7b67bbe98819597612e.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "D C",
            "display_name": "D C",
            "team": "T4G9NBD2M",
            "name": "oddsvantage",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1691394364.317519",
        "parent_user_id": "U4H19D1D2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eojCJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U05L8PZD2FM"
                            },
                            {
                                "type": "text",
                                "text": " I meant more like does \"technique X\" (some ML algo that the world is currently excited about - tailored specifically to solve problems of type X) involve some optimisation step that uses a specific algorithm (Newton\/Gauss-Newton\/Levenberg-Marquardt etc) or is it left down to the user to choose the appropriate optimisation technique out of several choices. I don't want to pollute this thread so maybe if you had a decent suggestion for a good text you could DM it to me?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05L8PZD2FM",
        "type": "message",
        "ts": "1691499809.200219",
        "client_msg_id": "88fc39ac-6c6d-4eea-a9d7-e490b4fcfff5",
        "text": "<@UUE6E1LA1> I don't have any papers I'd recommend.\nIf you are doing NN classification with back propagation then you are just using the chain rule of derivatives to calculate the changes to the network weights to minimise total network error, the derivatives being those of the activation functions in your nodes and the learning rate basically how far down the slope you want to step. Typically you would choose the activation functions only.\nIf you are doing decision trees (boosted and\/or ensemble \/ RF) then you splitting based on the most effective split point in the most effective dimension, usually assuming a linear gradient wrt that dimension.\nIf you are doing metaheuristic search then these are usually based on a pseudo biological explanation, like genetic crossing and mutation in populations, or the swarming nature of insects around some energy source, but all really boil down to guided brute force, these algos don't bear any resemblance to anything mathematical in the underlying system being optimised.\n\nI think the problem you are having getting started is that every single non-paper based method of optimising anything has fallen under the umbrella term of ML, mainly because it enables the fading coding\/developer tech industry to pivot to a post-coding 'data science' industry, this makes is really difficult to discuss in general terms.\n\nIf I was getting started today I would start with simple NN classifier, read up on it and code a network solver.\nIf you wanted to look at something more unsupervised then someone has decided to name a fairly general method 'Q-Learning', look this up.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "gb417ed434bb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b417ed434bbea199d58a9b4bd0affeb9.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0003-72.png",
            "first_name": "Joe",
            "real_name": "Joe",
            "display_name": "",
            "team": "T4G9NBD2M",
            "name": "stapleton_joe",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1691394364.317519",
        "parent_user_id": "U4H19D1D2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aWsu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UUE6E1LA1"
                            },
                            {
                                "type": "text",
                                "text": " I don't have any papers I'd recommend.\nIf you are doing NN classification with back propagation then you are just using the chain rule of derivatives to calculate the changes to the network weights to minimise total network error, the derivatives being those of the activation functions in your nodes and the learning rate basically how far down the slope you want to step. Typically you would choose the activation functions only.\nIf you are doing decision trees (boosted and\/or ensemble \/ RF) then you splitting based on the most effective split point in the most effective dimension, usually assuming a linear gradient wrt that dimension.\nIf you are doing metaheuristic search then these are usually based on a pseudo biological explanation, like genetic crossing and mutation in populations, or the swarming nature of insects around some energy source, but all really boil down to guided brute force, these algos don't bear any resemblance to anything mathematical in the underlying system being optimised.\n\nI think the problem you are having getting started is that every single non-paper based method of optimising anything has fallen under the umbrella term of ML, mainly because it enables the fading coding\/developer tech industry to pivot to a post-coding 'data science' industry, this makes is really difficult to discuss in general terms.\n\nIf I was getting started today I would start with simple NN classifier, read up on it and code a network solver.\nIf you wanted to look at something more unsupervised then someone has decided to name a fairly general method 'Q-Learning', look this up."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UUE6E1LA1"
                ],
                "count": 1
            }
        ]
    }
]