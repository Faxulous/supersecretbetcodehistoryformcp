[
    {
        "user": "U0143UVG294",
        "type": "message",
        "ts": "1659307461.339269",
        "client_msg_id": "552bed8f-8304-4410-bcda-aa84845f6b43",
        "text": "Hi all long time since chatting.  I have been trying some strategies with Aussie and NZ greyhound racing and still don't have an edge yet.  So back to learning and I have come across SVM - Support Vector Machine regression tool which I want to apply to greyhound data.  Some of the X inputs will be form, speed, rating, starting odds etc and some of my own inputs.  However for the Y inputs which are the results, should I enter say 1 (True) for the winner and then -1 (False) for the other 7 runners?  OR should I enter the actual finishing positions 1 thru 8?    I am wondering if training the model with positions 1-8 may introduce errors OR be too difficult?  I was also thinking I could just set positions 1-3 True and everything else False as most of my strategies are for Lay bets?   I  have started any coding yet for the model but am going to use Accord.MachineLearning.VectorMachines.Learning in the .NET library.",
        "team": "T4G9NBD2M",
        "user_team": "T4G9NBD2M",
        "source_team": "T4G9NBD2M",
        "user_profile": {
            "avatar_hash": "51219a88384f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-06-03\/1154830931446_51219a88384f7ea69d26_72.jpg",
            "first_name": "",
            "real_name": "Troy Edwards",
            "display_name": "Troy Edwards",
            "team": "T4G9NBD2M",
            "name": "troy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1659307461.339269",
        "reply_count": 8,
        "reply_users_count": 4,
        "latest_reply": "1659404093.057999",
        "reply_users": [
            "UBS7QANF3",
            "U01EQMX079B",
            "U0143UVG294",
            "U01C12ZEADQ"
        ],
        "replies": [
            {
                "user": "UBS7QANF3",
                "ts": "1659338939.091759"
            },
            {
                "user": "U01EQMX079B",
                "ts": "1659343293.876459"
            },
            {
                "user": "U0143UVG294",
                "ts": "1659346941.588159"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1659346972.755469"
            },
            {
                "user": "U0143UVG294",
                "ts": "1659347349.541199"
            },
            {
                "user": "UBS7QANF3",
                "ts": "1659347580.832029"
            },
            {
                "user": "U01C12ZEADQ",
                "ts": "1659348304.337979"
            },
            {
                "user": "U0143UVG294",
                "ts": "1659404093.057999"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rQ9R5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi all long time since chatting.  I have been trying some strategies with Aussie and NZ greyhound racing and still don't have an edge yet.  So back to learning and I have come across SVM - Support Vector Machine regression tool which I want to apply to greyhound data.  Some of the X inputs will be form, speed, rating, starting odds etc and some of my own inputs.  However for the Y inputs which are the results, should I enter say 1 (True) for the winner and then -1 (False) for the other 7 runners?  OR should I enter the actual finishing positions 1 thru 8?    I am wondering if training the model with positions 1-8 may introduce errors OR be too difficult?  I was also thinking I could just set positions 1-3 True and everything else False as most of my strategies are for Lay bets?   I  have started any coding yet for the model but am going to use Accord.MachineLearning.VectorMachines.Learning in the .NET library."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]